{
	"$schema": "http://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json#",
	"contentVersion": "1.0.0.0",
	"parameters": {
		"factoryName": {
			"type": "string",
			"metadata": "Data Factory name",
			"defaultValue": "nsridynamicssandbox"
		}
	},
	"variables": {
		"factoryId": "[concat('Microsoft.DataFactory/factories/', parameters('factoryName'))]"
	},
	"resources": [
		{
			"name": "[concat(parameters('factoryName'), '/D365 Update DonorOrder')]",
			"type": "Microsoft.DataFactory/factories/dataflows",
			"apiVersion": "2018-06-01",
			"properties": {
				"description": "Contact, MG, Bankdetails",
				"type": "MappingDataFlow",
				"typeProperties": {
					"sources": [
						{
							"dataset": {
								"referenceName": "DataverseDonorOrder",
								"type": "DatasetReference"
							},
							"name": "donororder"
						},
						{
							"dataset": {
								"referenceName": "DataverseTransaction",
								"type": "DatasetReference"
							},
							"name": "transaction"
						}
					],
					"sinks": [
						{
							"linkedService": {
								"referenceName": "sandbox",
								"type": "LinkedServiceReference"
							},
							"name": "DonorOrderUpdate"
						}
					],
					"transformations": [
						{
							"name": "joindonorordertransaction"
						},
						{
							"name": "FilterDonorOrders"
						},
						{
							"name": "DerivedDonorOrderKey"
						},
						{
							"name": "SelectTransaction"
						},
						{
							"name": "FilterTransactions"
						},
						{
							"name": "AlterDonorOrder"
						},
						{
							"name": "SelectDonorOrderFinal"
						},
						{
							"name": "DerivedTransactionKey"
						}
					],
					"scriptLines": [
						"source(output(",
						"          cog_donororderid as string,",
						"          cog_paymentmadename as string,",
						"          cog_donationreasonname as string,",
						"          cog_resendname as string,",
						"          cog_upsell as boolean,",
						"          modifiedon as timestamp,",
						"          cog_donororderfromname as string,",
						"          overriddencreatedon as timestamp,",
						"          statuscodename as string,",
						"          cog_dateassigned as timestamp,",
						"          cog_delivery_tax_transname as string,",
						"          cog_balanceamount_base as decimal(38,2),",
						"          cog_totalticketamount_base as decimal(38,0),",
						"          transactioncurrencyidname as string,",
						"          cog_npodoc_tax_transname as string,",
						"          cog_searescuecampaignname as string,",
						"          cog_bankdetailsname as string,",
						"          cog_leadtype as integer,",
						"          cog_followupdate as timestamp,",
						"          cog_npodoc_receipt as boolean,",
						"          cog_sendticketsname as string,",
						"          cog_description as string,",
						"          cog_balanceamount as decimal(38,2),",
						"          cog_communicationlanguagename as string,",
						"          cog_campaignname as string,",
						"          cog_totalticketamount_state as integer,",
						"          cog_accessdb_lnglogno as string,",
						"          cog_sendwelcomepackdate as timestamp,",
						"          statuscode as integer,",
						"          cog_sendwelcomepackname as string,",
						"          cog_dateconverted as timestamp,",
						"          cog_contactyominame as string,",
						"          cog_paymentmethodname as string,",
						"          cog_paidamount as decimal(38,0),",
						"          cog_leadtypename as string,",
						"          cog_npodoc_tax_annuallyname as string,",
						"          cog_source as integer,",
						"          cog_ticketamount as decimal(38,0),",
						"          statecodename as string,",
						"          cog_paymenttype as integer,",
						"          exchangerate as decimal(38,10),",
						"          cog_npodoc_equityname as string,",
						"          cog_searescuecampaign as integer,",
						"          cog_npodoc_tax_trans as boolean,",
						"          cog_npoadministrationafrikaanstext as string,",
						"          createdon as timestamp,",
						"          cog_cancellreasonname as string,",
						"          cog_paymentmethod as integer,",
						"          cog_ticketamount_base as decimal(38,0),",
						"          cog_administrationaccountyominame as string,",
						"          cog_nameonvessel as string,",
						"          cog_npodoc_sendmethod as integer,",
						"          cog_donotcreatenpodocumentname as string,",
						"          cog_resend as boolean,",
						"          cog_communicationlanguage as integer,",
						"          cog_competition as integer,",
						"          cog_donationreason as integer,",
						"          owneridyominame as string,",
						"          cog_sendpaymentdetails as boolean,",
						"          timezoneruleversionnumber as integer,",
						"          cof_datecancelled as timestamp,",
						"          owningbusinessunitname as string,",
						"          cog_administrationaccountname as string,",
						"          cog_sendpaymentdetailsdate as timestamp,",
						"          cog_npodoc_receiptname as string,",
						"          cog_paymenttypename as string,",
						"          cog_transactionname as string,",
						"          cog_datasource as integer,",
						"          cog_stationname as string,",
						"          createdonbehalfbyname as string,",
						"          cog_delivery_receipt as boolean,",
						"          owneridtype as string,",
						"          cog_cancellreason as integer,",
						"          cog_delivery_tax_trans as boolean,",
						"          owneridname as string,",
						"          modifiedonbehalfbyname as string,",
						"          cog_contactname as string,",
						"          cog_delivery_equityname as string,",
						"          cog_accessdb_strcompanyname as string,",
						"          cog_npodoc_equity as boolean,",
						"          cog_npodocumentenglishtext as string,",
						"          cog_totalticketamount as decimal(38,0),",
						"          cog_bankreference as string,",
						"          cog_donorleadname as string,",
						"          cog_name as string,",
						"          cog_sendwelcomepack as boolean,",
						"          cog_npoadministrationenglishtext as string,",
						"          cog_donationamount_base as decimal(38,0),",
						"          cog_sendpaymentdetailsname as string,",
						"          cog_datebanked as timestamp,",
						"          cog_paidamount_base as decimal(38,0),",
						"          cog_npodoc_tax_annually as boolean,",
						"          cog_completedonororder as boolean,",
						"          cog_sourcename as string,",
						"          createdonbehalfbyyominame as string,",
						"          cog_noofdonortickets_state as integer,",
						"          cog_noofdonortickets as integer,",
						"          cog_accountname as string,",
						"          cog_administeredname as string,",
						"          cog_donationamount as decimal(38,0),",
						"          cog_administrationcontactyominame as string,",
						"          cog_assignticketnumbersname as string,",
						"          cog_datepaid as timestamp,",
						"          cog_delivery_receiptname as string,",
						"          cog_numberoftickets as integer,",
						"          cog_noofdonortickets_date as timestamp,",
						"          cog_donororderfrom as integer,",
						"          cog_createticketrowsname as string,",
						"          cog_donationtype as integer,",
						"          createdbyname as string,",
						"          cog_accountyominame as string,",
						"          modifiedbyyominame as string,",
						"          cog_donationtypename as string,",
						"          cog_administrationcontactname as string,",
						"          modifiedonbehalfbyyominame as string,",
						"          utcconversiontimezonecode as integer,",
						"          cog_sendtickets as boolean,",
						"          cog_upsellname as string,",
						"          cog_assignticketnumbers as boolean,",
						"          importsequencenumber as integer,",
						"          statecode as integer,",
						"          cog_paymentmade as boolean,",
						"          versionnumber as long,",
						"          cog_delivery_equity as boolean,",
						"          cog_npodocumentafrikaanstext as string,",
						"          cog_completedonorordername as string,",
						"          cog_npodoc_sendmethodname as string,",
						"          cog_totalticketamount_date as timestamp,",
						"          modifiedbyname as string,",
						"          createdbyyominame as string,",
						"          cog_administered as boolean,",
						"          cog_competitionname as string,",
						"          cog_donotcreatenpodocument as boolean,",
						"          cog_shutoffdate as timestamp,",
						"          cog_createticketrows as boolean,",
						"          cog_datasourcename as string,",
						"          cog_donorlead as string,",
						"          cog_station as string,",
						"          createdonbehalfby as string,",
						"          cog_administrationcontact as string,",
						"          owninguser as string,",
						"          cog_bankdetails as string,",
						"          cog_contact as string,",
						"          modifiedby as string,",
						"          transactioncurrencyid as string,",
						"          cog_administrationaccount as string,",
						"          modifiedonbehalfby as string,",
						"          cog_transaction as string,",
						"          ownerid as string,",
						"          cog_campaign as string,",
						"          {@odata.etag} as string,",
						"          createdby as string,",
						"          owningbusinessunit as string,",
						"          cog_account as string,",
						"          owningteam as string",
						"     ),",
						"     allowSchemaDrift: true,",
						"     validateSchema: false,",
						"     manifestType: 'model') ~> donororder",
						"source(output(",
						"          cog_expireydate as timestamp,",
						"          versionnumber as long,",
						"          cog_searescuecampaignname as string,",
						"          createdon as timestamp,",
						"          cog_accountyominame as string,",
						"          cog_nameonvessel as string,",
						"          cog_branchcode as string,",
						"          statuscodename as string,",
						"          cog_bankname as string,",
						"          cog_paymenttype as integer,",
						"          cog_transactiondate as timestamp,",
						"          modifiedbyyominame as string,",
						"          cog_transactionamountpaid as decimal(38,2),",
						"          owneridtype as string,",
						"          cog_npodoc_sendmethodname as string,",
						"          cog_transactionamount_base as decimal(38,2),",
						"          cog_accountname as string,",
						"          modifiedbyname as string,",
						"          cog_cancelledtransactionamount_base as decimal(38,2),",
						"          cog_delivery_receipt as boolean,",
						"          cog_paymentmethodname as string,",
						"          cog_cvc as string,",
						"          owneridname as string,",
						"          overriddencreatedon as timestamp,",
						"          cog_cancelledtransactionamountnegative as decimal(38,2),",
						"          cog_npodoc_tax_transname as string,",
						"          cog_npodoc_equityname as string,",
						"          cog_delivery_equityname as string,",
						"          cog_npoadministrationenglishtext as string,",
						"          createdonbehalfbyyominame as string,",
						"          cog_transactionclosedate as timestamp,",
						"          exchangerate as decimal(38,10),",
						"          cog_transactionfromname as string,",
						"          owneridyominame as string,",
						"          cog_transactionsource as integer,",
						"          cog_npoadministrationafrikaanstext as string,",
						"          cog_searescuecampaign as integer,",
						"          cog_communicationlanguagename as string,",
						"          cog_delivery_tax_transname as string,",
						"          cog_transactionfrom as integer,",
						"          cog_delivery_receiptname as string,",
						"          cog_quantity as integer,",
						"          statecode as integer,",
						"          cog_npodocumentenglishtext as string,",
						"          timezoneruleversionnumber as integer,",
						"          cog_transactiontype as integer,",
						"          cog_transactionsourcename as string,",
						"          cog_accountnumber as string,",
						"          cog_administrationaccountname as string,",
						"          cog_cancelledtransactionamount as decimal(38,2),",
						"          cog_npodoc_tax_annuallyname as string,",
						"          statuscode as integer,",
						"          cog_batchno as string,",
						"          cog_cancelledtransactionamountnegative_base as decimal(38,2),",
						"          cog_npodoc_receipt as boolean,",
						"          cog_donotcreatenpodocumentname as string,",
						"          cog_oldtaxcertificateyear as string,",
						"          cog_transactionno as string,",
						"          createdonbehalfbyname as string,",
						"          cog_paymenttypename as string,",
						"          cog_delivery_tax_annually as boolean,",
						"          utcconversiontimezonecode as integer,",
						"          cog_accounttypename as string,",
						"          cog_transactionfailurestatus as integer,",
						"          modifiedon as timestamp,",
						"          importsequencenumber as integer,",
						"          cog_administrationcontactname as string,",
						"          cog_administeredname as string,",
						"          cog_oldtaxcertificatenumber as string,",
						"          cog_delivery_equity as boolean,",
						"          cog_contactyominame as string,",
						"          cog_divisionname as string,",
						"          cog_division as integer,",
						"          cog_transactiontypename as string,",
						"          createdbyname as string,",
						"          cog_delivery_tax_annuallyname as string,",
						"          cog_cancelledtransactionname as string,",
						"          cog_stationidname as string,",
						"          cog_accountholder as string,",
						"          cog_bankdetailsname as string,",
						"          cog_accounttype as integer,",
						"          cog_npodoc_sendmethod as integer,",
						"          cog_fiscalyear as integer,",
						"          cog_transactionid as string,",
						"          cog_communicationlanguage as integer,",
						"          cog_donotcreatenpodocument as boolean,",
						"          cog_delivery_tax_trans as boolean,",
						"          cog_administrationcontactyominame as string,",
						"          cog_npodoc_tax_annually as boolean,",
						"          cog_oldreceiptnumber as string,",
						"          cog_fiscalyearname as string,",
						"          cog_nonprofitdocumentreferencename as string,",
						"          createdbyyominame as string,",
						"          cog_transactionamountpaid_base as decimal(38,2),",
						"          transactioncurrencyidname as string,",
						"          cog_reversedreason as string,",
						"          cog_windirectinglogtrans as string,",
						"          cog_transactionamount as decimal(38,2),",
						"          owningbusinessunitname as string,",
						"          cog_transactiondescription as string,",
						"          cog_windirectddid as string,",
						"          cog_paymentmethod as integer,",
						"          cog_npodoc_tax_trans as boolean,",
						"          cog_contactname as string,",
						"          cog_bankreference as string,",
						"          modifiedonbehalfbyname as string,",
						"          cog_npodoc_equity as boolean,",
						"          cog_transactiondatepaid as timestamp,",
						"          cog_npodocumentafrikaanstext as string,",
						"          modifiedonbehalfbyyominame as string,",
						"          statecodename as string,",
						"          cog_administered as boolean,",
						"          cog_transactionfailurestatusname as string,",
						"          cog_administrationaccountyominame as string,",
						"          cog_npodoc_receiptname as string,",
						"          cog_campaignname as string,",
						"          cog_donationtypename as string,",
						"          cog_donationtype as integer,",
						"          cog_nonprofitdocumentreference as string,",
						"          cog_bank as string,",
						"          createdonbehalfby as string,",
						"          cog_administrationcontact as string,",
						"          owninguser as string,",
						"          cog_bankdetails as string,",
						"          cog_contact as string,",
						"          modifiedby as string,",
						"          transactioncurrencyid as string,",
						"          cog_stationid as string,",
						"          cog_administrationaccount as string,",
						"          modifiedonbehalfby as string,",
						"          ownerid as string,",
						"          cog_campaign as string,",
						"          cog_cancelledtransaction as string,",
						"          {@odata.etag} as string,",
						"          createdby as string,",
						"          owningbusinessunit as string,",
						"          cog_account as string,",
						"          owningteam as string",
						"     ),",
						"     allowSchemaDrift: true,",
						"     validateSchema: false,",
						"     manifestType: 'model') ~> transaction",
						"DerivedDonorOrderKey, DerivedTransactionKey join(DonorOrderKey == TransactionKey,",
						"     joinType:'left',",
						"     matchType:'exact',",
						"     ignoreSpaces: false,",
						"     broadcast: 'auto')~> joindonorordertransaction",
						"donororder filter(statuscode==181310001&&",
						"cog_competition==181310001&&",
						"cog_donororderfrom==181310000&&",
						"statecode==0&&",
						"(cog_paymentmethod==181310001||cog_paymentmethod==181310003)) ~> FilterDonorOrders",
						"FilterDonorOrders derive(DonorOrderKey = toString(cog_competition)+cog_contact+toString(cog_paymentmethod)+cog_bankdetails) ~> DerivedDonorOrderKey",
						"transaction select(mapColumn(",
						"          statuscode,",
						"          cog_transactionid,",
						"          statecode,",
						"          cog_division,",
						"          cog_contact,",
						"          cog_paymentmethod,",
						"          cog_bankdetails",
						"     ),",
						"     skipDuplicateMapInputs: false,",
						"     skipDuplicateMapOutputs: false) ~> SelectTransaction",
						"SelectTransaction filter(statecode==0&&statuscode==1) ~> FilterTransactions",
						"SelectDonorOrderFinal alterRow(upsertIf(true())) ~> AlterDonorOrder",
						"joindonorordertransaction select(mapColumn(",
						"          cog_donororderid,",
						"          cog_competition,",
						"          cog_contact = donororder@cog_contact,",
						"          cog_paymentmethod = donororder@cog_paymentmethod,",
						"          cog_bankdetails = donororder@cog_bankdetails,",
						"          cog_transactionid,",
						"          cog_transaction,",
						"          cog_transactionname,",
						"          cog_contactname,",
						"          cog_bankdetailsname",
						"     ),",
						"     skipDuplicateMapInputs: false,",
						"     skipDuplicateMapOutputs: false) ~> SelectDonorOrderFinal",
						"FilterTransactions derive(TransactionKey = toString(cog_division)+cog_contact+toString(cog_paymentmethod)+cog_bankdetails) ~> DerivedTransactionKey",
						"AlterDonorOrder sink(allowSchemaDrift: true,",
						"     validateSchema: false,",
						"     input(",
						"          cog_donorleadname as string,",
						"          owninguser as string,",
						"          cof_datecancelled as timestamp,",
						"          cog_donationreason as integer,",
						"          cog_paymentmethodname as string,",
						"          cog_ticketamount_base as decimal(38,0),",
						"          cog_npodocumentafrikaanstext as string,",
						"          cog_donotcreatenpodocumentname as string,",
						"          cog_paidamount as decimal(38,0),",
						"          cog_sendpaymentdetails as boolean,",
						"          cog_assignticketnumbers as boolean,",
						"          transactioncurrencyid as string,",
						"          cog_noofdonortickets_state as integer,",
						"          cog_shutoffdate as timestamp,",
						"          cog_donationamount_base as decimal(38,0),",
						"          cog_sendpaymentdetailsdate as timestamp,",
						"          cog_npodoc_sendmethodname as string,",
						"          cog_paymenttype as integer,",
						"          cog_paidamount_base as decimal(38,0),",
						"          cog_delivery_receipt as boolean,",
						"          createdbyname as string,",
						"          cog_administered as boolean,",
						"          cog_sendwelcomepackname as string,",
						"          modifiedbyname as string,",
						"          cog_npodoc_tax_trans as boolean,",
						"          createdonbehalfbyyominame as string,",
						"          cog_sendtickets as boolean,",
						"          statuscodename as string,",
						"          cog_datasource as integer,",
						"          statuscode as integer,",
						"          cog_npodoc_receiptname as string,",
						"          cog_sendticketsname as string,",
						"          createdonbehalfbyname as string,",
						"          cog_administrationcontactname as string,",
						"          ownerid as string,",
						"          cog_contactname as string,",
						"          cog_donationreasonname as string,",
						"          owningteam as string,",
						"          cog_nameonvessel as string,",
						"          cog_name as string,",
						"          cog_npodoc_sendmethod as integer,",
						"          cog_noofdonortickets_date as timestamp,",
						"          cog_leadtypename as string,",
						"          cog_npodocumentenglishtext as string,",
						"          cog_cancellreasonname as string,",
						"          exchangerate as decimal(38,10),",
						"          cog_contactyominame as string,",
						"          cog_administrationaccountname as string,",
						"          cog_followupdate as timestamp,",
						"          cog_account as string,",
						"          modifiedonbehalfby as string,",
						"          versionnumber as long,",
						"          cog_paymentmade as boolean,",
						"          cog_administrationaccountyominame as string,",
						"          cog_totalticketamount_state as integer,",
						"          cog_communicationlanguagename as string,",
						"          cog_paymenttypename as string,",
						"          cog_createticketrows as boolean,",
						"          owningbusinessunit as string,",
						"          cog_contact as string,",
						"          cog_stationname as string,",
						"          cog_delivery_tax_transname as string,",
						"          cog_paymentmethod as integer,",
						"          cog_sendpaymentdetailsname as string,",
						"          modifiedonbehalfbyname as string,",
						"          cog_delivery_equity as boolean,",
						"          cog_sourcename as string,",
						"          cog_administrationaccount as string,",
						"          importsequencenumber as integer,",
						"          cog_station as string,",
						"          cog_administrationcontact as string,",
						"          createdon as timestamp,",
						"          cog_resendname as string,",
						"          overriddencreatedon as timestamp,",
						"          cog_npodoc_equityname as string,",
						"          cog_bankreference as string,",
						"          utcconversiontimezonecode as integer,",
						"          cog_upsellname as string,",
						"          cog_donororderid as string,",
						"          cog_competition as integer,",
						"          cog_totalticketamount_date as timestamp,",
						"          cog_balanceamount as decimal(38,2),",
						"          cog_balanceamount_base as decimal(38,2),",
						"          cog_transactionname as string,",
						"          cog_donationamount as decimal(38,0),",
						"          cog_completedonororder as boolean,",
						"          cog_npoadministrationafrikaanstext as string,",
						"          cog_npodoc_tax_annuallyname as string,",
						"          cog_source as integer,",
						"          cog_numberoftickets as integer,",
						"          cog_donorlead as string,",
						"          cog_administrationcontactyominame as string,",
						"          cog_bankdetails as string,",
						"          cog_accessdb_lnglogno as string,",
						"          cog_ticketamount as decimal(38,0),",
						"          cog_donationtypename as string,",
						"          statecode as integer,",
						"          cog_datasourcename as string,",
						"          owneridyominame as string,",
						"          cog_donationtype as integer,",
						"          statecodename as string,",
						"          cog_donororderfrom as integer,",
						"          cog_accountyominame as string,",
						"          cog_delivery_receiptname as string,",
						"          createdbyyominame as string,",
						"          transactioncurrencyidname as string,",
						"          cog_npodoc_tax_transname as string,",
						"          modifiedon as timestamp,",
						"          cog_cancellreason as integer,",
						"          cog_donotcreatenpodocument as boolean,",
						"          cog_dateconverted as timestamp,",
						"          modifiedby as string,",
						"          cog_paymentmadename as string,",
						"          cog_npodoc_tax_annually as boolean,",
						"          cog_delivery_tax_trans as boolean,",
						"          cog_sendwelcomepack as boolean,",
						"          cog_delivery_equityname as string,",
						"          cog_bankdetailsname as string,",
						"          cog_leadtype as integer,",
						"          modifiedbyyominame as string,",
						"          cog_searescuecampaignname as string,",
						"          modifiedonbehalfbyyominame as string,",
						"          cog_datebanked as timestamp,",
						"          cog_npodoc_equity as boolean,",
						"          cog_resend as boolean,",
						"          cog_totalticketamount_base as decimal(38,0),",
						"          cog_completedonorordername as string,",
						"          cog_createticketrowsname as string,",
						"          cog_donororderfromname as string,",
						"          cog_npodoc_receipt as boolean,",
						"          createdby as string,",
						"          cog_npoadministrationenglishtext as string,",
						"          owneridname as string,",
						"          cog_datepaid as timestamp,",
						"          cog_administeredname as string,",
						"          cog_communicationlanguage as integer,",
						"          owningbusinessunitname as string,",
						"          cog_noofdonortickets as integer,",
						"          cog_searescuecampaign as integer,",
						"          cog_accountname as string,",
						"          cog_dateassigned as timestamp,",
						"          cog_accessdb_strcompanyname as string,",
						"          owneridtype as string,",
						"          cog_campaign as string,",
						"          cog_totalticketamount as decimal(38,0),",
						"          cog_competitionname as string,",
						"          cog_transaction as string,",
						"          cog_sendwelcomepackdate as timestamp,",
						"          createdonbehalfby as string,",
						"          cog_assignticketnumbersname as string,",
						"          cog_upsell as boolean,",
						"          timezoneruleversionnumber as integer,",
						"          cog_description as string,",
						"          cog_campaignname as string,",
						"          {owninguser@aadobjectid@azureactivedirectoryobjectid} as string,",
						"          {owningteam@aadobjectid_membershiptype@azureactivedirectoryobjectid} as string,",
						"          {owningteam@aadobjectid_membershiptype@membershiptype} as integer,",
						"          {cog_account@cog_no@cog_erpvendornumber} as string,",
						"          {modifiedonbehalfby@aadobjectid@azureactivedirectoryobjectid} as string,",
						"          {cog_administrationaccount@cog_no@cog_erpvendornumber} as string,",
						"          {modifiedby@aadobjectid@azureactivedirectoryobjectid} as string,",
						"          {createdby@aadobjectid@azureactivedirectoryobjectid} as string,",
						"          {cog_transaction@cog_donorodercontactaggregation@cog_bankdetails} as string,",
						"          {cog_transaction@cog_donorodercontactaggregation@cog_contact} as string,",
						"          {cog_transaction@cog_donorodercontactaggregation@cog_division} as integer,",
						"          {cog_transaction@cog_donorodercontactaggregation@cog_paymentmethod} as integer,",
						"          {createdonbehalfby@aadobjectid@azureactivedirectoryobjectid} as string",
						"     ),",
						"     store: 'dynamics',",
						"     format: 'dynamicsformat',",
						"     entity: 'cog_donororder',",
						"     timeout: 30,",
						"     deletable: false,",
						"     insertable: false,",
						"     updateable: false,",
						"     upsertable: true,",
						"     mapColumn(",
						"          cog_bankdetails,",
						"          cog_contact,",
						"          cog_paymentmethod,",
						"          cog_competition,",
						"          cog_donororderid",
						"     )) ~> DonorOrderUpdate"
					]
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/CopyDataOnlyContact')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "CopyDataContact",
						"type": "Copy",
						"dependsOn": [],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "CommonDataServiceForAppsSource",
								"additionalColumns": [
									{
										"name": "Target",
										"value": "account"
									}
								],
								"query": "<fetch mapping=\"logical\" output-format=\"xml-platform\" version=\"1.0\" no-lock=\"false\" distinct=\"true\"><entity name=\"contact\"><attribute name=\"fullname\"/><attribute name=\"entityimage_url\"/><attribute name=\"parent_contactid\"/><order descending=\"false\" attribute=\"cog_contactnumber\"/><attribute name=\"parentcustomerid\"/><attribute name=\"telephone1\"/><attribute name=\"fullname\"/><attribute name=\"emailaddress1\"/><attribute name=\"mobilephone\"/><attribute name=\"jobtitle\"/><attribute name=\"nsri_extensionnumber\"/><attribute name=\"salutation\"/><attribute name=\"cog_contactnumber\"/><attribute name=\"lastname\"/><attribute name=\"firstname\"/><attribute name=\"contactid\"/><filter type=\"and\"><condition attribute=\"statecode\" operator=\"eq\" value=\"0\"/><condition attribute=\"fullname\" operator=\"eq\" value=\"Peter Jones\"/></filter></entity></fetch>"
							},
							"sink": {
								"type": "CommonDataServiceForAppsSink",
								"writeBatchSize": 10,
								"writeBehavior": "upsert",
								"ignoreNullValues": true
							},
							"enableStaging": false,
							"translator": {
								"type": "TabularTranslator",
								"mappings": [
									{
										"source": {
											"name": "contactid",
											"type": "Guid"
										},
										"sink": {
											"name": "contactid",
											"type": "Guid"
										}
									},
									{
										"source": {
											"name": "parentcustomerid",
											"type": "Guid"
										},
										"sink": {
											"name": "parentcustomerid",
											"type": "Guid"
										}
									},
									{
										"source": {
											"name": "firstname",
											"type": "String"
										},
										"sink": {
											"name": "firstname",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "lastname",
											"type": "String"
										},
										"sink": {
											"name": "lastname",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "Target",
											"type": "String"
										},
										"sink": {
											"name": "parentcustomerid@EntityReference"
										}
									}
								]
							}
						},
						"inputs": [
							{
								"referenceName": "DataverseEntityContactSandbox",
								"type": "DatasetReference",
								"parameters": {}
							}
						],
						"outputs": [
							{
								"referenceName": "DataverseEntityContactTraining",
								"type": "DatasetReference",
								"parameters": {}
							}
						]
					}
				],
				"policy": {
					"elapsedTimeMetric": {},
					"cancelAfter": {}
				},
				"annotations": []
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/transaction lookup key for each on DO')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "Lookup key on trx",
						"type": "Lookup",
						"dependsOn": [],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "CommonDataServiceForAppsSource",
								"query": "<fetch version=\"1.0\" mapping=\"logical\" no-lock=\"false\" distinct=\"true\">\n\t<entity name=\"cog_transaction\">\n\t\t<attribute name=\"cog_contact\"/>\n\t\t<attribute name=\"cog_paymentmethod\"/>\n\t\t<attribute name=\"cog_transactionid\"/>\n\t\t<attribute name=\"cog_division\"/>\n\t\t<attribute name=\"cog_bankdetails\"/>\n\t\t<attribute name=\"statuscode\"/>\n\t\t<filter type=\"and\">\n\t\t\t<condition attribute=\"statuscode\" operator=\"eq\" value=\"1\"/>\n\t\t\t<condition attribute=\"cog_division\" operator=\"eq\" value=\"181310001\"/>\n\t\t\t<condition attribute=\"cog_transactionfrom\" operator=\"eq\" value=\"181310000\"/>\n\t\t\t<condition attribute=\"cog_paymentmethod\" operator=\"in\">\n\t\t\t\t<value>181310001</value>\n\t\t\t\t<value>181310003</value>\n\t\t\t</condition>\n\t\t</filter>\n\t</entity>\n</fetch>"
							},
							"dataset": {
								"referenceName": "DataverseTransaction",
								"type": "DatasetReference",
								"parameters": {}
							},
							"firstRowOnly": false
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {},
					"cancelAfter": {}
				},
				"annotations": []
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/D365 Create Transactions')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "CreateTransaction",
						"type": "ExecuteDataFlow",
						"dependsOn": [],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"dataflow": {
								"referenceName": "D365 Transaction_copy1",
								"type": "DataFlowReference",
								"parameters": {},
								"datasetParameters": {
									"donororder": {},
									"bankdetails": {},
									"CreateTransaction": {}
								}
							},
							"staging": {},
							"compute": {
								"coreCount": 16,
								"computeType": "General"
							},
							"traceLevel": "Fine"
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {},
					"cancelAfter": {}
				},
				"annotations": []
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/D365 DonorOrder Transaction Lookup')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "Update Donor Order",
						"type": "ExecuteDataFlow",
						"dependsOn": [],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"dataflow": {
								"referenceName": "D365 Update DonorOrder",
								"type": "DataFlowReference",
								"parameters": {},
								"datasetParameters": {
									"donororder": {},
									"transaction": {},
									"DonorOrderUpdate": {}
								}
							},
							"staging": {},
							"compute": {
								"coreCount": 16,
								"computeType": "General"
							},
							"traceLevel": "Fine"
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {},
					"cancelAfter": {}
				},
				"annotations": []
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/dataflows/D365 Update DonorOrder')]"
			]
		}
	]
}