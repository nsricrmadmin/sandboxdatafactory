{
	"$schema": "http://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json#",
	"contentVersion": "1.0.0.0",
	"parameters": {
		"factoryName": {
			"type": "string",
			"metadata": "Data Factory name",
			"defaultValue": "nsridynamicssandbox"
		},
		"Dynamics1_password": {
			"type": "secureString",
			"metadata": "Secure string for 'password' of 'Dynamics1'"
		},
		"nsridynamicssandox_password": {
			"type": "secureString",
			"metadata": "Secure string for 'password' of 'nsridynamicssandox'"
		},
		"sandbox_password": {
			"type": "secureString",
			"metadata": "Secure string for 'password' of 'sandbox'"
		},
		"sandboxdatalake_accountKey": {
			"type": "secureString",
			"metadata": "Secure string for 'accountKey' of 'sandboxdatalake'"
		},
		"training_password": {
			"type": "secureString",
			"metadata": "Secure string for 'password' of 'training'"
		},
		"Dynamics1_properties_typeProperties_username": {
			"type": "string",
			"defaultValue": "crmadmin@searescue.org.za"
		},
		"nsridynamicssandox_properties_typeProperties_username": {
			"type": "string",
			"defaultValue": "crmadmin@searescue.org.za"
		},
		"sandbox_properties_typeProperties_username": {
			"type": "string",
			"defaultValue": "crmadmin@searescue.org.za"
		},
		"sandboxdatalake_properties_typeProperties_url": {
			"type": "string",
			"defaultValue": "https://nsridynamicssandbox.dfs.core.windows.net/"
		},
		"training_properties_typeProperties_username": {
			"type": "string",
			"defaultValue": "crmadmin@searescue.org.za"
		}
	},
	"variables": {
		"factoryId": "[concat('Microsoft.DataFactory/factories/', parameters('factoryName'))]"
	},
	"resources": [
		{
			"name": "[concat(parameters('factoryName'), '/CopyDataOnlyContact')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "CopyDataContact",
						"type": "Copy",
						"dependsOn": [],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "CommonDataServiceForAppsSource",
								"additionalColumns": [
									{
										"name": "Target",
										"value": "account"
									}
								],
								"query": "<fetch mapping=\"logical\" output-format=\"xml-platform\" version=\"1.0\" no-lock=\"false\" distinct=\"true\"><entity name=\"contact\"><attribute name=\"fullname\"/><attribute name=\"entityimage_url\"/><attribute name=\"parent_contactid\"/><order descending=\"false\" attribute=\"cog_contactnumber\"/><attribute name=\"parentcustomerid\"/><attribute name=\"telephone1\"/><attribute name=\"fullname\"/><attribute name=\"emailaddress1\"/><attribute name=\"mobilephone\"/><attribute name=\"jobtitle\"/><attribute name=\"nsri_extensionnumber\"/><attribute name=\"salutation\"/><attribute name=\"cog_contactnumber\"/><attribute name=\"lastname\"/><attribute name=\"firstname\"/><attribute name=\"contactid\"/><filter type=\"and\"><condition attribute=\"statecode\" operator=\"eq\" value=\"0\"/><condition attribute=\"fullname\" operator=\"eq\" value=\"Peter Jones\"/></filter></entity></fetch>"
							},
							"sink": {
								"type": "CommonDataServiceForAppsSink",
								"writeBatchSize": 10,
								"writeBehavior": "upsert",
								"ignoreNullValues": true
							},
							"enableStaging": false,
							"translator": {
								"type": "TabularTranslator",
								"mappings": [
									{
										"source": {
											"name": "contactid",
											"type": "Guid"
										},
										"sink": {
											"name": "contactid",
											"type": "Guid"
										}
									},
									{
										"source": {
											"name": "parentcustomerid",
											"type": "Guid"
										},
										"sink": {
											"name": "parentcustomerid",
											"type": "Guid"
										}
									},
									{
										"source": {
											"name": "firstname",
											"type": "String"
										},
										"sink": {
											"name": "firstname",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "lastname",
											"type": "String"
										},
										"sink": {
											"name": "lastname",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "Target",
											"type": "String"
										},
										"sink": {
											"name": "parentcustomerid@EntityReference"
										}
									}
								]
							}
						},
						"inputs": [
							{
								"referenceName": "DataverseEntityContactSandbox",
								"type": "DatasetReference",
								"parameters": {}
							}
						],
						"outputs": [
							{
								"referenceName": "DataverseEntityContactTraining",
								"type": "DatasetReference",
								"parameters": {}
							}
						]
					}
				],
				"policy": {
					"elapsedTimeMetric": {},
					"cancelAfter": {}
				},
				"annotations": []
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/DataverseEntityContactSandbox')]",
				"[concat(variables('factoryId'), '/datasets/DataverseEntityContactTraining')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/CopySample')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "Sample",
						"type": "ExecuteDataFlow",
						"dependsOn": [],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"dataflow": {
								"referenceName": "ContactSample_D365",
								"type": "DataFlowReference",
								"parameters": {},
								"datasetParameters": {
									"sandboxcontact": {},
									"sink1": {}
								}
							},
							"staging": {},
							"compute": {
								"coreCount": 8,
								"computeType": "General"
							},
							"traceLevel": "Fine"
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {},
					"cancelAfter": {}
				},
				"annotations": []
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/dataflows/ContactSample_D365')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/Create Transaction Lake')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "Data flow1",
						"type": "ExecuteDataFlow",
						"dependsOn": [],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"dataflow": {
								"referenceName": "TransactionfromLakeFile",
								"type": "DataFlowReference",
								"parameters": {},
								"datasetParameters": {
									"donororder": {},
									"bankdetails": {},
									"sink1": {}
								}
							},
							"staging": {},
							"compute": {
								"coreCount": 8,
								"computeType": "General"
							},
							"traceLevel": "Fine"
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {},
					"cancelAfter": {}
				},
				"annotations": []
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/dataflows/TransactionfromLakeFile')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/D365 Create Transactions')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "CreateTransaction",
						"type": "ExecuteDataFlow",
						"dependsOn": [],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"dataflow": {
								"referenceName": "D365 Transaction_copy1",
								"type": "DataFlowReference",
								"parameters": {},
								"datasetParameters": {
									"donororder": {},
									"bankdetails": {},
									"CreateTransaction": {}
								}
							},
							"staging": {},
							"compute": {
								"coreCount": 16,
								"computeType": "General"
							},
							"traceLevel": "Fine"
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {},
					"cancelAfter": {}
				},
				"annotations": []
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/dataflows/D365 Transaction_copy1')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/D365 DO update with Trans')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "Update Donor Order",
						"type": "ExecuteDataFlow",
						"dependsOn": [],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"dataflow": {
								"referenceName": "D365 Update DonorOrder",
								"type": "DataFlowReference",
								"parameters": {},
								"datasetParameters": {
									"donororder": {},
									"transaction": {},
									"DonorOrderUpdate": {}
								}
							},
							"staging": {},
							"compute": {
								"coreCount": 16,
								"computeType": "General"
							},
							"traceLevel": "Fine"
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {},
					"cancelAfter": {}
				},
				"annotations": []
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/dataflows/D365 Update DonorOrder')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/Transaction to DO copy activity')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "Copy data lookup transaction keys",
						"type": "Copy",
						"dependsOn": [],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "CommonDataServiceForAppsSource",
								"query": "<fetch version=\"1.0\" mapping=\"logical\" no-lock=\"false\" distinct=\"true\">\n\t<entity name=\"cog_transaction\">\n\t\t<attribute name=\"cog_contact\"/>\n\t\t<attribute name=\"cog_paymentmethod\"/>\n\t\t<attribute name=\"cog_transactionid\"/>\n\t\t<attribute name=\"cog_division\"/>\n\t\t<attribute name=\"cog_bankdetails\"/>\n\t\t<attribute name=\"statuscode\"/>\n                <attribute name=\"cog_trans_do_contact\"/>\n\t\t<filter type=\"and\">\n\t\t\t<condition attribute=\"statuscode\" operator=\"eq\" value=\"1\"/>\n\t\t\t<condition attribute=\"cog_division\" operator=\"eq\" value=\"181310001\"/>\n\t\t\t<condition attribute=\"cog_transactionfrom\" operator=\"eq\" value=\"181310000\"/>\n\t\t\t<condition attribute=\"cog_paymentmethod\" operator=\"in\">\n\t\t\t\t<value>181310001</value>\n\t\t\t\t<value>181310003</value>\n\t\t\t</condition>\n\t\t</filter>\n\t</entity>\n</fetch>"
							},
							"sink": {
								"type": "CommonDataServiceForAppsSink",
								"writeBatchSize": 10,
								"writeBehavior": "upsert",
								"ignoreNullValues": true
							},
							"enableStaging": false
						},
						"inputs": [
							{
								"referenceName": "DataverseTransaction",
								"type": "DatasetReference",
								"parameters": {}
							}
						],
						"outputs": [
							{
								"referenceName": "DataverseDonorOrder",
								"type": "DatasetReference",
								"parameters": {}
							}
						]
					}
				],
				"policy": {
					"elapsedTimeMetric": {},
					"cancelAfter": {}
				},
				"annotations": []
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/DataverseTransaction')]",
				"[concat(variables('factoryId'), '/datasets/DataverseDonorOrder')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/transaction lookup key for each on DO')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "Lookup key on trx",
						"type": "Lookup",
						"dependsOn": [],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "CommonDataServiceForAppsSource",
								"query": "<fetch version=\"1.0\" mapping=\"logical\" no-lock=\"false\" distinct=\"true\">\n\t<entity name=\"cog_transaction\">\n\t\t<attribute name=\"cog_contact\"/>\n\t\t<attribute name=\"cog_paymentmethod\"/>\n\t\t<attribute name=\"cog_transactionid\"/>\n\t\t<attribute name=\"cog_division\"/>\n\t\t<attribute name=\"cog_bankdetails\"/>\n\t\t<attribute name=\"statuscode\"/>\n\t\t<filter type=\"and\">\n\t\t\t<condition attribute=\"statuscode\" operator=\"eq\" value=\"1\"/>\n\t\t\t<condition attribute=\"cog_division\" operator=\"eq\" value=\"181310001\"/>\n\t\t\t<condition attribute=\"cog_transactionfrom\" operator=\"eq\" value=\"181310000\"/>\n\t\t\t<condition attribute=\"cog_paymentmethod\" operator=\"in\">\n\t\t\t\t<value>181310001</value>\n\t\t\t\t<value>181310003</value>\n\t\t\t</condition>\n\t\t</filter>\n\t</entity>\n</fetch>"
							},
							"dataset": {
								"referenceName": "DataverseTransaction",
								"type": "DatasetReference",
								"parameters": {}
							},
							"firstRowOnly": false
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {},
					"cancelAfter": {}
				},
				"annotations": []
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/DataverseTransaction')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/DataverseBankDetail')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "sandbox",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "CommonDataServiceForAppsEntity",
				"schema": [],
				"typeProperties": {
					"entityName": "cog_bankdetails"
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/sandbox')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/DataverseDonorOrder')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "sandbox",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "CommonDataServiceForAppsEntity",
				"schema": [],
				"typeProperties": {
					"entityName": "cog_donororder"
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/sandbox')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/DataverseEntityContactSandbox')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "sandbox",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "CommonDataServiceForAppsEntity",
				"schema": [],
				"typeProperties": {
					"entityName": "contact"
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/sandbox')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/DataverseEntityContactTraining')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "training",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "CommonDataServiceForAppsEntity",
				"schema": [],
				"typeProperties": {
					"entityName": "contact"
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/training')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/DataverseTransaction')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "sandbox",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "CommonDataServiceForAppsEntity",
				"schema": [],
				"typeProperties": {
					"entityName": "cog_transaction"
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/sandbox')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/DelimitedText1')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "sandboxdatalake",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "DelimitedText",
				"typeProperties": {
					"location": {
						"type": "AzureBlobFSLocation",
						"fileName": "cog_donororder.csv@snapshot=0a32f572-61d7-4094-9181-2d0161fa1289",
						"folderPath": "environments/nsridev/HOF Donor Orders/cog_donororder/cog_donororder.csv.snapshots",
						"fileSystem": "power-platform-dataflows"
					},
					"columnDelimiter": ",",
					"escapeChar": "\\",
					"firstRowAsHeader": true,
					"quoteChar": "\""
				},
				"schema": []
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/sandboxdatalake')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/Dynamics1')]",
			"type": "Microsoft.DataFactory/factories/linkedServices",
			"apiVersion": "2018-06-01",
			"properties": {
				"annotations": [],
				"type": "Dynamics",
				"typeProperties": {
					"deploymentType": "Online",
					"serviceUri": "https://nsritraining.crm4.dynamics.com/",
					"authenticationType": "Office365",
					"username": "[parameters('Dynamics1_properties_typeProperties_username')]",
					"password": {
						"type": "SecureString",
						"value": "[parameters('Dynamics1_password')]"
					}
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/nsridynamicssandox')]",
			"type": "Microsoft.DataFactory/factories/linkedServices",
			"apiVersion": "2018-06-01",
			"properties": {
				"annotations": [],
				"type": "Dynamics",
				"typeProperties": {
					"deploymentType": "Online",
					"serviceUri": "https://nsridev.crm4.dynamics.com",
					"authenticationType": "Office365",
					"username": "[parameters('nsridynamicssandox_properties_typeProperties_username')]",
					"password": {
						"type": "SecureString",
						"value": "[parameters('nsridynamicssandox_password')]"
					}
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/sandbox')]",
			"type": "Microsoft.DataFactory/factories/linkedServices",
			"apiVersion": "2018-06-01",
			"properties": {
				"annotations": [],
				"type": "CommonDataServiceForApps",
				"typeProperties": {
					"deploymentType": "Online",
					"serviceUri": "https://nsridev.crm4.dynamics.com/",
					"authenticationType": "Office365",
					"username": "[parameters('sandbox_properties_typeProperties_username')]",
					"password": {
						"type": "SecureString",
						"value": "[parameters('sandbox_password')]"
					}
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/sandboxdatalake')]",
			"type": "Microsoft.DataFactory/factories/linkedServices",
			"apiVersion": "2018-06-01",
			"properties": {
				"annotations": [],
				"type": "AzureBlobFS",
				"typeProperties": {
					"url": "[parameters('sandboxdatalake_properties_typeProperties_url')]",
					"accountKey": {
						"type": "SecureString",
						"value": "[parameters('sandboxdatalake_accountKey')]"
					}
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/training')]",
			"type": "Microsoft.DataFactory/factories/linkedServices",
			"apiVersion": "2018-06-01",
			"properties": {
				"annotations": [],
				"type": "CommonDataServiceForApps",
				"typeProperties": {
					"deploymentType": "Online",
					"serviceUri": "https://nsritraining.crm4.dynamics.com/",
					"authenticationType": "Office365",
					"username": "[parameters('training_properties_typeProperties_username')]",
					"password": {
						"type": "SecureString",
						"value": "[parameters('training_password')]"
					}
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/AccountSample')]",
			"type": "Microsoft.DataFactory/factories/dataflows",
			"apiVersion": "2018-06-01",
			"properties": {
				"type": "MappingDataFlow",
				"typeProperties": {
					"sources": [
						{
							"linkedService": {
								"referenceName": "sandbox",
								"type": "LinkedServiceReference"
							},
							"name": "accountsample"
						}
					],
					"sinks": [
						{
							"linkedService": {
								"referenceName": "training",
								"type": "LinkedServiceReference"
							},
							"name": "trainingaccount"
						}
					],
					"transformations": [
						{
							"name": "alterRow1"
						}
					],
					"scriptLines": [
						"source(allowSchemaDrift: true,",
						"     validateSchema: false,",
						"     store: 'dynamics',",
						"     format: 'dynamicsformat',",
						"     entity: 'account',",
						"     timeout: 30,",
						"     query: '<fetch version=\"1.0\" output-format=\"xml-platform\" mapping=\"logical\" no-lock=\"false\" distinct=\"true\"><entity name=\"account\"><attribute name=\"entityimage_url\"/><attribute name=\"parentaccountid\"/><attribute name=\"name\"/><attribute name=\"address1_city\"/><order attribute=\"name\" descending=\"false\"/><attribute name=\"primarycontactid\"/><attribute name=\"telephone1\"/><filter type=\"and\"><condition attribute=\"statecode\" operator=\"eq\" value=\"0\"/><condition attribute=\"accountid\" operator=\"eq\" value=\"{4b66761c-0758-ed11-9562-0022489b74fe}\" uiname=\"Peter Company\" uitype=\"account\"/></filter><link-entity alias=\"accountprimarycontactidcontactcontactid\" name=\"contact\" from=\"contactid\" to=\"primarycontactid\" link-type=\"outer\" visible=\"false\"><attribute name=\"emailaddress1\"/></link-entity><attribute name=\"accountcategorycode\"/><attribute name=\"accountid\"/></entity></fetch>') ~> accountsample",
						"accountsample alterRow(upsertIf(true())) ~> alterRow1",
						"alterRow1 sink(allowSchemaDrift: true,",
						"     validateSchema: false,",
						"     input(",
						"          cog_car_onceoffnooftktstatusname as string,",
						"          address2_latitude as double,",
						"          cog_windirectsourcename as string,",
						"          cog_sm_rssfeeds as boolean,",
						"          stageid as string,",
						"          cog_qse as boolean,",
						"          cog_mg_onceoffnooftktmarketer as string,",
						"          msa_managingpartneridyominame as string,",
						"          cog_accessdb_stcusno as string,",
						"          createdonbehalfbyyominame as string,",
						"          territoryid as string,",
						"          address2_city as string,",
						"          utcconversiontimezonecode as integer,",
						"          preferredappointmentdaycodename as string,",
						"          cog_transactiontotalcount_date as timestamp,",
						"          followemailname as string,",
						"          cog_mg_onceoffstramtmarketeryominame as string,",
						"          creditlimit_base as decimal(38,4),",
						"          aging30_base as decimal(38,4),",
						"          cog_parentvendornumber as string,",
						"          cog_car_monthlystramtdatecreatedon as timestamp,",
						"          modifiedbyyominame as string,",
						"          cog_mg_monthlystramtpaymentmethod as integer,",
						"          owningbusinessunit as string,",
						"          cog_mg_monthlystramtdateconverted as timestamp,",
						"          transactioncurrencyidname as string,",
						"          address2_line3 as string,",
						"          modifiedbyexternalparty as string,",
						"          address2_stateorprovince as string,",
						"          customersizecode as integer,",
						"          cog_stationid as string,",
						"          address1_city as string,",
						"          cog_car_monthlystramtpaymentmethod as integer,",
						"          cog_mg_onceoffnooftktdatecreatedon as timestamp,",
						"          address2_addresstypecode as integer,",
						"          cog_mg_onceoffnooftktmarketeryominame as string,",
						"          cog_car_monthlystramtstatus as integer,",
						"          cog_car_leadcontact as string,",
						"          modifiedonbehalfbyyominame as string,",
						"          cog_car_monthlynooftktstatus as integer,",
						"          donotphone as boolean,",
						"          cog_integrationstatus as integer,",
						"          openrevenue as decimal(38,2),",
						"          cog_mg_monthlystramtstatus as integer,",
						"          cog_integrationkey as string,",
						"          cog_administrationcontact as string,",
						"          aging60 as decimal(38,2),",
						"          createdbyname as string,",
						"          overriddencreatedon as timestamp,",
						"          cog_car_onceoffnooftktmarketername as string,",
						"          cog_accountclassificationname as string,",
						"          cog_car_monthlynooftktmarketeryominame as string,",
						"          aging60_base as decimal(38,4),",
						"          cog_mg_onceoffstramt_base as decimal(38,2),",
						"          cog_mg_monthlystramtmarketername as string,",
						"          donotpostalmail as boolean,",
						"          cog_competitionpreferencename as string,",
						"          creditonhold as boolean,",
						"          cog_mg_monthlynooftktpaymentmethod as integer,",
						"          originatingleadid as string,",
						"          owninguser as string,",
						"          creditonholdname as string,",
						"          cog_mg_onceoffstramtstatus as integer,",
						"          cog_membership as integer,",
						"          donotbulkpostalmailname as string,",
						"          cog_transactiontotalamount_state as integer,",
						"          cog_mg_monthlynooftktmarketer as string,",
						"          donotpostalmailname as string,",
						"          cog_npodoc_tax_annually as boolean,",
						"          address2_postofficebox as string,",
						"          cog_car_monthlynooftktpaymentmethod as integer,",
						"          cog_npodoc_sendmethodname as string,",
						"          cog_vatnumber as string,",
						"          cog_mg_monthlystrinceptiondate as timestamp,",
						"          cog_copytophysicalname as string,",
						"          telephone3 as string,",
						"          cog_car_monthlystramt_base as decimal(38,2),",
						"          primarycontactid as string,",
						"          cog_donotupsell as boolean,",
						"          cog_mg_leadcontactname as string,",
						"          cog_mg_monthlynooftktdatepaid as timestamp,",
						"          cog_sm_snapchat as boolean,",
						"          adx_createdbyusername as string,",
						"          cog_car_competition as boolean,",
						"          cog_mg_monthlynooftktdateconverted as timestamp,",
						"          territoryidname as string,",
						"          cog_donotupsellname as string,",
						"          address2_addressid as string,",
						"          address2_country as string,",
						"          cog_npodoc_receipt as boolean,",
						"          preferredcontactmethodcodename as string,",
						"          cog_car_onceoffstramtdatecreatedon as timestamp,",
						"          adx_modifiedbyipaddress as string,",
						"          slaname as string,",
						"          cog_sm_pintrestname as string,",
						"          cog_mg_onceoffstramtdatepaid as timestamp,",
						"          createdbyexternalparty as string,",
						"          createdonbehalfby as string,",
						"          cog_carinceptiondate as timestamp,",
						"          cog_car_onceoffnooftktpaymentmethod as integer,",
						"          cog_erpcity as string,",
						"          cog_stationidname as string,",
						"          revenue_base as decimal(38,4),",
						"          cog_accessdb_docusno as string,",
						"          cog_sm_youtube as boolean,",
						"          cog_accountclassification as integer,",
						"          onholdtime as integer,",
						"          cog_paymentmethod as integer,",
						"          cog_mg_monthlynooftktinceptiondate as timestamp,",
						"          cog_npodoc_receiptname as string,",
						"          cog_sm_flickr as boolean,",
						"          cog_administrationaccountyominame as string,",
						"          isprivate as boolean,",
						"          entityimage as string,",
						"          address2_freighttermscodename as string,",
						"          createdbyexternalpartyyominame as string,",
						"          accountratingcodename as string,",
						"          cog_procurementofficer as string,",
						"          numberofemployees as integer,",
						"          cog_sm_pintrest as boolean,",
						"          accountcategorycodename as string,",
						"          cog_car_onceoffstramt as decimal(38,2),",
						"          donotbulkemail as boolean,",
						"          preferredsystemuseridname as string,",
						"          primarycontactidyominame as string,",
						"          aging90_base as decimal(38,4),",
						"          cog_car_monthlynooftkt as integer,",
						"          entityimageid as string,",
						"          cog_address2street4 as string,",
						"          cog_mg_competition as boolean,",
						"          cog_car_monthlystramtmarketer as string,",
						"          cog_car_onceoffstramtdatepaid as timestamp,",
						"          cog_oldtaxcertificaterequired as boolean,",
						"          cog_mg_monthlynooftktpaymentmethodname as string,",
						"          statuscode as integer,",
						"          cog_beelevelname as string,",
						"          modifiedbyexternalpartyyominame as string,",
						"          cog_car_monthlystramtpaymentmethodname as string,",
						"          cog_mg_monthlystramt as decimal(38,2),",
						"          cog_paymenttype as integer,",
						"          cog_qseexpirydate as timestamp,",
						"          owningteam as string,",
						"          cog_ingclient as string,",
						"          cog_mg_monthlynooftktstatusname as string,",
						"          cog_sm_facebook as boolean,",
						"          customertypecode as integer,",
						"          address1_postalcode as string,",
						"          marketingonlyname as string,",
						"          tickersymbol as string,",
						"          cog_windirectsource as integer,",
						"          cog_car_monthlynooftktmarketer as string,",
						"          cog_car_onceoffstramt_base as decimal(38,2),",
						"          cog_transactiontotalamount as decimal(38,2),",
						"          cog_erppostcodename as string,",
						"          opendeals_date as timestamp,",
						"          cog_car_monthlystramtmarketeryominame as string,",
						"          cog_transactionlastamount as decimal(38,2),",
						"          territorycodename as string,",
						"          ownershipcodename as string,",
						"          cog_sm_snapchatname as string,",
						"          cog_mg_onceoffnooftktpaymentmethod as integer,",
						"          address1_telephone1 as string,",
						"          address1_telephone2 as string,",
						"          address2_line1 as string,",
						"          address1_stateorprovince as string,",
						"          processid as string,",
						"          cog_erpvendornumber as string,",
						"          address1_longitude as double,",
						"          modifiedon as timestamp,",
						"          sharesoutstanding as integer,",
						"          accountratingcode as integer,",
						"          cog_donorcareid as string,",
						"          industrycodename as string,",
						"          cog_car_leadcontactname as string,",
						"          paymenttermscodename as string,",
						"          createdonbehalfbyname as string,",
						"          cog_sm_linkedinname as string,",
						"          opendeals as integer,",
						"          cog_sm_rssfeedsname as string,",
						"          address2_telephone1 as string,",
						"          participatesinworkflow as boolean,",
						"          cog_administrationaccount as string,",
						"          stockexchange as string,",
						"          openrevenue_state as integer,",
						"          cog_car_onceoffstramtdatecanceled as timestamp,",
						"          shippingmethodcode as integer,",
						"          modifiedonbehalfby as string,",
						"          statecodename as string,",
						"          industrycode as integer,",
						"          paymenttermscode as integer,",
						"          address2_primarycontactname as string,",
						"          cog_npodoc_equityname as string,",
						"          cog_sm_twitter as boolean,",
						"          emailaddress3 as string,",
						"          marketcap_base as decimal(38,4),",
						"          emailaddress1 as string,",
						"          address1_line1 as string,",
						"          cog_processslastartdate as timestamp,",
						"          address1_freighttermscodename as string,",
						"          address1_utcoffset as integer,",
						"          preferredsystemuseridyominame as string,",
						"          originatingleadidyominame as string,",
						"          masteraccountidname as string,",
						"          cog_sm_linkedin as boolean,",
						"          cog_transactionlastdate as timestamp,",
						"          entityimage_url as string,",
						"          cog_car_monthlystramt as decimal(38,2),",
						"          address1_freighttermscode as integer,",
						"          msdyn_segmentidname as string,",
						"          address1_fax as string,",
						"          masterid as string,",
						"          cog_address1street4 as string,",
						"          donotphonename as string,",
						"          cog_dmdreference as string,",
						"          address1_county as string,",
						"          cog_mg_monthlynooftkt as integer,",
						"          cog_bee as boolean,",
						"          cog_mg_onceoffstramtpaymentmethodname as string,",
						"          cog_car_onceoffstramtmarketeryominame as string,",
						"          msdyn_gdproptoutname as string,",
						"          cog_car_leadcontactyominame as string,",
						"          accountclassificationcodename as string,",
						"          cog_taxnumber as string,",
						"          cog_car_monthlynooftktstatusname as string,",
						"          cog_mg_monthlynooftktmarketername as string,",
						"          address2_shippingmethodcode as integer,",
						"          lastonholdtime as timestamp,",
						"          cog_importkey as string,",
						"          statecode as integer,",
						"          cog_mg_onceoffstramtdateconverted as timestamp,",
						"          cog_datasource as integer,",
						"          accountcategorycode as integer,",
						"          versionnumber as long,",
						"          territorycode as integer,",
						"          cog_mg_monthlystramtstatusname as string,",
						"          modifiedby as string,",
						"          cog_car_onceoffstramtpaymentmethod as integer,",
						"          cog_car_onceoffstramtpaymentmethodname as string,",
						"          new_magazinetemp as string,",
						"          cog_registrationnumber as string,",
						"          owningbusinessunitname as string,",
						"          cog_administeredname as string,",
						"          cog_administered as boolean,",
						"          owneridyominame as string,",
						"          cog_windirectcustomerid as string,",
						"          businesstypecodename as string,",
						"          cog_erpblocked as integer,",
						"          cog_transactionlastamount_base as decimal(38,2),",
						"          marketingonly as boolean,",
						"          address1_telephone3 as string,",
						"          cog_processslaenddate as timestamp,",
						"          cog_mg_monthlynooftktmarketeryominame as string,",
						"          defaultpricelevelidname as string,",
						"          parentaccountidname as string,",
						"          telephone2 as string,",
						"          cog_integrationstatusname as string,",
						"          cog_datasourcename as string,",
						"          merged as boolean,",
						"          adx_modifiedbyusername as string,",
						"          cog_erpcountryregioncode as string,",
						"          cog_erpvatnumber as string,",
						"          cog_mg_onceoffnooftktstatus as integer,",
						"          participatesinworkflowname as string,",
						"          lastusedincampaign as timestamp,",
						"          donotbulkemailname as string,",
						"          cog_sm_youtubename as string,",
						"          telephone1 as string,",
						"          cog_transactiontotalamount_date as timestamp,",
						"          defaultpricelevelid as string,",
						"          cog_shorecrewmembershipname as string,",
						"          primarycontactidname as string,",
						"          exchangerate as decimal(38,10),",
						"          cog_procurementofficername as string,",
						"          aging30 as decimal(38,2),",
						"          cog_mg_onceoffnooftktdateconverted as timestamp,",
						"          cog_copytophysical as boolean,",
						"          statuscodename as string,",
						"          address2_telephone2 as string,",
						"          address2_freighttermscode as integer,",
						"          cog_car_onceoffnooftktmarketer as string,",
						"          cog_transactiontotalcount_state as integer,",
						"          ownershipcode as integer,",
						"          businesstypecode as integer,",
						"          cog_npodoc_tax_annuallyname as string,",
						"          cog_erpvendorapprovalstatus as integer,",
						"          cog_transactiontotalamount_base as decimal(38,2),",
						"          revenue as decimal(38,2),",
						"          cog_car_competitionname as string,",
						"          address1_addressid as string,",
						"          createdbyexternalpartyname as string,",
						"          cog_sm_twittername as string,",
						"          shippingmethodcodename as string,",
						"          cog_mg_onceoffstramtmarketername as string,",
						"          accountclassificationcode as integer,",
						"          customertypecodename as string,",
						"          cog_erpcountryregioncodename as string,",
						"          aging90 as decimal(38,2),",
						"          address1_composite as string,",
						"          address1_shippingmethodcodename as string,",
						"          entityimage_timestamp as long,",
						"          teamsfollowed as integer,",
						"          timespentbymeonemailandmeetings as string,",
						"          donotemail as boolean,",
						"          parentaccountidyominame as string,",
						"          cog_car_monthlynooftktdatecreatedon as timestamp,",
						"          yominame as string,",
						"          cog_erppostcode as string,",
						"          cog_competitionpreference as integer,",
						"          cog_erpblockedname as string,",
						"          cog_sm_facebookname as string,",
						"          address1_latitude as double,",
						"          cog_shorecrewnoofyears as integer,",
						"          cog_npodoc_equity as boolean,",
						"          cog_npodoc_sendmethod as integer,",
						"          cog_administrationaccountname as string,",
						"          cog_mg_monthlynooftktdatecanceled as timestamp,",
						"          address2_longitude as double,",
						"          cog_npodoc_tax_trans as boolean,",
						"          cog_paymentmethodname as string,",
						"          cog_mg_onceoffstramt as decimal(38,2),",
						"          cog_mg_onceoffnooftktstatusname as string,",
						"          cog_hasinternetname as string,",
						"          address1_country as string,",
						"          cog_car_monthlynooftktdatepaid as timestamp,",
						"          mergedname as string,",
						"          primarysatoriid as string,",
						"          cog_procurementofficeryominame as string,",
						"          slainvokedid as string,",
						"          address1_shippingmethodcode as integer,",
						"          owneridtype as string,",
						"          traversedpath as string,",
						"          address1_primarycontactname as string,",
						"          cog_administrationcontactname as string,",
						"          address2_line2 as string,",
						"          followemail as boolean,",
						"          importsequencenumber as integer,",
						"          opendeals_state as integer,",
						"          cog_car_onceoffstramtstatus as integer,",
						"          cog_hasinternet as boolean,",
						"          cog_mg_competitionname as string,",
						"          cog_car_monthlystramtdatecanceled as timestamp,",
						"          openrevenue_date as timestamp,",
						"          cog_eme as boolean,",
						"          donotfax as boolean,",
						"          msdyn_gdproptout as boolean,",
						"          address1_line3 as string,",
						"          cog_mg_onceoffnooftktmarketername as string,",
						"          preferredcontactmethodcode as integer,",
						"          cog_mg_monthlystramtdatecanceled as timestamp,",
						"          preferredequipmentid as string,",
						"          cog_car_monthlynooftktdatecanceled as timestamp,",
						"          preferredequipmentidname as string,",
						"          description as string,",
						"          cog_car_onceoffnooftktdatepaid as timestamp,",
						"          cog_beelevel as integer,",
						"          preferredserviceid as string,",
						"          slaid as string,",
						"          cog_mg_onceoffstramtmarketer as string,",
						"          masteraccountidyominame as string,",
						"          cog_car_onceoffnooftktdatecanceled as timestamp,",
						"          cog_sm_flickrname as string,",
						"          cog_communicationlanguage as integer,",
						"          ftpsiteurl as string,",
						"          cog_mg_monthlynooftktdatecreatedon as timestamp,",
						"          donotfaxname as string,",
						"          cog_mg_onceoffnooftktdatepaid as timestamp,",
						"          modifiedbyexternalpartyname as string,",
						"          isprivatename as string,",
						"          cog_mg_leadcontactyominame as string,",
						"          cog_car_monthlynooftktpaymentmethodname as string,",
						"          msdyn_salesaccelerationinsightidname as string,",
						"          cog_emeexpirydate as timestamp,",
						"          cog_car_onceoffstramtstatusname as string,",
						"          cog_mg_monthlystramtpaymentmethodname as string,",
						"          createdon as timestamp,",
						"          customersizecodename as string,",
						"          donotemailname as string,",
						"          address1_upszone as string,",
						"          primarytwitterid as string,",
						"          cog_mg_onceoffstramtpaymentmethod as integer,",
						"          cog_slastartdate as timestamp,",
						"          cog_mg_monthlystramtmarketeryominame as string,",
						"          slainvokedidname as string,",
						"          msa_managingpartnerid as string,",
						"          cog_oldtaxcertificaterequiredname as string,",
						"          cog_car_monthlystramtdatepaid as timestamp,",
						"          cog_transactiontotalcount as integer,",
						"          cog_shorecrewmembership as integer,",
						"          parentaccountid as string,",
						"          modifiedbyname as string,",
						"          address2_county as string,",
						"          preferredserviceidname as string,",
						"          modifiedonbehalfbyname as string,",
						"          cog_mg_onceoffnooftktpaymentmethodname as string,",
						"          msa_managingpartneridname as string,",
						"          donotsendmarketingmaterialname as string,",
						"          createdby as string,",
						"          cog_paymenttypename as string,",
						"          cog_slaenddate as timestamp,",
						"          cog_mg_monthlystramtmarketer as string,",
						"          donotbulkpostalmail as boolean,",
						"          cog_car_onceoffstramtmarketername as string,",
						"          cog_accessdb_lngclient as string,",
						"          address2_shippingmethodcodename as string,",
						"          cog_car_onceoffstramtmarketer as string,",
						"          cog_medicalaccount as boolean,",
						"          address2_fax as string,",
						"          cog_mg_onceoffnooftktdatecanceled as timestamp,",
						"          originatingleadidname as string,",
						"          address2_upszone as string,",
						"          cog_beeexpirydate as timestamp,",
						"          cog_car_monthlynooftktmarketername as string,",
						"          preferredsystemuserid as string,",
						"          cog_mg_onceoffstramtstatusname as string,",
						"          cog_mg_leadcontact as string,",
						"          cog_car_onceoffnooftktdatecreatedon as timestamp,",
						"          cog_qsename as string,",
						"          cog_car_onceoffnooftkt as integer,",
						"          cog_erpvendorcontact as string,",
						"          createdbyyominame as string,",
						"          owneridname as string,",
						"          cog_sm_instagram as boolean,",
						"          adx_createdbyipaddress as string,",
						"          cog_membershipname as string,",
						"          name as string,",
						"          address1_postofficebox as string,",
						"          cog_mg_monthlystramt_base as decimal(38,2),",
						"          cog_emename as string,",
						"          cog_car_monthlystramtstatusname as string,",
						"          cog_car_onceoffnooftktpaymentmethodname as string,",
						"          creditlimit as decimal(38,2),",
						"          openrevenue_base as decimal(38,2),",
						"          address2_addresstypecodename as string,",
						"          cog_car_monthlystramtmarketername as string,",
						"          msdyn_salesaccelerationinsightid as string,",
						"          cog_communicationlanguagename as string,",
						"          address1_line2 as string,",
						"          address1_addresstypecode as integer,",
						"          preferredappointmentdaycode as integer,",
						"          preferredappointmenttimecode as integer,",
						"          cog_car_onceoffnooftktstatus as integer,",
						"          marketcap as decimal(38,2),",
						"          accountnumber as string,",
						"          cog_car_onceoffnooftktmarketeryominame as string,",
						"          address1_addresstypecodename as string,",
						"          sic as string,",
						"          accountid as string,",
						"          transactioncurrencyid as string,",
						"          cog_mg_monthlynooftktstatus as integer,",
						"          address2_utcoffset as integer,",
						"          cog_erpvendorapprovalstatusname as string,",
						"          address2_name as string,",
						"          cog_mg_onceoffstramtdatecreatedon as timestamp,",
						"          msdyn_segmentid as string,",
						"          cog_medicalaccountname as string,",
						"          cog_npodoc_tax_transname as string,",
						"          cog_beename as string,",
						"          cog_mg_onceoffnooftkt as integer,",
						"          cog_mg_monthlystramtdatecreatedon as timestamp,",
						"          donotsendmm as boolean,",
						"          address2_telephone3 as string,",
						"          preferredappointmenttimecodename as string,",
						"          ownerid as string,",
						"          cog_mg_onceoffstramtdatecanceled as timestamp,",
						"          fax as string,",
						"          timezoneruleversionnumber as integer,",
						"          address1_name as string,",
						"          websiteurl as string,",
						"          cog_mg_monthlystramtdatepaid as timestamp,",
						"          cog_administrationcontactyominame as string,",
						"          address2_composite as string,",
						"          cog_sm_instagramname as string,",
						"          address2_postalcode as string,",
						"          emailaddress2 as string,",
						"          {cog_mg_onceoffnooftktmarketer@aadobjectid@azureactivedirectoryobjectid} as string,",
						"          {owninguser@aadobjectid@azureactivedirectoryobjectid} as string,",
						"          {cog_mg_monthlynooftktmarketer@aadobjectid@azureactivedirectoryobjectid} as string,",
						"          {createdonbehalfby@aadobjectid@azureactivedirectoryobjectid} as string,",
						"          {cog_procurementofficer@aadobjectid@azureactivedirectoryobjectid} as string,",
						"          {cog_car_monthlystramtmarketer@aadobjectid@azureactivedirectoryobjectid} as string,",
						"          {owningteam@aadobjectid_membershiptype@azureactivedirectoryobjectid} as string,",
						"          {owningteam@aadobjectid_membershiptype@membershiptype} as integer,",
						"          {cog_car_monthlynooftktmarketer@aadobjectid@azureactivedirectoryobjectid} as string,",
						"          {cog_administrationaccount@cog_no@cog_erpvendornumber} as string,",
						"          {modifiedonbehalfby@aadobjectid@azureactivedirectoryobjectid} as string,",
						"          {masterid@cog_no@cog_erpvendornumber} as string,",
						"          {modifiedby@aadobjectid@azureactivedirectoryobjectid} as string,",
						"          {cog_car_onceoffnooftktmarketer@aadobjectid@azureactivedirectoryobjectid} as string,",
						"          {cog_mg_onceoffstramtmarketer@aadobjectid@azureactivedirectoryobjectid} as string,",
						"          {msa_managingpartnerid@cog_no@cog_erpvendornumber} as string,",
						"          {parentaccountid@cog_no@cog_erpvendornumber} as string,",
						"          {createdby@aadobjectid@azureactivedirectoryobjectid} as string,",
						"          {cog_mg_monthlystramtmarketer@aadobjectid@azureactivedirectoryobjectid} as string,",
						"          {cog_car_onceoffstramtmarketer@aadobjectid@azureactivedirectoryobjectid} as string,",
						"          {preferredsystemuserid@aadobjectid@azureactivedirectoryobjectid} as string",
						"     ),",
						"     store: 'dynamics',",
						"     format: 'dynamicsformat',",
						"     entity: 'account',",
						"     timeout: 30,",
						"     deletable: false,",
						"     insertable: false,",
						"     updateable: false,",
						"     upsertable: true,",
						"     skipDuplicateMapInputs: true,",
						"     skipDuplicateMapOutputs: true) ~> trainingaccount"
					]
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/sandbox')]",
				"[concat(variables('factoryId'), '/linkedServices/training')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/ContactSample')]",
			"type": "Microsoft.DataFactory/factories/dataflows",
			"apiVersion": "2018-06-01",
			"properties": {
				"type": "MappingDataFlow",
				"typeProperties": {
					"sources": [
						{
							"linkedService": {
								"referenceName": "sandbox",
								"type": "LinkedServiceReference"
							},
							"name": "sandboxcontact"
						}
					],
					"sinks": [
						{
							"linkedService": {
								"referenceName": "training",
								"type": "LinkedServiceReference"
							},
							"name": "trainingcontact"
						}
					],
					"transformations": [
						{
							"name": "alterRow1"
						},
						{
							"name": "parentcustomeridEntityReference"
						}
					],
					"scriptLines": [
						"source(output(",
						"          {@odata.etag} as string,",
						"          parentcustomerid as string,",
						"          cog_contactnumber as string,",
						"          contactid as string,",
						"          emailaddress1 as string,",
						"          firstname as string,",
						"          fullname as string,",
						"          lastname as string,",
						"          mobilephone as string,",
						"          salutation as string,",
						"          telephone1 as string",
						"     ),",
						"     allowSchemaDrift: false,",
						"     validateSchema: false,",
						"     store: 'dynamics',",
						"     format: 'dynamicsformat',",
						"     entity: 'contact',",
						"     timeout: 30,",
						"     query: '<fetch mapping=\"logical\" output-format=\"xml-platform\" version=\"1.0\" no-lock=\"false\" distinct=\"true\"><entity name=\"contact\"><attribute name=\"fullname\"/><attribute name=\"entityimage_url\"/><attribute name=\"parent_contactid\"/><order descending=\"false\" attribute=\"cog_contactnumber\"/><attribute name=\"parentcustomerid\"/><attribute name=\"telephone1\"/><attribute name=\"fullname\"/><attribute name=\"emailaddress1\"/><attribute name=\"mobilephone\"/><attribute name=\"jobtitle\"/><attribute name=\"nsri_extensionnumber\"/><attribute name=\"salutation\"/><attribute name=\"cog_contactnumber\"/><attribute name=\"lastname\"/><attribute name=\"firstname\"/><attribute name=\"contactid\"/><filter type=\"and\"><condition attribute=\"statecode\" operator=\"eq\" value=\"0\"/><condition attribute=\"fullname\" operator=\"eq\" value=\"Peter Jones\"/></filter></entity></fetch>') ~> sandboxcontact",
						"parentcustomeridEntityReference alterRow(upsertIf(true())) ~> alterRow1",
						"sandboxcontact derive(Targetparentcustomerlookup = \"account\") ~> parentcustomeridEntityReference",
						"alterRow1 sink(allowSchemaDrift: true,",
						"     validateSchema: false,",
						"     input(",
						"          cog_car_monthlynooftktstatusname as string,",
						"          parentcustomerid as string,",
						"          donotphone as boolean,",
						"          adx_profilealertinstructions as string,",
						"          cog_transactiontotalcount_date as timestamp,",
						"          haschildrencode as integer,",
						"          cog_covidvaccine as boolean,",
						"          cog_car_monthlynooftktdatecreatedon as timestamp,",
						"          cog_mg_monthlystramt_base as decimal(38,2),",
						"          cog_inc_veh_events_total as decimal(38,2),",
						"          cog_car_monthlystramtpaymentmethodname as string,",
						"          adx_identity_lastsuccessfullogin as timestamp,",
						"          adx_identity_logonenabledname as string,",
						"          businesscard as string,",
						"          preferredappointmenttimecode as integer,",
						"          adx_identity_newpassword as string,",
						"          cog_initials as string,",
						"          address3_postofficebox as string,",
						"          assistantname as string,",
						"          address3_county as string,",
						"          cog_administered as boolean,",
						"          cog_sm_youtube as boolean,",
						"          cog_car_competitionname as string,",
						"          customersizecodename as string,",
						"          entityimage_url as string,",
						"          modifiedbyname as string,",
						"          modifiedonbehalfbyname as string,",
						"          address1_latitude as double,",
						"          donotfaxname as string,",
						"          cog_externalmarketerleadname as string,",
						"          address2_primarycontactname as string,",
						"          cog_mg_onceoffnooftktmarketername as string,",
						"          participatesinworkflow as boolean,",
						"          parent_contactidname as string,",
						"          preferredsystemuserid as string,",
						"          cog_mg_monthlynooftktinceptiondate as timestamp,",
						"          description as string,",
						"          cog_mg_onceoffstramtmarketername as string,",
						"          cog_mg_monthlynooftkt as integer,",
						"          cog_car_monthlystramtdatepaid as timestamp,",
						"          gendercode as integer,",
						"          creditonholdname as string,",
						"          cog_mp_emailcampaigns as boolean,",
						"          anniversary as timestamp,",
						"          address2_composite as string,",
						"          cog_mg_monthlystramtdatecreatedon as timestamp,",
						"          cog_transactionlastamount_base as decimal(38,2),",
						"          cog_religionname as string,",
						"          utcconversiontimezonecode as integer,",
						"          address1_primarycontactname as string,",
						"          cog_contactclassificationname as string,",
						"          accountidyominame as string,",
						"          adx_identity_username as string,",
						"          msdyn_isminorwithparentalconsentname as string,",
						"          cog_yellowfeverinoculationdate as timestamp,",
						"          cog_inc_craft_maint_count as decimal(38,0),",
						"          cog_shorecrewmembershipname as string,",
						"          websiteurl as string,",
						"          cog_mg_monthlystramtstatus as integer,",
						"          cog_unityaccesslevel as integer,",
						"          cog_sm_pintrest as boolean,",
						"          cog_dob as timestamp,",
						"          cog_mg_monthlystrinceptiondate as timestamp,",
						"          cog_fitnessrenewalinterval as integer,",
						"          cog_inc_craft_events_total as decimal(38,2),",
						"          cog_hasinternetname as string,",
						"          adx_profilemodifiedon as timestamp,",
						"          cog_mg_onceoffstramtstatus as integer,",
						"          modifiedby as string,",
						"          onholdtime as integer,",
						"          address2_telephone1 as string,",
						"          address2_telephone2 as string,",
						"          cog_transactiontotalamount_base as decimal(38,2),",
						"          entityimage as string,",
						"          address2_stateorprovince as string,",
						"          paymenttermscodename as string,",
						"          cog_transactiontotalcount_state as integer,",
						"          cog_operationalpersonnelstation as string,",
						"          adx_createdbyipaddress as string,",
						"          cog_car_monthlynooftktdatepaid as timestamp,",
						"          cog_idnumber as string,",
						"          cog_inc_base_ops_total as decimal(38,2),",
						"          modifiedbyexternalparty as string,",
						"          cog_mp_sendbirthdayemailname as string,",
						"          address3_longitude as double,",
						"          cog_paymentmethodname as string,",
						"          cog_mg_onceoffnooftktmarketer as string,",
						"          cog_mg_monthlynooftktdatecreatedon as timestamp,",
						"          contactid as string,",
						"          cog_hepatitisbvaccinename as string,",
						"          yomifirstname as string,",
						"          businesscardattributes as string,",
						"          cog_car_onceoffstramtpaymentmethod as integer,",
						"          cog_mg_monthlystramt as decimal(38,2),",
						"          createdbyname as string,",
						"          donotemail as boolean,",
						"          cog_mg_monthlynooftktdatecanceled as timestamp,",
						"          cog_hepatitisbvaccine as boolean,",
						"          marketingonlyname as string,",
						"          address2_shippingmethodcodename as string,",
						"          cog_dutycrew as integer,",
						"          parentcontactidyominame as string,",
						"          msdyn_orgchangestatusname as string,",
						"          createdon as timestamp,",
						"          cog_mg_onceoffnooftktstatusname as string,",
						"          cog_windirectcustomerid as string,",
						"          cog_inc_craft_maint_total as decimal(38,2),",
						"          cog_resigndate as timestamp,",
						"          adx_modifiedbyusername as string,",
						"          cog_car_onceoffnooftktpaymentmethod as integer,",
						"          cog_inc_base_ops_count as decimal(38,0),",
						"          telephone2 as string,",
						"          cog_inc_veh_maint_total as decimal(38,2),",
						"          msa_managingpartneridyominame as string,",
						"          preferredsystemuseridyominame as string,",
						"          aging90_base as decimal(38,4),",
						"          msdyn_gdproptoutname as string,",
						"          cog_covidvaccinename as string,",
						"          business2 as string,",
						"          address2_utcoffset as integer,",
						"          accountidname as string,",
						"          annualincome_base as decimal(38,4),",
						"          cog_miscrewid as string,",
						"          traversedpath as string,",
						"          msdyn_segmentidname as string,",
						"          cog_mg_monthlynooftktdatepaid as timestamp,",
						"          address2_addresstypecodename as string,",
						"          address2_shippingmethodcode as integer,",
						"          gendercodename as string,",
						"          address3_name as string,",
						"          adx_identity_lockoutenabledname as string,",
						"          donotsendmm as boolean,",
						"          cog_paymentmethod as integer,",
						"          cog_mg_onceoffstramtdatecreatedon as timestamp,",
						"          createdbyexternalparty as string,",
						"          donotpostalmailname as string,",
						"          donotfax as boolean,",
						"          company as string,",
						"          cog_car_monthlynooftkt as integer,",
						"          cog_accessdb_stcusno as string,",
						"          cog_inc_veh_events_count as decimal(38,0),",
						"          cog_mg_monthlystramtmarketername as string,",
						"          cog_bequestorname as string,",
						"          address1_postalcode as string,",
						"          address2_city as string,",
						"          lastname as string,",
						"          address2_line3 as string,",
						"          cog_hasinternet as boolean,",
						"          preferredappointmentdaycodename as string,",
						"          callback as string,",
						"          followemail as boolean,",
						"          cog_mg_onceoffnooftkt as integer,",
						"          cog_taxdonoronly as boolean,",
						"          cog_donorcareid as string,",
						"          owningteam as string,",
						"          address2_fax as string,",
						"          cog_mg_monthlystramtmarketer as string,",
						"          parentcontactidname as string,",
						"          msdyn_portaltermsagreementdate as timestamp,",
						"          cog_mg_onceoffstramt as decimal(38,2),",
						"          masterid as string,",
						"          address2_freighttermscode as integer,",
						"          preferredserviceid as string,",
						"          cog_car_onceoffstramtpaymentmethodname as string,",
						"          customertypecodename as string,",
						"          cog_npodoc_receipt as boolean,",
						"          cog_windirectsourcename as string,",
						"          msdyn_disablewebtrackingname as string,",
						"          cog_taxdonoronlyname as string,",
						"          createdonbehalfbyname as string,",
						"          territorycodename as string,",
						"          cog_car_monthlystramtmarketer as string,",
						"          address1_county as string,",
						"          cog_car_onceoffnooftktdatecreatedon as timestamp,",
						"          adx_identity_emailaddress1confirmed as boolean,",
						"          adx_profilealert as boolean,",
						"          address1_country as string,",
						"          cog_operationalpersonnelstationname as string,",
						"          modifiedonbehalfby as string,",
						"          cog_inc_craft_ops_day as decimal(38,2),",
						"          assistantphone as string,",
						"          address2_line2 as string,",
						"          address1_stateorprovince as string,",
						"          adx_identity_mobilephoneconfirmed as boolean,",
						"          cog_inc_base_maint_count as decimal(38,0),",
						"          address3_addressid as string,",
						"          modifiedbyexternalpartyname as string,",
						"          cog_medicalrenewalname as string,",
						"          adx_identity_emailaddress1confirmedname as string,",
						"          msdyn_orgchangestatus as integer,",
						"          entityimageid as string,",
						"          cog_mp_ticket_optionsname as string,",
						"          address3_city as string,",
						"          cog_inc_craft_ops_total as decimal(38,2),",
						"          address2_postalcode as string,",
						"          cog_inc_craft_events_night as decimal(38,2),",
						"          cog_serviceduration_state as integer,",
						"          slainvokedidname as string,",
						"          fullname as string,",
						"          cog_knownasname as string,",
						"          cog_racename as string,",
						"          telephone1 as string,",
						"          subscriptionid as string,",
						"          adx_confirmremovepasswordname as string,",
						"          cog_agedifference as decimal(38,10),",
						"          createdby as string,",
						"          cog_administeredname as string,",
						"          cog_administrationcontactyominame as string,",
						"          donotpostalmail as boolean,",
						"          stageid as string,",
						"          cog_medical_doctor as string,",
						"          leadsourcecodename as string,",
						"          yomilastname as string,",
						"          cog_misservicebreak as string,",
						"          cog_car_monthlystramtpaymentmethod as integer,",
						"          msdyn_gdproptout as boolean,",
						"          cog_inc_craft_training_day as decimal(38,2),",
						"          cog_inc_craft_events_count as decimal(38,0),",
						"          cog_mg_monthlystramtpaymentmethodname as string,",
						"          cog_paymenttypename as string,",
						"          adx_profilealertname as string,",
						"          spousesname as string,",
						"          timespentbymeonemailandmeetings as string,",
						"          address3_line2 as string,",
						"          address3_addresstypecode as integer,",
						"          managername as string,",
						"          owningbusinessunitname as string,",
						"          cog_mg_competition as boolean,",
						"          cog_stationidname as string,",
						"          accountrolecode as integer,",
						"          cog_serviceawardstatus as integer,",
						"          cog_yellowfevervaccine as boolean,",
						"          adx_publicprofilecopy as string,",
						"          cog_driverslicensecode as string,",
						"          cog_car_monthlynooftktpaymentmethodname as string,",
						"          cog_car_onceoffstramtdatecanceled as timestamp,",
						"          fax as string,",
						"          shippingmethodcodename as string,",
						"          cog_sm_instagramname as string,",
						"          cog_sm_rssfeedsname as string,",
						"          cog_npodoc_sendmethodname as string,",
						"          cog_serviceduration as integer,",
						"          customersizecode as integer,",
						"          msdyn_isminorname as string,",
						"          address2_freighttermscodename as string,",
						"          address1_line1 as string,",
						"          emailaddress2 as string,",
						"          address3_upszone as string,",
						"          childrensnames as string,",
						"          cog_mp_smscampaignsname as string,",
						"          statecodename as string,",
						"          address1_addresstypecode as integer,",
						"          cog_inc_veh_ops_total as decimal(38,2),",
						"          cog_mp_emailcampaignsname as string,",
						"          cog_car_onceoffnooftkt as integer,",
						"          mergedname as string,",
						"          cog_mp_magazinename as string,",
						"          cog_sm_twittername as string,",
						"          defaultpricelevelidname as string,",
						"          cog_mg_onceoffstramt_base as decimal(38,2),",
						"          cog_car_monthlystramtstatus as integer,",
						"          cog_stationid as string,",
						"          managerphone as string,",
						"          cog_mg_monthlynooftktstatusname as string,",
						"          cog_contactnumber as string,",
						"          cog_mg_onceoffnooftktdatepaid as timestamp,",
						"          msdyn_disablewebtracking as boolean,",
						"          cog_mg_onceoffnooftktpaymentmethodname as string,",
						"          parent_contactidyominame as string,",
						"          address1_shippingmethodcodename as string,",
						"          createdonbehalfby as string,",
						"          cog_car_onceoffstramtmarketer as string,",
						"          cog_car_monthlynooftktstatus as integer,",
						"          owninguser as string,",
						"          cog_sm_linkedin as boolean,",
						"          preferredappointmenttimecodename as string,",
						"          shippingmethodcode as integer,",
						"          cog_datasourcename as string,",
						"          educationcodename as string,",
						"          numberofchildren as integer,",
						"          externaluseridentifier as string,",
						"          address2_addressid as string,",
						"          cog_inc_base_events_count as decimal(38,0),",
						"          cog_mp_appealletter_options as integer,",
						"          cog_unityaccesslevelname as string,",
						"          merged as boolean,",
						"          address1_line2 as string,",
						"          cog_mp_datebdemailsent as timestamp,",
						"          cog_donotupsellname as string,",
						"          address1_postofficebox as string,",
						"          creditonhold as boolean,",
						"          createdonbehalfbyyominame as string,",
						"          mobilephone as string,",
						"          cog_paymenttype as integer,",
						"          cog_age as integer,",
						"          nsri_extensionnumber as string,",
						"          address1_freighttermscode as integer,",
						"          cog_covidinoculationdate as timestamp,",
						"          address1_fax as string,",
						"          address3_freighttermscode as integer,",
						"          createdbyexternalpartyname as string,",
						"          cog_mg_onceoffnooftktdatecanceled as timestamp,",
						"          cog_transactiontotalcount as integer,",
						"          owneridtype as string,",
						"          adx_createdbyusername as string,",
						"          cog_car_onceoffnooftktmarketeryominame as string,",
						"          createdbyyominame as string,",
						"          cog_mg_monthlystramtstatusname as string,",
						"          cog_car_competition as boolean,",
						"          cog_copytophysical as boolean,",
						"          cog_transactiontotalamount_date as timestamp,",
						"          cog_car_onceoffstramtdatecreatedon as timestamp,",
						"          adx_identity_securitystamp as string,",
						"          address3_postalcode as string,",
						"          cog_npodoc_equity as boolean,",
						"          originatingleadid as string,",
						"          address3_line1 as string,",
						"          cog_sm_flickrname as string,",
						"          cog_mg_monthlynooftktmarketeryominame as string,",
						"          adx_identity_logonenabled as boolean,",
						"          cog_mp_smscampaigns as boolean,",
						"          cog_car_onceoffnooftktmarketername as string,",
						"          cog_mp_ticket_options as integer,",
						"          participatesinworkflowname as string,",
						"          cog_mg_monthlystramtdatepaid as timestamp,",
						"          cog_alternatecontact as string,",
						"          preferredsystemuseridname as string,",
						"          territorycode as integer,",
						"          address3_country as string,",
						"          cog_faultyemailaddressdate as timestamp,",
						"          cog_medicalcontactname as string,",
						"          cog_mp_appeallettername as string,",
						"          cog_sm_pintrestname as string,",
						"          cog_inc_veh_training_total as decimal(38,2),",
						"          cog_mp_appealletter_optionsname as string,",
						"          overriddencreatedon as timestamp,",
						"          msdyn_isminorwithparentalconsent as boolean,",
						"          statuscode as integer,",
						"          cog_taxnumber as string,",
						"          isprivate as boolean,",
						"          adx_preferredlanguageid as string,",
						"          mastercontactidname as string,",
						"          cog_accessdb_postofficeonly as string,",
						"          slaname as string,",
						"          cog_mg_monthlynooftktmarketername as string,",
						"          cog_mobilephone2 as string,",
						"          cog_taxdonordate as timestamp,",
						"          isbackofficecustomername as string,",
						"          cog_car_onceoffnooftktpaymentmethodname as string,",
						"          cog_inc_craft_training_night as decimal(38,2),",
						"          cog_mp_magazine_optionsname as string,",
						"          cog_mp_sendbirthdayemail as boolean,",
						"          salutation as string,",
						"          address1_longitude as double,",
						"          cog_inc_craft_ops_count as decimal(38,0),",
						"          cog_npodoc_tax_trans as boolean,",
						"          address3_primarycontactname as string,",
						"          cog_mg_monthlynooftktpaymentmethod as integer,",
						"          familystatuscodename as string,",
						"          cog_npodoc_sendmethod as integer,",
						"          cog_sm_facebookname as string,",
						"          donotbulkemail as boolean,",
						"          cog_transactionlastdate as timestamp,",
						"          cog_lastfitnessdate as timestamp,",
						"          employeeid as string,",
						"          cog_car_onceoffstramtmarketeryominame as string,",
						"          birthdate as timestamp,",
						"          modifiedonbehalfbyyominame as string,",
						"          cog_transactiontotalamount as decimal(38,2),",
						"          haschildrencodename as string,",
						"          address1_utcoffset as integer,",
						"          cog_medicalaidprinciplemember as string,",
						"          parentcustomeridname as string,",
						"          cog_communicationlanguage as integer,",
						"          cog_car_monthlynooftktdatecanceled as timestamp,",
						"          cog_car_monthlystramtmarketeryominame as string,",
						"          cog_inc_craft_training_count as decimal(38,0),",
						"          cog_car_onceoffstramtmarketername as string,",
						"          governmentid as string,",
						"          cog_bloodgroup as string,",
						"          cog_mg_monthlynooftktdateconverted as timestamp,",
						"          cog_mg_monthlystramtmarketeryominame as string,",
						"          cog_datasource as integer,",
						"          slainvokedid as string,",
						"          cog_mp_appealletter as boolean,",
						"          cog_inc_veh_ops_count as decimal(38,0),",
						"          address3_telephone2 as string,",
						"          address3_shippingmethodcode as integer,",
						"          cog_inc_veh_maint_count as decimal(38,0),",
						"          cog_mg_onceoffstramtpaymentmethod as integer,",
						"          cog_importkey as string,",
						"          cog_accessdb_strlistsource as string,",
						"          cog_faultyemailaddress as string,",
						"          adx_modifiedbyipaddress as string,",
						"          adx_identity_locallogindisabled as boolean,",
						"          cog_ageactual as decimal(38,10),",
						"          cog_old_nextfitnessdate as timestamp,",
						"          adx_profileisanonymousname as string,",
						"          cog_accessdbstrcurrentsource as string,",
						"          cog_mg_onceoffstramtdateconverted as timestamp,",
						"          cog_administrationaccount as string,",
						"          entityimage_timestamp as long,",
						"          cog_windirectsource as integer,",
						"          cog_mp_anniversary_options as integer,",
						"          middlename as string,",
						"          department as string,",
						"          address3_composite as string,",
						"          cog_competitionpreferencename as string,",
						"          address2_longitude as double,",
						"          preferredequipmentidname as string,",
						"          cog_telesalesname as string,",
						"          address1_upszone as string,",
						"          aging30_base as decimal(38,4),",
						"          cog_mg_onceoffnooftktpaymentmethod as integer,",
						"          cog_rescuedatalastmodified as timestamp,",
						"          address2_country as string,",
						"          cog_medicalaidnumber as string,",
						"          cog_old_nextmedicaldate as timestamp,",
						"          cog_medicalallergies as string,",
						"          cog_mg_onceoffnooftktdatecreatedon as timestamp,",
						"          cog_administrationaccountyominame as string,",
						"          cog_car_onceoffnooftktmarketer as string,",
						"          statuscodename as string,",
						"          ftpsiteurl as string,",
						"          cog_isvolunteer as boolean,",
						"          cog_car_monthlynooftktmarketeryominame as string,",
						"          cog_communicationlanguagename as string,",
						"          transactioncurrencyidname as string,",
						"          msa_managingpartnerid as string,",
						"          yomifullname as string,",
						"          cog_mg_onceoffnooftktmarketeryominame as string,",
						"          cog_shorecrewmembership as integer,",
						"          owneridyominame as string,",
						"          cog_hepatitisbinoculationdate as timestamp,",
						"          cog_npodoc_tax_transname as string,",
						"          cog_medicalaidname as string,",
						"          cog_car_monthlystramtmarketername as string,",
						"          address2_line1 as string,",
						"          address1_name as string,",
						"          address2_upszone as string,",
						"          cog_inc_craft_maint_day as decimal(38,2),",
						"          donotsendmarketingmaterialname as string,",
						"          cog_sm_flickr as boolean,",
						"          exchangerate as decimal(38,10),",
						"          parentcustomeridtype as string,",
						"          cog_inc_craft_ops_night as decimal(38,2),",
						"          cog_car_onceoffnooftktstatus as integer,",
						"          originatingleadidyominame as string,",
						"          cog_car_onceoffnooftktdatepaid as timestamp,",
						"          adx_identity_lockoutenddate as timestamp,",
						"          cog_npodoc_tax_annuallyname as string,",
						"          address3_addresstypecodename as string,",
						"          lastonholdtime as timestamp,",
						"          cog_mg_monthlystramtdatecanceled as timestamp,",
						"          cog_transactionlastamount as decimal(38,2),",
						"          adx_confirmremovepassword as boolean,",
						"          donotphonename as string,",
						"          cog_car_monthlynooftktpaymentmethod as integer,",
						"          address2_name as string,",
						"          cog_address2street4 as string,",
						"          parentcontactid as string,",
						"          cog_mg_onceoffstramtstatusname as string,",
						"          processid as string,",
						"          emailaddress3 as string,",
						"          msdyn_isminor as boolean,",
						"          cog_accessddbstrlistsource as string,",
						"          cog_mg_monthlynooftktstatus as integer,",
						"          cog_codename as string,",
						"          cog_donotupsell as boolean,",
						"          owningbusinessunit as string,",
						"          cog_administrationcontactname as string,",
						"          cog_shorecrewnoofyears as integer,",
						"          adx_identity_locallogindisabledname as string,",
						"          address3_line3 as string,",
						"          statecode as integer,",
						"          address3_utcoffset as integer,",
						"          adx_timezone as integer,",
						"          cog_mg_monthlynooftktpaymentmethodname as string,",
						"          cog_administrationcontact as string,",
						"          cog_callcentreprojectname as string,",
						"          cog_car_onceoffstramtstatus as integer,",
						"          address3_latitude as double,",
						"          cog_npodoc_receiptname as string,",
						"          creditlimit_base as decimal(38,4),",
						"          aging60 as decimal(38,2),",
						"          cog_ingclient as string,",
						"          cog_inc_craft_events_day as decimal(38,2),",
						"          cog_sm_instagram as boolean,",
						"          adx_identity_accessfailedcount as integer,",
						"          cog_yellowfevervaccinename as string,",
						"          address3_freighttermscodename as string,",
						"          cog_car_monthlynooftktmarketername as string,",
						"          cog_medicalaidprinciplemembername as string,",
						"          cog_inc_craft_training_total as decimal(38,2),",
						"          cog_copytophysicalname as string,",
						"          creditlimit as decimal(38,2),",
						"          cog_serviceawardstatusname as string,",
						"          importsequencenumber as integer,",
						"          slaid as string,",
						"          cog_mg_monthlystramtpaymentmethod as integer,",
						"          cog_car_monthlystramtdatecanceled as timestamp,",
						"          customertypecode as integer,",
						"          cog_externalmarketerlead as string,",
						"          ownerid as string,",
						"          cog_sm_facebook as boolean,",
						"          adx_preferredlanguageidname as string,",
						"          adx_identity_passwordhash as string,",
						"          cog_oldreference as string,",
						"          educationcode as integer,",
						"          familystatuscode as integer,",
						"          cog_car_onceoffstramtstatusname as string,",
						"          parentcustomeridyominame as string,",
						"          cog_nextmedicaldate as timestamp,",
						"          cog_isvolunteername as string,",
						"          marketingonly as boolean,",
						"          cog_car_monthlystramt as decimal(38,2),",
						"          cog_alternatemobile as string,",
						"          cog_administrationaccountname as string,",
						"          preferredcontactmethodcode as integer,",
						"          transactioncurrencyid as string,",
						"          adx_identity_twofactorenabled as boolean,",
						"          cog_mg_monthlynooftktmarketer as string,",
						"          cog_medical_account as string,",
						"          defaultpricelevelid as string,",
						"          cog_mg_onceoffstramtmarketer as string,",
						"          cog_mg_onceoffstramtmarketeryominame as string,",
						"          owneridname as string,",
						"          donotbulkpostalmail as boolean,",
						"          cog_car_monthlystramtstatusname as string,",
						"          cog_car_onceoffstramt as decimal(38,2),",
						"          cog_religion as integer,",
						"          address2_latitude as double,",
						"          cog_mg_onceoffnooftktdateconverted as timestamp,",
						"          cog_inc_base_training_count as decimal(38,0),",
						"          modifiedbyexternalpartyyominame as string,",
						"          address2_telephone3 as string,",
						"          adx_identity_twofactorenabledname as string,",
						"          cog_contactclassification as integer,",
						"          parent_contactid as string,",
						"          versionnumber as long,",
						"          cog_fitnessrenewalintervalname as string,",
						"          donotemailname as string,",
						"          address1_line3 as string,",
						"          annualincome as decimal(38,2),",
						"          address1_telephone1 as string,",
						"          address1_telephone2 as string,",
						"          address1_telephone3 as string,",
						"          yomimiddlename as string,",
						"          cog_inc_base_training_total as decimal(38,2),",
						"          cog_mp_magazine_options as integer,",
						"          adx_profilealertdate as timestamp,",
						"          modifiedon as timestamp,",
						"          cog_medicalrenewal as integer,",
						"          address3_stateorprovince as string,",
						"          pager as string,",
						"          cog_mg_competitionname as string,",
						"          cog_npodoc_tax_annually as boolean,",
						"          aging30 as decimal(38,2),",
						"          cog_mg_monthlystramtdateconverted as timestamp,",
						"          adx_profilelastactivity as timestamp,",
						"          cog_sm_snapchat as boolean,",
						"          address1_composite as string,",
						"          mastercontactidyominame as string,",
						"          cog_car_monthlynooftktmarketer as string,",
						"          address1_freighttermscodename as string,",
						"          accountrolecodename as string,",
						"          cog_sm_twitter as boolean,",
						"          cog_contactisprinciplemedicalmember as boolean,",
						"          address3_shippingmethodcodename as string,",
						"          adx_profileisanonymous as boolean,",
						"          address3_fax as string,",
						"          cog_transactiontotalamount_state as integer,",
						"          address3_telephone1 as string,",
						"          cog_car_monthlystramtdatecreatedon as timestamp,",
						"          address3_telephone3 as string,",
						"          leadsourcecode as integer,",
						"          isbackofficecustomer as boolean,",
						"          suffix as string,",
						"          lastusedincampaign as timestamp,",
						"          cog_medicalconditions as string,",
						"          originatingleadidname as string,",
						"          modifiedbyyominame as string,",
						"          cog_driverslicensenumber as string,",
						"          address1_city as string,",
						"          cog_dutycrewname as string,",
						"          emailaddress1 as string,",
						"          followemailname as string,",
						"          cog_competitionpreference as integer,",
						"          cog_accessdb_docusno as string,",
						"          adx_identity_mobilephoneconfirmedname as string,",
						"          aging90 as decimal(38,2),",
						"          cog_medicalcontact as boolean,",
						"          cog_address1street4 as string,",
						"          adx_identity_lockoutenabled as boolean,",
						"          cog_race as integer,",
						"          isautocreate as boolean,",
						"          address1_shippingmethodcode as integer,",
						"          cog_accessdb_lngclient as string,",
						"          preferredequipmentid as string,",
						"          telephone3 as string,",
						"          createdbyexternalpartyyominame as string,",
						"          nickname as string,",
						"          jobtitle as string,",
						"          cog_car_onceoffnooftktdatecanceled as timestamp,",
						"          home2 as string,",
						"          firstname as string,",
						"          cog_driverslicenseexpirydate as timestamp,",
						"          cog_inc_base_events_total as decimal(38,2),",
						"          address1_addressid as string,",
						"          cog_mg_onceoffstramtdatepaid as timestamp,",
						"          msdyn_segmentid as string,",
						"          cog_lastmedicaldate as timestamp,",
						"          cog_callcentreproject as integer,",
						"          cog_agerounded as integer,",
						"          cog_sm_linkedinname as string,",
						"          msa_managingpartneridname as string,",
						"          timezoneruleversionnumber as integer,",
						"          address2_postofficebox as string,",
						"          cog_sm_youtubename as string,",
						"          cog_nextfitnessdate as timestamp,",
						"          cog_mp_magazine as boolean,",
						"          paymenttermscode as integer,",
						"          cog_bequestor as boolean,",
						"          preferredserviceidname as string,",
						"          cog_inc_craft_maint_night as decimal(38,2),",
						"          cog_mg_onceoffstramtdatecanceled as timestamp,",
						"          preferredcontactmethodcodename as string,",
						"          cog_medicalaidprinciplememberyominame as string,",
						"          cog_mg_onceoffnooftktstatus as integer,",
						"          cog_dmdreference as string,",
						"          cog_sm_snapchatname as string,",
						"          cog_contactisprinciplemedicalmembername as string,",
						"          cog_npodoc_equityname as string,",
						"          isprivatename as string,",
						"          address1_addresstypecodename as string,",
						"          donotbulkemailname as string,",
						"          cog_car_onceoffstramt_base as decimal(38,2),",
						"          preferredappointmentdaycode as integer,",
						"          cog_telesales as boolean,",
						"          cog_accessdb_strcurrentsource as string,",
						"          cog_sm_rssfeeds as boolean,",
						"          cog_inc_veh_training_count as decimal(38,0),",
						"          cog_car_onceoffnooftktstatusname as string,",
						"          cog_mp_anniversary_optionsname as string,",
						"          donotbulkpostalmailname as string,",
						"          cog_inc_base_maint_total as decimal(38,2),",
						"          cog_car_monthlystramt_base as decimal(38,2),",
						"          address2_addresstypecode as integer,",
						"          cog_serviceduration_date as timestamp,",
						"          teamsfollowed as integer,",
						"          cog_mg_onceoffstramtpaymentmethodname as string,",
						"          adx_organizationname as string,",
						"          cog_car_onceoffstramtdatepaid as timestamp,",
						"          aging60_base as decimal(38,4),",
						"          address2_county as string,",
						"          accountid as string,",
						"          cog_mp_datedbemailsent as timestamp,",
						"          cog_joindate as timestamp,",
						"          {preferredsystemuserid@aadobjectid@azureactivedirectoryobjectid} as string,",
						"          {modifiedby@aadobjectid@azureactivedirectoryobjectid} as string,",
						"          {cog_mg_onceoffnooftktmarketer@aadobjectid@azureactivedirectoryobjectid} as string,",
						"          {owningteam@aadobjectid_membershiptype@azureactivedirectoryobjectid} as string,",
						"          {owningteam@aadobjectid_membershiptype@membershiptype} as integer,",
						"          {cog_mg_monthlystramtmarketer@aadobjectid@azureactivedirectoryobjectid} as string,",
						"          {cog_car_monthlystramtmarketer@aadobjectid@azureactivedirectoryobjectid} as string,",
						"          {modifiedonbehalfby@aadobjectid@azureactivedirectoryobjectid} as string,",
						"          {createdby@aadobjectid@azureactivedirectoryobjectid} as string,",
						"          {createdonbehalfby@aadobjectid@azureactivedirectoryobjectid} as string,",
						"          {cog_car_onceoffstramtmarketer@aadobjectid@azureactivedirectoryobjectid} as string,",
						"          {owninguser@aadobjectid@azureactivedirectoryobjectid} as string,",
						"          {cog_administrationaccount@cog_no@cog_erpvendornumber} as string,",
						"          {cog_car_onceoffnooftktmarketer@aadobjectid@azureactivedirectoryobjectid} as string,",
						"          {msa_managingpartnerid@cog_no@cog_erpvendornumber} as string,",
						"          {cog_mg_monthlynooftktmarketer@aadobjectid@azureactivedirectoryobjectid} as string,",
						"          {cog_mg_onceoffstramtmarketer@aadobjectid@azureactivedirectoryobjectid} as string,",
						"          {cog_car_monthlynooftktmarketer@aadobjectid@azureactivedirectoryobjectid} as string,",
						"          {accountid@cog_no@cog_erpvendornumber} as string",
						"     ),",
						"     store: 'dynamics',",
						"     format: 'dynamicsformat',",
						"     entity: 'contact',",
						"     timeout: 30,",
						"     deletable: false,",
						"     insertable: false,",
						"     updateable: false,",
						"     upsertable: true,",
						"     skipDuplicateMapInputs: true,",
						"     skipDuplicateMapOutputs: true,",
						"     mapColumn(",
						"          parentcustomerid,",
						"          cog_contactnumber,",
						"          contactid,",
						"          emailaddress1,",
						"          firstname,",
						"          fullname,",
						"          lastname,",
						"          mobilephone,",
						"          salutation,",
						"          telephone1,",
						"          Targetparentcustomerlookup",
						"     )) ~> trainingcontact"
					]
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/sandbox')]",
				"[concat(variables('factoryId'), '/linkedServices/training')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/ContactSample_D365')]",
			"type": "Microsoft.DataFactory/factories/dataflows",
			"apiVersion": "2018-06-01",
			"properties": {
				"type": "MappingDataFlow",
				"typeProperties": {
					"sources": [
						{
							"linkedService": {
								"referenceName": "sandbox",
								"type": "LinkedServiceReference"
							},
							"name": "sandboxcontact"
						}
					],
					"sinks": [
						{
							"linkedService": {
								"referenceName": "Dynamics1",
								"type": "LinkedServiceReference"
							},
							"name": "sink1"
						}
					],
					"transformations": [
						{
							"name": "alterRow1"
						},
						{
							"name": "parentcustomeridEntityReference"
						}
					],
					"scriptLines": [
						"source(output(",
						"          {@odata.etag} as string,",
						"          parentcustomerid as string,",
						"          cog_contactnumber as string,",
						"          contactid as string,",
						"          emailaddress1 as string,",
						"          firstname as string,",
						"          fullname as string,",
						"          lastname as string,",
						"          mobilephone as string,",
						"          salutation as string,",
						"          telephone1 as string",
						"     ),",
						"     allowSchemaDrift: false,",
						"     validateSchema: false,",
						"     store: 'dynamics',",
						"     format: 'dynamicsformat',",
						"     entity: 'contact',",
						"     timeout: 30,",
						"     query: '<fetch mapping=\"logical\" output-format=\"xml-platform\" version=\"1.0\" no-lock=\"false\" distinct=\"true\"><entity name=\"contact\"><attribute name=\"fullname\"/><attribute name=\"entityimage_url\"/><attribute name=\"parent_contactid\"/><order descending=\"false\" attribute=\"cog_contactnumber\"/><attribute name=\"parentcustomerid\"/><attribute name=\"telephone1\"/><attribute name=\"fullname\"/><attribute name=\"emailaddress1\"/><attribute name=\"mobilephone\"/><attribute name=\"jobtitle\"/><attribute name=\"nsri_extensionnumber\"/><attribute name=\"salutation\"/><attribute name=\"cog_contactnumber\"/><attribute name=\"lastname\"/><attribute name=\"firstname\"/><attribute name=\"contactid\"/><filter type=\"and\"><condition attribute=\"statecode\" operator=\"eq\" value=\"0\"/><condition attribute=\"fullname\" operator=\"eq\" value=\"Peter Jones\"/></filter></entity></fetch>') ~> sandboxcontact",
						"parentcustomeridEntityReference alterRow(upsertIf(true())) ~> alterRow1",
						"sandboxcontact derive(Target = 'account') ~> parentcustomeridEntityReference",
						"alterRow1 sink(allowSchemaDrift: true,",
						"     validateSchema: false,",
						"     input(",
						"          cog_car_monthlynooftktstatusname as string,",
						"          parentcustomerid as string,",
						"          donotphone as boolean,",
						"          adx_profilealertinstructions as string,",
						"          cog_transactiontotalcount_date as timestamp,",
						"          haschildrencode as integer,",
						"          cog_covidvaccine as boolean,",
						"          cog_car_monthlynooftktdatecreatedon as timestamp,",
						"          cog_mg_monthlystramt_base as decimal(38,2),",
						"          cog_inc_veh_events_total as decimal(38,2),",
						"          cog_car_monthlystramtpaymentmethodname as string,",
						"          adx_identity_lastsuccessfullogin as timestamp,",
						"          adx_identity_logonenabledname as string,",
						"          businesscard as string,",
						"          preferredappointmenttimecode as integer,",
						"          adx_identity_newpassword as string,",
						"          cog_initials as string,",
						"          address3_postofficebox as string,",
						"          assistantname as string,",
						"          address3_county as string,",
						"          cog_administered as boolean,",
						"          cog_sm_youtube as boolean,",
						"          cog_car_competitionname as string,",
						"          customersizecodename as string,",
						"          entityimage_url as string,",
						"          modifiedbyname as string,",
						"          modifiedonbehalfbyname as string,",
						"          address1_latitude as double,",
						"          donotfaxname as string,",
						"          cog_externalmarketerleadname as string,",
						"          address2_primarycontactname as string,",
						"          cog_mg_onceoffnooftktmarketername as string,",
						"          participatesinworkflow as boolean,",
						"          parent_contactidname as string,",
						"          preferredsystemuserid as string,",
						"          cog_mg_monthlynooftktinceptiondate as timestamp,",
						"          description as string,",
						"          cog_mg_onceoffstramtmarketername as string,",
						"          cog_mg_monthlynooftkt as integer,",
						"          cog_car_monthlystramtdatepaid as timestamp,",
						"          gendercode as integer,",
						"          creditonholdname as string,",
						"          cog_mp_emailcampaigns as boolean,",
						"          anniversary as timestamp,",
						"          address2_composite as string,",
						"          cog_mg_monthlystramtdatecreatedon as timestamp,",
						"          cog_transactionlastamount_base as decimal(38,2),",
						"          cog_religionname as string,",
						"          utcconversiontimezonecode as integer,",
						"          address1_primarycontactname as string,",
						"          cog_contactclassificationname as string,",
						"          accountidyominame as string,",
						"          adx_identity_username as string,",
						"          msdyn_isminorwithparentalconsentname as string,",
						"          cog_yellowfeverinoculationdate as timestamp,",
						"          cog_inc_craft_maint_count as decimal(38,0),",
						"          cog_shorecrewmembershipname as string,",
						"          websiteurl as string,",
						"          cog_mg_monthlystramtstatus as integer,",
						"          cog_unityaccesslevel as integer,",
						"          cog_sm_pintrest as boolean,",
						"          cog_dob as timestamp,",
						"          cog_mg_monthlystrinceptiondate as timestamp,",
						"          cog_fitnessrenewalinterval as integer,",
						"          cog_inc_craft_events_total as decimal(38,2),",
						"          cog_hasinternetname as string,",
						"          adx_profilemodifiedon as timestamp,",
						"          cog_mg_onceoffstramtstatus as integer,",
						"          modifiedby as string,",
						"          onholdtime as integer,",
						"          address2_telephone1 as string,",
						"          address2_telephone2 as string,",
						"          cog_transactiontotalamount_base as decimal(38,2),",
						"          entityimage as string,",
						"          address2_stateorprovince as string,",
						"          paymenttermscodename as string,",
						"          cog_transactiontotalcount_state as integer,",
						"          cog_operationalpersonnelstation as string,",
						"          adx_createdbyipaddress as string,",
						"          cog_car_monthlynooftktdatepaid as timestamp,",
						"          cog_idnumber as string,",
						"          cog_inc_base_ops_total as decimal(38,2),",
						"          modifiedbyexternalparty as string,",
						"          cog_mp_sendbirthdayemailname as string,",
						"          address3_longitude as double,",
						"          cog_paymentmethodname as string,",
						"          cog_mg_onceoffnooftktmarketer as string,",
						"          cog_mg_monthlynooftktdatecreatedon as timestamp,",
						"          contactid as string,",
						"          cog_hepatitisbvaccinename as string,",
						"          yomifirstname as string,",
						"          businesscardattributes as string,",
						"          cog_car_onceoffstramtpaymentmethod as integer,",
						"          cog_mg_monthlystramt as decimal(38,2),",
						"          createdbyname as string,",
						"          donotemail as boolean,",
						"          cog_mg_monthlynooftktdatecanceled as timestamp,",
						"          cog_hepatitisbvaccine as boolean,",
						"          marketingonlyname as string,",
						"          address2_shippingmethodcodename as string,",
						"          cog_dutycrew as integer,",
						"          parentcontactidyominame as string,",
						"          msdyn_orgchangestatusname as string,",
						"          createdon as timestamp,",
						"          cog_mg_onceoffnooftktstatusname as string,",
						"          cog_windirectcustomerid as string,",
						"          cog_inc_craft_maint_total as decimal(38,2),",
						"          cog_resigndate as timestamp,",
						"          adx_modifiedbyusername as string,",
						"          cog_car_onceoffnooftktpaymentmethod as integer,",
						"          cog_inc_base_ops_count as decimal(38,0),",
						"          telephone2 as string,",
						"          cog_inc_veh_maint_total as decimal(38,2),",
						"          msa_managingpartneridyominame as string,",
						"          preferredsystemuseridyominame as string,",
						"          aging90_base as decimal(38,4),",
						"          msdyn_gdproptoutname as string,",
						"          cog_covidvaccinename as string,",
						"          business2 as string,",
						"          address2_utcoffset as integer,",
						"          accountidname as string,",
						"          annualincome_base as decimal(38,4),",
						"          cog_miscrewid as string,",
						"          traversedpath as string,",
						"          msdyn_segmentidname as string,",
						"          cog_mg_monthlynooftktdatepaid as timestamp,",
						"          address2_addresstypecodename as string,",
						"          address2_shippingmethodcode as integer,",
						"          gendercodename as string,",
						"          address3_name as string,",
						"          adx_identity_lockoutenabledname as string,",
						"          donotsendmm as boolean,",
						"          cog_paymentmethod as integer,",
						"          cog_mg_onceoffstramtdatecreatedon as timestamp,",
						"          createdbyexternalparty as string,",
						"          donotpostalmailname as string,",
						"          donotfax as boolean,",
						"          company as string,",
						"          cog_car_monthlynooftkt as integer,",
						"          cog_accessdb_stcusno as string,",
						"          cog_inc_veh_events_count as decimal(38,0),",
						"          cog_mg_monthlystramtmarketername as string,",
						"          cog_bequestorname as string,",
						"          address1_postalcode as string,",
						"          address2_city as string,",
						"          lastname as string,",
						"          address2_line3 as string,",
						"          cog_hasinternet as boolean,",
						"          preferredappointmentdaycodename as string,",
						"          callback as string,",
						"          followemail as boolean,",
						"          cog_mg_onceoffnooftkt as integer,",
						"          cog_taxdonoronly as boolean,",
						"          cog_donorcareid as string,",
						"          owningteam as string,",
						"          address2_fax as string,",
						"          cog_mg_monthlystramtmarketer as string,",
						"          parentcontactidname as string,",
						"          msdyn_portaltermsagreementdate as timestamp,",
						"          cog_mg_onceoffstramt as decimal(38,2),",
						"          masterid as string,",
						"          address2_freighttermscode as integer,",
						"          preferredserviceid as string,",
						"          cog_car_onceoffstramtpaymentmethodname as string,",
						"          customertypecodename as string,",
						"          cog_npodoc_receipt as boolean,",
						"          cog_windirectsourcename as string,",
						"          msdyn_disablewebtrackingname as string,",
						"          cog_taxdonoronlyname as string,",
						"          createdonbehalfbyname as string,",
						"          territorycodename as string,",
						"          cog_car_monthlystramtmarketer as string,",
						"          address1_county as string,",
						"          cog_car_onceoffnooftktdatecreatedon as timestamp,",
						"          adx_identity_emailaddress1confirmed as boolean,",
						"          adx_profilealert as boolean,",
						"          address1_country as string,",
						"          cog_operationalpersonnelstationname as string,",
						"          modifiedonbehalfby as string,",
						"          cog_inc_craft_ops_day as decimal(38,2),",
						"          assistantphone as string,",
						"          address2_line2 as string,",
						"          address1_stateorprovince as string,",
						"          adx_identity_mobilephoneconfirmed as boolean,",
						"          cog_inc_base_maint_count as decimal(38,0),",
						"          address3_addressid as string,",
						"          modifiedbyexternalpartyname as string,",
						"          cog_medicalrenewalname as string,",
						"          adx_identity_emailaddress1confirmedname as string,",
						"          msdyn_orgchangestatus as integer,",
						"          entityimageid as string,",
						"          cog_mp_ticket_optionsname as string,",
						"          address3_city as string,",
						"          cog_inc_craft_ops_total as decimal(38,2),",
						"          address2_postalcode as string,",
						"          cog_inc_craft_events_night as decimal(38,2),",
						"          cog_serviceduration_state as integer,",
						"          slainvokedidname as string,",
						"          fullname as string,",
						"          cog_knownasname as string,",
						"          cog_racename as string,",
						"          telephone1 as string,",
						"          subscriptionid as string,",
						"          adx_confirmremovepasswordname as string,",
						"          cog_agedifference as decimal(38,10),",
						"          createdby as string,",
						"          cog_administeredname as string,",
						"          cog_administrationcontactyominame as string,",
						"          donotpostalmail as boolean,",
						"          stageid as string,",
						"          cog_medical_doctor as string,",
						"          leadsourcecodename as string,",
						"          yomilastname as string,",
						"          cog_misservicebreak as string,",
						"          cog_car_monthlystramtpaymentmethod as integer,",
						"          msdyn_gdproptout as boolean,",
						"          cog_inc_craft_training_day as decimal(38,2),",
						"          cog_inc_craft_events_count as decimal(38,0),",
						"          cog_mg_monthlystramtpaymentmethodname as string,",
						"          cog_paymenttypename as string,",
						"          adx_profilealertname as string,",
						"          spousesname as string,",
						"          timespentbymeonemailandmeetings as string,",
						"          address3_line2 as string,",
						"          address3_addresstypecode as integer,",
						"          managername as string,",
						"          owningbusinessunitname as string,",
						"          cog_mg_competition as boolean,",
						"          cog_stationidname as string,",
						"          accountrolecode as integer,",
						"          cog_serviceawardstatus as integer,",
						"          cog_yellowfevervaccine as boolean,",
						"          adx_publicprofilecopy as string,",
						"          cog_driverslicensecode as string,",
						"          cog_car_monthlynooftktpaymentmethodname as string,",
						"          cog_car_onceoffstramtdatecanceled as timestamp,",
						"          fax as string,",
						"          shippingmethodcodename as string,",
						"          cog_sm_instagramname as string,",
						"          cog_sm_rssfeedsname as string,",
						"          cog_npodoc_sendmethodname as string,",
						"          cog_serviceduration as integer,",
						"          customersizecode as integer,",
						"          msdyn_isminorname as string,",
						"          address2_freighttermscodename as string,",
						"          address1_line1 as string,",
						"          emailaddress2 as string,",
						"          address3_upszone as string,",
						"          childrensnames as string,",
						"          cog_mp_smscampaignsname as string,",
						"          statecodename as string,",
						"          address1_addresstypecode as integer,",
						"          cog_inc_veh_ops_total as decimal(38,2),",
						"          cog_mp_emailcampaignsname as string,",
						"          cog_car_onceoffnooftkt as integer,",
						"          mergedname as string,",
						"          cog_mp_magazinename as string,",
						"          cog_sm_twittername as string,",
						"          defaultpricelevelidname as string,",
						"          cog_mg_onceoffstramt_base as decimal(38,2),",
						"          cog_car_monthlystramtstatus as integer,",
						"          cog_stationid as string,",
						"          managerphone as string,",
						"          cog_mg_monthlynooftktstatusname as string,",
						"          cog_contactnumber as string,",
						"          cog_mg_onceoffnooftktdatepaid as timestamp,",
						"          msdyn_disablewebtracking as boolean,",
						"          cog_mg_onceoffnooftktpaymentmethodname as string,",
						"          parent_contactidyominame as string,",
						"          address1_shippingmethodcodename as string,",
						"          createdonbehalfby as string,",
						"          cog_car_onceoffstramtmarketer as string,",
						"          cog_car_monthlynooftktstatus as integer,",
						"          owninguser as string,",
						"          cog_sm_linkedin as boolean,",
						"          preferredappointmenttimecodename as string,",
						"          shippingmethodcode as integer,",
						"          cog_datasourcename as string,",
						"          educationcodename as string,",
						"          numberofchildren as integer,",
						"          externaluseridentifier as string,",
						"          address2_addressid as string,",
						"          cog_inc_base_events_count as decimal(38,0),",
						"          cog_mp_appealletter_options as integer,",
						"          cog_unityaccesslevelname as string,",
						"          merged as boolean,",
						"          address1_line2 as string,",
						"          cog_mp_datebdemailsent as timestamp,",
						"          cog_donotupsellname as string,",
						"          address1_postofficebox as string,",
						"          creditonhold as boolean,",
						"          createdonbehalfbyyominame as string,",
						"          mobilephone as string,",
						"          cog_paymenttype as integer,",
						"          cog_age as integer,",
						"          nsri_extensionnumber as string,",
						"          address1_freighttermscode as integer,",
						"          cog_covidinoculationdate as timestamp,",
						"          address1_fax as string,",
						"          address3_freighttermscode as integer,",
						"          createdbyexternalpartyname as string,",
						"          cog_mg_onceoffnooftktdatecanceled as timestamp,",
						"          cog_transactiontotalcount as integer,",
						"          owneridtype as string,",
						"          adx_createdbyusername as string,",
						"          cog_car_onceoffnooftktmarketeryominame as string,",
						"          createdbyyominame as string,",
						"          cog_mg_monthlystramtstatusname as string,",
						"          cog_car_competition as boolean,",
						"          cog_copytophysical as boolean,",
						"          cog_transactiontotalamount_date as timestamp,",
						"          cog_car_onceoffstramtdatecreatedon as timestamp,",
						"          adx_identity_securitystamp as string,",
						"          address3_postalcode as string,",
						"          cog_npodoc_equity as boolean,",
						"          originatingleadid as string,",
						"          address3_line1 as string,",
						"          cog_sm_flickrname as string,",
						"          cog_mg_monthlynooftktmarketeryominame as string,",
						"          adx_identity_logonenabled as boolean,",
						"          cog_mp_smscampaigns as boolean,",
						"          cog_car_onceoffnooftktmarketername as string,",
						"          cog_mp_ticket_options as integer,",
						"          participatesinworkflowname as string,",
						"          cog_mg_monthlystramtdatepaid as timestamp,",
						"          cog_alternatecontact as string,",
						"          preferredsystemuseridname as string,",
						"          territorycode as integer,",
						"          address3_country as string,",
						"          cog_faultyemailaddressdate as timestamp,",
						"          cog_medicalcontactname as string,",
						"          cog_mp_appeallettername as string,",
						"          cog_sm_pintrestname as string,",
						"          cog_inc_veh_training_total as decimal(38,2),",
						"          cog_mp_appealletter_optionsname as string,",
						"          overriddencreatedon as timestamp,",
						"          msdyn_isminorwithparentalconsent as boolean,",
						"          statuscode as integer,",
						"          cog_taxnumber as string,",
						"          isprivate as boolean,",
						"          adx_preferredlanguageid as string,",
						"          mastercontactidname as string,",
						"          cog_accessdb_postofficeonly as string,",
						"          slaname as string,",
						"          cog_mg_monthlynooftktmarketername as string,",
						"          cog_mobilephone2 as string,",
						"          cog_taxdonordate as timestamp,",
						"          isbackofficecustomername as string,",
						"          cog_car_onceoffnooftktpaymentmethodname as string,",
						"          cog_inc_craft_training_night as decimal(38,2),",
						"          cog_mp_magazine_optionsname as string,",
						"          cog_mp_sendbirthdayemail as boolean,",
						"          salutation as string,",
						"          address1_longitude as double,",
						"          cog_inc_craft_ops_count as decimal(38,0),",
						"          cog_npodoc_tax_trans as boolean,",
						"          address3_primarycontactname as string,",
						"          cog_mg_monthlynooftktpaymentmethod as integer,",
						"          familystatuscodename as string,",
						"          cog_npodoc_sendmethod as integer,",
						"          cog_sm_facebookname as string,",
						"          donotbulkemail as boolean,",
						"          cog_transactionlastdate as timestamp,",
						"          cog_lastfitnessdate as timestamp,",
						"          employeeid as string,",
						"          cog_car_onceoffstramtmarketeryominame as string,",
						"          birthdate as timestamp,",
						"          modifiedonbehalfbyyominame as string,",
						"          cog_transactiontotalamount as decimal(38,2),",
						"          haschildrencodename as string,",
						"          address1_utcoffset as integer,",
						"          cog_medicalaidprinciplemember as string,",
						"          parentcustomeridname as string,",
						"          cog_communicationlanguage as integer,",
						"          cog_car_monthlynooftktdatecanceled as timestamp,",
						"          cog_car_monthlystramtmarketeryominame as string,",
						"          cog_inc_craft_training_count as decimal(38,0),",
						"          cog_car_onceoffstramtmarketername as string,",
						"          governmentid as string,",
						"          cog_bloodgroup as string,",
						"          cog_mg_monthlynooftktdateconverted as timestamp,",
						"          cog_mg_monthlystramtmarketeryominame as string,",
						"          cog_datasource as integer,",
						"          slainvokedid as string,",
						"          cog_mp_appealletter as boolean,",
						"          cog_inc_veh_ops_count as decimal(38,0),",
						"          address3_telephone2 as string,",
						"          address3_shippingmethodcode as integer,",
						"          cog_inc_veh_maint_count as decimal(38,0),",
						"          cog_mg_onceoffstramtpaymentmethod as integer,",
						"          cog_importkey as string,",
						"          cog_accessdb_strlistsource as string,",
						"          cog_faultyemailaddress as string,",
						"          adx_modifiedbyipaddress as string,",
						"          adx_identity_locallogindisabled as boolean,",
						"          cog_ageactual as decimal(38,10),",
						"          cog_old_nextfitnessdate as timestamp,",
						"          adx_profileisanonymousname as string,",
						"          cog_accessdbstrcurrentsource as string,",
						"          cog_mg_onceoffstramtdateconverted as timestamp,",
						"          cog_administrationaccount as string,",
						"          entityimage_timestamp as long,",
						"          cog_windirectsource as integer,",
						"          cog_mp_anniversary_options as integer,",
						"          middlename as string,",
						"          department as string,",
						"          address3_composite as string,",
						"          cog_competitionpreferencename as string,",
						"          address2_longitude as double,",
						"          preferredequipmentidname as string,",
						"          cog_telesalesname as string,",
						"          address1_upszone as string,",
						"          aging30_base as decimal(38,4),",
						"          cog_mg_onceoffnooftktpaymentmethod as integer,",
						"          cog_rescuedatalastmodified as timestamp,",
						"          address2_country as string,",
						"          cog_medicalaidnumber as string,",
						"          cog_old_nextmedicaldate as timestamp,",
						"          cog_medicalallergies as string,",
						"          cog_mg_onceoffnooftktdatecreatedon as timestamp,",
						"          cog_administrationaccountyominame as string,",
						"          cog_car_onceoffnooftktmarketer as string,",
						"          statuscodename as string,",
						"          ftpsiteurl as string,",
						"          cog_isvolunteer as boolean,",
						"          cog_car_monthlynooftktmarketeryominame as string,",
						"          cog_communicationlanguagename as string,",
						"          transactioncurrencyidname as string,",
						"          msa_managingpartnerid as string,",
						"          yomifullname as string,",
						"          cog_mg_onceoffnooftktmarketeryominame as string,",
						"          cog_shorecrewmembership as integer,",
						"          owneridyominame as string,",
						"          cog_hepatitisbinoculationdate as timestamp,",
						"          cog_npodoc_tax_transname as string,",
						"          cog_medicalaidname as string,",
						"          cog_car_monthlystramtmarketername as string,",
						"          address2_line1 as string,",
						"          address1_name as string,",
						"          address2_upszone as string,",
						"          cog_inc_craft_maint_day as decimal(38,2),",
						"          donotsendmarketingmaterialname as string,",
						"          cog_sm_flickr as boolean,",
						"          exchangerate as decimal(38,10),",
						"          parentcustomeridtype as string,",
						"          cog_inc_craft_ops_night as decimal(38,2),",
						"          cog_car_onceoffnooftktstatus as integer,",
						"          originatingleadidyominame as string,",
						"          cog_car_onceoffnooftktdatepaid as timestamp,",
						"          adx_identity_lockoutenddate as timestamp,",
						"          cog_npodoc_tax_annuallyname as string,",
						"          address3_addresstypecodename as string,",
						"          lastonholdtime as timestamp,",
						"          cog_mg_monthlystramtdatecanceled as timestamp,",
						"          cog_transactionlastamount as decimal(38,2),",
						"          adx_confirmremovepassword as boolean,",
						"          donotphonename as string,",
						"          cog_car_monthlynooftktpaymentmethod as integer,",
						"          address2_name as string,",
						"          cog_address2street4 as string,",
						"          parentcontactid as string,",
						"          cog_mg_onceoffstramtstatusname as string,",
						"          processid as string,",
						"          emailaddress3 as string,",
						"          msdyn_isminor as boolean,",
						"          cog_accessddbstrlistsource as string,",
						"          cog_mg_monthlynooftktstatus as integer,",
						"          cog_codename as string,",
						"          cog_donotupsell as boolean,",
						"          owningbusinessunit as string,",
						"          cog_administrationcontactname as string,",
						"          cog_shorecrewnoofyears as integer,",
						"          adx_identity_locallogindisabledname as string,",
						"          address3_line3 as string,",
						"          statecode as integer,",
						"          address3_utcoffset as integer,",
						"          adx_timezone as integer,",
						"          cog_mg_monthlynooftktpaymentmethodname as string,",
						"          cog_administrationcontact as string,",
						"          cog_callcentreprojectname as string,",
						"          cog_car_onceoffstramtstatus as integer,",
						"          address3_latitude as double,",
						"          cog_npodoc_receiptname as string,",
						"          creditlimit_base as decimal(38,4),",
						"          aging60 as decimal(38,2),",
						"          cog_ingclient as string,",
						"          cog_inc_craft_events_day as decimal(38,2),",
						"          cog_sm_instagram as boolean,",
						"          adx_identity_accessfailedcount as integer,",
						"          cog_yellowfevervaccinename as string,",
						"          address3_freighttermscodename as string,",
						"          cog_car_monthlynooftktmarketername as string,",
						"          cog_medicalaidprinciplemembername as string,",
						"          cog_inc_craft_training_total as decimal(38,2),",
						"          cog_copytophysicalname as string,",
						"          creditlimit as decimal(38,2),",
						"          cog_serviceawardstatusname as string,",
						"          importsequencenumber as integer,",
						"          slaid as string,",
						"          cog_mg_monthlystramtpaymentmethod as integer,",
						"          cog_car_monthlystramtdatecanceled as timestamp,",
						"          customertypecode as integer,",
						"          cog_externalmarketerlead as string,",
						"          ownerid as string,",
						"          cog_sm_facebook as boolean,",
						"          adx_preferredlanguageidname as string,",
						"          adx_identity_passwordhash as string,",
						"          cog_oldreference as string,",
						"          educationcode as integer,",
						"          familystatuscode as integer,",
						"          cog_car_onceoffstramtstatusname as string,",
						"          parentcustomeridyominame as string,",
						"          cog_nextmedicaldate as timestamp,",
						"          cog_isvolunteername as string,",
						"          marketingonly as boolean,",
						"          cog_car_monthlystramt as decimal(38,2),",
						"          cog_alternatemobile as string,",
						"          cog_administrationaccountname as string,",
						"          preferredcontactmethodcode as integer,",
						"          transactioncurrencyid as string,",
						"          adx_identity_twofactorenabled as boolean,",
						"          cog_mg_monthlynooftktmarketer as string,",
						"          cog_medical_account as string,",
						"          defaultpricelevelid as string,",
						"          cog_mg_onceoffstramtmarketer as string,",
						"          cog_mg_onceoffstramtmarketeryominame as string,",
						"          owneridname as string,",
						"          donotbulkpostalmail as boolean,",
						"          cog_car_monthlystramtstatusname as string,",
						"          cog_car_onceoffstramt as decimal(38,2),",
						"          cog_religion as integer,",
						"          address2_latitude as double,",
						"          cog_mg_onceoffnooftktdateconverted as timestamp,",
						"          cog_inc_base_training_count as decimal(38,0),",
						"          modifiedbyexternalpartyyominame as string,",
						"          address2_telephone3 as string,",
						"          adx_identity_twofactorenabledname as string,",
						"          cog_contactclassification as integer,",
						"          parent_contactid as string,",
						"          versionnumber as long,",
						"          cog_fitnessrenewalintervalname as string,",
						"          donotemailname as string,",
						"          address1_line3 as string,",
						"          annualincome as decimal(38,2),",
						"          address1_telephone1 as string,",
						"          address1_telephone2 as string,",
						"          address1_telephone3 as string,",
						"          yomimiddlename as string,",
						"          cog_inc_base_training_total as decimal(38,2),",
						"          cog_mp_magazine_options as integer,",
						"          adx_profilealertdate as timestamp,",
						"          modifiedon as timestamp,",
						"          cog_medicalrenewal as integer,",
						"          address3_stateorprovince as string,",
						"          pager as string,",
						"          cog_mg_competitionname as string,",
						"          cog_npodoc_tax_annually as boolean,",
						"          aging30 as decimal(38,2),",
						"          cog_mg_monthlystramtdateconverted as timestamp,",
						"          adx_profilelastactivity as timestamp,",
						"          cog_sm_snapchat as boolean,",
						"          address1_composite as string,",
						"          mastercontactidyominame as string,",
						"          cog_car_monthlynooftktmarketer as string,",
						"          address1_freighttermscodename as string,",
						"          accountrolecodename as string,",
						"          cog_sm_twitter as boolean,",
						"          cog_contactisprinciplemedicalmember as boolean,",
						"          address3_shippingmethodcodename as string,",
						"          adx_profileisanonymous as boolean,",
						"          address3_fax as string,",
						"          cog_transactiontotalamount_state as integer,",
						"          address3_telephone1 as string,",
						"          cog_car_monthlystramtdatecreatedon as timestamp,",
						"          address3_telephone3 as string,",
						"          leadsourcecode as integer,",
						"          isbackofficecustomer as boolean,",
						"          suffix as string,",
						"          lastusedincampaign as timestamp,",
						"          cog_medicalconditions as string,",
						"          originatingleadidname as string,",
						"          modifiedbyyominame as string,",
						"          cog_driverslicensenumber as string,",
						"          address1_city as string,",
						"          cog_dutycrewname as string,",
						"          emailaddress1 as string,",
						"          followemailname as string,",
						"          cog_competitionpreference as integer,",
						"          cog_accessdb_docusno as string,",
						"          adx_identity_mobilephoneconfirmedname as string,",
						"          aging90 as decimal(38,2),",
						"          cog_medicalcontact as boolean,",
						"          cog_address1street4 as string,",
						"          adx_identity_lockoutenabled as boolean,",
						"          cog_race as integer,",
						"          isautocreate as boolean,",
						"          address1_shippingmethodcode as integer,",
						"          cog_accessdb_lngclient as string,",
						"          preferredequipmentid as string,",
						"          telephone3 as string,",
						"          createdbyexternalpartyyominame as string,",
						"          nickname as string,",
						"          jobtitle as string,",
						"          cog_car_onceoffnooftktdatecanceled as timestamp,",
						"          home2 as string,",
						"          firstname as string,",
						"          cog_driverslicenseexpirydate as timestamp,",
						"          cog_inc_base_events_total as decimal(38,2),",
						"          address1_addressid as string,",
						"          cog_mg_onceoffstramtdatepaid as timestamp,",
						"          msdyn_segmentid as string,",
						"          cog_lastmedicaldate as timestamp,",
						"          cog_callcentreproject as integer,",
						"          cog_agerounded as integer,",
						"          cog_sm_linkedinname as string,",
						"          msa_managingpartneridname as string,",
						"          timezoneruleversionnumber as integer,",
						"          address2_postofficebox as string,",
						"          cog_sm_youtubename as string,",
						"          cog_nextfitnessdate as timestamp,",
						"          cog_mp_magazine as boolean,",
						"          paymenttermscode as integer,",
						"          cog_bequestor as boolean,",
						"          preferredserviceidname as string,",
						"          cog_inc_craft_maint_night as decimal(38,2),",
						"          cog_mg_onceoffstramtdatecanceled as timestamp,",
						"          preferredcontactmethodcodename as string,",
						"          cog_medicalaidprinciplememberyominame as string,",
						"          cog_mg_onceoffnooftktstatus as integer,",
						"          cog_dmdreference as string,",
						"          cog_sm_snapchatname as string,",
						"          cog_contactisprinciplemedicalmembername as string,",
						"          cog_npodoc_equityname as string,",
						"          isprivatename as string,",
						"          address1_addresstypecodename as string,",
						"          donotbulkemailname as string,",
						"          cog_car_onceoffstramt_base as decimal(38,2),",
						"          preferredappointmentdaycode as integer,",
						"          cog_telesales as boolean,",
						"          cog_accessdb_strcurrentsource as string,",
						"          cog_sm_rssfeeds as boolean,",
						"          cog_inc_veh_training_count as decimal(38,0),",
						"          cog_car_onceoffnooftktstatusname as string,",
						"          cog_mp_anniversary_optionsname as string,",
						"          donotbulkpostalmailname as string,",
						"          cog_inc_base_maint_total as decimal(38,2),",
						"          cog_car_monthlystramt_base as decimal(38,2),",
						"          address2_addresstypecode as integer,",
						"          cog_serviceduration_date as timestamp,",
						"          teamsfollowed as integer,",
						"          cog_mg_onceoffstramtpaymentmethodname as string,",
						"          adx_organizationname as string,",
						"          cog_car_onceoffstramtdatepaid as timestamp,",
						"          aging60_base as decimal(38,4),",
						"          address2_county as string,",
						"          accountid as string,",
						"          cog_mp_datedbemailsent as timestamp,",
						"          cog_joindate as timestamp,",
						"          {preferredsystemuserid@aadobjectid@azureactivedirectoryobjectid} as string,",
						"          {modifiedby@aadobjectid@azureactivedirectoryobjectid} as string,",
						"          {cog_mg_onceoffnooftktmarketer@aadobjectid@azureactivedirectoryobjectid} as string,",
						"          {owningteam@aadobjectid_membershiptype@azureactivedirectoryobjectid} as string,",
						"          {owningteam@aadobjectid_membershiptype@membershiptype} as integer,",
						"          {cog_mg_monthlystramtmarketer@aadobjectid@azureactivedirectoryobjectid} as string,",
						"          {cog_car_monthlystramtmarketer@aadobjectid@azureactivedirectoryobjectid} as string,",
						"          {modifiedonbehalfby@aadobjectid@azureactivedirectoryobjectid} as string,",
						"          {createdby@aadobjectid@azureactivedirectoryobjectid} as string,",
						"          {createdonbehalfby@aadobjectid@azureactivedirectoryobjectid} as string,",
						"          {cog_car_onceoffstramtmarketer@aadobjectid@azureactivedirectoryobjectid} as string,",
						"          {owninguser@aadobjectid@azureactivedirectoryobjectid} as string,",
						"          {cog_administrationaccount@cog_no@cog_erpvendornumber} as string,",
						"          {cog_car_onceoffnooftktmarketer@aadobjectid@azureactivedirectoryobjectid} as string,",
						"          {msa_managingpartnerid@cog_no@cog_erpvendornumber} as string,",
						"          {cog_mg_monthlynooftktmarketer@aadobjectid@azureactivedirectoryobjectid} as string,",
						"          {cog_mg_onceoffstramtmarketer@aadobjectid@azureactivedirectoryobjectid} as string,",
						"          {cog_car_monthlynooftktmarketer@aadobjectid@azureactivedirectoryobjectid} as string,",
						"          {accountid@cog_no@cog_erpvendornumber} as string",
						"     ),",
						"     store: 'dynamics',",
						"     format: 'dynamicsformat',",
						"     entity: 'contact',",
						"     timeout: 30,",
						"     deletable: false,",
						"     insertable: false,",
						"     updateable: false,",
						"     upsertable: true,",
						"     mapColumn(",
						"          parentcustomerid,",
						"          Target,",
						"          cog_contactnumber,",
						"          contactid,",
						"          emailaddress1,",
						"          firstname,",
						"          fullname,",
						"          lastname,",
						"          mobilephone,",
						"          salutation,",
						"          telephone1",
						"     )) ~> sink1"
					]
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/sandbox')]",
				"[concat(variables('factoryId'), '/linkedServices/Dynamics1')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/D365 Transaction')]",
			"type": "Microsoft.DataFactory/factories/dataflows",
			"apiVersion": "2018-06-01",
			"properties": {
				"description": "Contact, MG, Bankdetails",
				"type": "MappingDataFlow",
				"typeProperties": {
					"sources": [
						{
							"dataset": {
								"referenceName": "DataverseDonorOrder",
								"type": "DatasetReference"
							},
							"name": "donororder"
						},
						{
							"dataset": {
								"referenceName": "DataverseBankDetail",
								"type": "DatasetReference"
							},
							"name": "bankdetails"
						}
					],
					"sinks": [
						{
							"linkedService": {
								"referenceName": "sandbox",
								"type": "LinkedServiceReference"
							},
							"name": "SandboxUpdate"
						}
					],
					"transformations": [
						{
							"name": "joindonororderbankdetails"
						},
						{
							"name": "SelectBankDetail",
							"description": "g_cvc, cog_expireydate, cog_creditcardtype, cog_accountholder'"
						},
						{
							"name": "DrivedTxDateanndAmount"
						},
						{
							"name": "AggregateTransaction"
						},
						{
							"name": "FilterDonorOrders"
						},
						{
							"name": "SelectDonorOrder"
						},
						{
							"name": "derivedColumnTxDateKey"
						}
					],
					"scriptLines": [
						"source(output(",
						"          cog_donororderid as string,",
						"          cog_paymentmadename as string,",
						"          cog_donationreasonname as string,",
						"          cog_resendname as string,",
						"          cog_upsell as boolean,",
						"          modifiedon as timestamp,",
						"          cog_donororderfromname as string,",
						"          overriddencreatedon as timestamp,",
						"          statuscodename as string,",
						"          cog_dateassigned as timestamp,",
						"          cog_delivery_tax_transname as string,",
						"          cog_balanceamount_base as decimal(38,2),",
						"          cog_totalticketamount_base as decimal(38,0),",
						"          transactioncurrencyidname as string,",
						"          cog_npodoc_tax_transname as string,",
						"          cog_searescuecampaignname as string,",
						"          cog_bankdetailsname as string,",
						"          cog_leadtype as integer,",
						"          cog_followupdate as timestamp,",
						"          cog_npodoc_receipt as boolean,",
						"          cog_sendticketsname as string,",
						"          cog_description as string,",
						"          cog_balanceamount as decimal(38,2),",
						"          cog_communicationlanguagename as string,",
						"          cog_campaignname as string,",
						"          cog_totalticketamount_state as integer,",
						"          cog_accessdb_lnglogno as string,",
						"          cog_sendwelcomepackdate as timestamp,",
						"          statuscode as integer,",
						"          cog_sendwelcomepackname as string,",
						"          cog_dateconverted as timestamp,",
						"          cog_contactyominame as string,",
						"          cog_paymentmethodname as string,",
						"          cog_paidamount as decimal(38,0),",
						"          cog_leadtypename as string,",
						"          cog_npodoc_tax_annuallyname as string,",
						"          cog_source as integer,",
						"          cog_ticketamount as decimal(38,0),",
						"          statecodename as string,",
						"          cog_paymenttype as integer,",
						"          exchangerate as decimal(38,10),",
						"          cog_npodoc_equityname as string,",
						"          cog_searescuecampaign as integer,",
						"          cog_npodoc_tax_trans as boolean,",
						"          cog_npoadministrationafrikaanstext as string,",
						"          createdon as timestamp,",
						"          cog_cancellreasonname as string,",
						"          cog_paymentmethod as integer,",
						"          cog_ticketamount_base as decimal(38,0),",
						"          cog_administrationaccountyominame as string,",
						"          cog_nameonvessel as string,",
						"          cog_npodoc_sendmethod as integer,",
						"          cog_donotcreatenpodocumentname as string,",
						"          cog_resend as boolean,",
						"          cog_communicationlanguage as integer,",
						"          cog_competition as integer,",
						"          cog_donationreason as integer,",
						"          owneridyominame as string,",
						"          cog_sendpaymentdetails as boolean,",
						"          timezoneruleversionnumber as integer,",
						"          cof_datecancelled as timestamp,",
						"          owningbusinessunitname as string,",
						"          cog_administrationaccountname as string,",
						"          cog_sendpaymentdetailsdate as timestamp,",
						"          cog_npodoc_receiptname as string,",
						"          cog_paymenttypename as string,",
						"          cog_transactionname as string,",
						"          cog_datasource as integer,",
						"          cog_stationname as string,",
						"          createdonbehalfbyname as string,",
						"          cog_delivery_receipt as boolean,",
						"          owneridtype as string,",
						"          cog_cancellreason as integer,",
						"          cog_delivery_tax_trans as boolean,",
						"          owneridname as string,",
						"          modifiedonbehalfbyname as string,",
						"          cog_contactname as string,",
						"          cog_delivery_equityname as string,",
						"          cog_accessdb_strcompanyname as string,",
						"          cog_npodoc_equity as boolean,",
						"          cog_npodocumentenglishtext as string,",
						"          cog_totalticketamount as decimal(38,0),",
						"          cog_bankreference as string,",
						"          cog_donorleadname as string,",
						"          cog_name as string,",
						"          cog_sendwelcomepack as boolean,",
						"          cog_npoadministrationenglishtext as string,",
						"          cog_donationamount_base as decimal(38,0),",
						"          cog_sendpaymentdetailsname as string,",
						"          cog_datebanked as timestamp,",
						"          cog_paidamount_base as decimal(38,0),",
						"          cog_npodoc_tax_annually as boolean,",
						"          cog_completedonororder as boolean,",
						"          cog_sourcename as string,",
						"          createdonbehalfbyyominame as string,",
						"          cog_noofdonortickets_state as integer,",
						"          cog_noofdonortickets as integer,",
						"          cog_accountname as string,",
						"          cog_administeredname as string,",
						"          cog_donationamount as decimal(38,0),",
						"          cog_administrationcontactyominame as string,",
						"          cog_assignticketnumbersname as string,",
						"          cog_datepaid as timestamp,",
						"          cog_delivery_receiptname as string,",
						"          cog_numberoftickets as integer,",
						"          cog_noofdonortickets_date as timestamp,",
						"          cog_donororderfrom as integer,",
						"          cog_createticketrowsname as string,",
						"          cog_donationtype as integer,",
						"          createdbyname as string,",
						"          cog_accountyominame as string,",
						"          modifiedbyyominame as string,",
						"          cog_donationtypename as string,",
						"          cog_administrationcontactname as string,",
						"          modifiedonbehalfbyyominame as string,",
						"          utcconversiontimezonecode as integer,",
						"          cog_sendtickets as boolean,",
						"          cog_upsellname as string,",
						"          cog_assignticketnumbers as boolean,",
						"          importsequencenumber as integer,",
						"          statecode as integer,",
						"          cog_paymentmade as boolean,",
						"          versionnumber as long,",
						"          cog_delivery_equity as boolean,",
						"          cog_npodocumentafrikaanstext as string,",
						"          cog_completedonorordername as string,",
						"          cog_npodoc_sendmethodname as string,",
						"          cog_totalticketamount_date as timestamp,",
						"          modifiedbyname as string,",
						"          createdbyyominame as string,",
						"          cog_administered as boolean,",
						"          cog_competitionname as string,",
						"          cog_donotcreatenpodocument as boolean,",
						"          cog_shutoffdate as timestamp,",
						"          cog_createticketrows as boolean,",
						"          cog_datasourcename as string,",
						"          cog_donorlead as string,",
						"          cog_station as string,",
						"          createdonbehalfby as string,",
						"          cog_administrationcontact as string,",
						"          owninguser as string,",
						"          cog_bankdetails as string,",
						"          cog_contact as string,",
						"          modifiedby as string,",
						"          transactioncurrencyid as string,",
						"          cog_administrationaccount as string,",
						"          modifiedonbehalfby as string,",
						"          cog_transaction as string,",
						"          ownerid as string,",
						"          cog_campaign as string,",
						"          {@odata.etag} as string,",
						"          createdby as string,",
						"          owningbusinessunit as string,",
						"          cog_account as string,",
						"          owningteam as string",
						"     ),",
						"     allowSchemaDrift: false,",
						"     validateSchema: false,",
						"     manifestType: 'model') ~> donororder",
						"source(output(",
						"          createdonbehalfbyyominame as string,",
						"          statecode as integer,",
						"          statecodename as string,",
						"          cog_contactidname as string,",
						"          overriddencreatedon as timestamp,",
						"          cog_accountidname as string,",
						"          cog_creditcardtype as integer,",
						"          cog_accountnumber as string,",
						"          importsequencenumber as integer,",
						"          organizationidname as string,",
						"          cog_accountholder as string,",
						"          cog_bankname as string,",
						"          cog_contactidyominame as string,",
						"          utcconversiontimezonecode as integer,",
						"          createdbyyominame as string,",
						"          modifiedbyname as string,",
						"          versionnumber as long,",
						"          modifiedbyyominame as string,",
						"          timezoneruleversionnumber as integer,",
						"          statuscodename as string,",
						"          cog_accountidyominame as string,",
						"          modifiedon as timestamp,",
						"          cog_creditcardtypename as string,",
						"          cog_bankdetailsid as string,",
						"          cog_accounttype as integer,",
						"          modifiedonbehalfbyyominame as string,",
						"          statuscode as integer,",
						"          createdbyname as string,",
						"          createdon as timestamp,",
						"          createdonbehalfbyname as string,",
						"          modifiedonbehalfbyname as string,",
						"          cog_cvc as string,",
						"          cog_accounttypename as string,",
						"          cog_expireydate as timestamp,",
						"          cog_branchcode as string,",
						"          cog_accountid as string,",
						"          cog_bank as string,",
						"          createdonbehalfby as string,",
						"          cog_contactid as string,",
						"          modifiedby as string,",
						"          modifiedonbehalfby as string,",
						"          {@odata.etag} as string,",
						"          createdby as string,",
						"          organizationid as string",
						"     ),",
						"     allowSchemaDrift: false,",
						"     validateSchema: false,",
						"     manifestType: 'model') ~> bankdetails",
						"FilterDonorOrders, SelectBankDetail join(cog_bankdetails == cog_bankdetailsid,",
						"     joinType:'left',",
						"     matchType:'exact',",
						"     ignoreSpaces: false,",
						"     broadcast: 'auto')~> joindonororderbankdetails",
						"bankdetails select(mapColumn(",
						"          cog_bankdetailsid,",
						"          cog_accountnumber,",
						"          cog_accounttype,",
						"          cog_bank,",
						"          cog_branchcode,",
						"          cog_cvc,",
						"          cog_expireydate,",
						"          cog_creditcardtype,",
						"          cog_accountholder",
						"     ),",
						"     skipDuplicateMapInputs: false,",
						"     skipDuplicateMapOutputs: false) ~> SelectBankDetail",
						"joindonororderbankdetails derive(cog_transactionamount = iif(isNull(cog_ticketamount),cog_donationamount,cog_ticketamount)) ~> DrivedTxDateanndAmount",
						"DrivedTxDateanndAmount aggregate(groupBy(cog_division,",
						"          cog_contact,",
						"          cog_paymentmethod,",
						"          cog_bankdetailsid),",
						"     cog_transactionamount = sum(cog_transactionamount),",
						"          each(match(name=='cog_donororderfrom'), $$ = first($$))) ~> AggregateTransaction",
						"SelectDonorOrder filter(statuscode==181310001&&\r",
						"cog_division==181310001&&\r",
						"cog_donororderfrom==181310000&&\r",
						"statecode==0&&\r",
						"(cog_paymentmethod==181310001||cog_paymentmethod==181310003)) ~> FilterDonorOrders",
						"donororder select(mapColumn(",
						"          cog_donororderid,",
						"          statecode,",
						"          statuscode,",
						"          cog_donororderfrom,",
						"          cog_division = cog_competition,",
						"          cog_ticketamount,",
						"          cog_donationamount,",
						"          cog_account,",
						"          cog_accountname,",
						"          cog_contact,",
						"          cog_contactname,",
						"          cog_bankdetails,",
						"          cog_bankdetailsname,",
						"          cog_paymenttype,",
						"          cog_donationtype,",
						"          cog_paymentmethod",
						"     ),",
						"     skipDuplicateMapInputs: false,",
						"     skipDuplicateMapOutputs: false) ~> SelectDonorOrder",
						"AggregateTransaction derive(cog_transactiondate = currentUTC()) ~> derivedColumnTxDateKey",
						"derivedColumnTxDateKey sink(allowSchemaDrift: false,",
						"     validateSchema: false,",
						"     input(",
						"          cog_account as string,",
						"          cog_expireydate as timestamp,",
						"          versionnumber as long,",
						"          cog_searescuecampaignname as string,",
						"          createdon as timestamp,",
						"          cog_accountyominame as string,",
						"          cog_nameonvessel as string,",
						"          cog_branchcode as string,",
						"          statuscodename as string,",
						"          cog_bankname as string,",
						"          cog_paymenttype as integer,",
						"          cog_transactiondate as timestamp,",
						"          modifiedbyyominame as string,",
						"          cog_transactionamountpaid as decimal(38,2),",
						"          owneridtype as string,",
						"          cog_npodoc_sendmethodname as string,",
						"          cog_transactionamount_base as decimal(38,2),",
						"          cog_accountname as string,",
						"          cog_accounttypename as string,",
						"          modifiedbyname as string,",
						"          cog_cancelledtransactionamount_base as decimal(38,2),",
						"          cog_delivery_receipt as boolean,",
						"          cog_paymentmethodname as string,",
						"          cog_cvc as string,",
						"          owneridname as string,",
						"          cog_administrationaccount as string,",
						"          overriddencreatedon as timestamp,",
						"          cog_cancelledtransactionamountnegative as decimal(38,2),",
						"          cog_npodoc_tax_transname as string,",
						"          cog_bankdetailname as string,",
						"          cog_npodoc_equityname as string,",
						"          cog_delivery_equityname as string,",
						"          cog_npoadministrationenglishtext as string,",
						"          createdonbehalfbyyominame as string,",
						"          cog_transactionclosedate as timestamp,",
						"          modifiedonbehalfby as string,",
						"          exchangerate as decimal(38,10),",
						"          cog_transactionfromname as string,",
						"          owneridyominame as string,",
						"          cog_transactionsource as integer,",
						"          cog_npoadministrationafrikaanstext as string,",
						"          cog_searescuecampaign as integer,",
						"          cog_communicationlanguagename as string,",
						"          cog_delivery_tax_transname as string,",
						"          cog_stationid as string,",
						"          cog_transactionfrom as integer,",
						"          cog_delivery_receiptname as string,",
						"          cog_quantity as integer,",
						"          statecode as integer,",
						"          cog_npodocumentenglishtext as string,",
						"          timezoneruleversionnumber as integer,",
						"          cog_transactiontype as integer,",
						"          cog_transactionsourcename as string,",
						"          cog_accountnumber as string,",
						"          cog_administrationaccountname as string,",
						"          cog_bank as string,",
						"          cog_cancelledtransactionamount as decimal(38,2),",
						"          cog_cancelledtransaction as string,",
						"          cog_npodoc_tax_annuallyname as string,",
						"          owninguser as string,",
						"          statuscode as integer,",
						"          cog_batchno as string,",
						"          cog_cancelledtransactionamountnegative_base as decimal(38,2),",
						"          cog_npodoc_receipt as boolean,",
						"          cog_donotcreatenpodocumentname as string,",
						"          cog_oldtaxcertificateyear as string,",
						"          cog_transactionno as string,",
						"          createdonbehalfbyname as string,",
						"          cog_paymenttypename as string,",
						"          cog_delivery_tax_annually as boolean,",
						"          createdonbehalfby as string,",
						"          createdby as string,",
						"          utcconversiontimezonecode as integer,",
						"          cog_contact as string,",
						"          cog_bankdetail as string,",
						"          cog_transactionfailurestatus as integer,",
						"          owningteam as string,",
						"          modifiedon as timestamp,",
						"          importsequencenumber as integer,",
						"          cog_administrationcontactname as string,",
						"          cog_administeredname as string,",
						"          cog_oldtaxcertificatenumber as string,",
						"          cog_delivery_equity as boolean,",
						"          cog_contactyominame as string,",
						"          ownerid as string,",
						"          cog_divisionname as string,",
						"          cog_division as integer,",
						"          cog_transactiontypename as string,",
						"          cog_administrationcontact as string,",
						"          createdbyname as string,",
						"          cog_delivery_tax_annuallyname as string,",
						"          cog_cancelledtransactionname as string,",
						"          cog_stationidname as string,",
						"          cog_accountholder as string,",
						"          cog_accounttype as integer,",
						"          cog_npodoc_sendmethod as integer,",
						"          cog_fiscalyear as integer,",
						"          cog_nonprofitdocumentreference as string,",
						"          cog_transactionid as string,",
						"          cog_communicationlanguage as integer,",
						"          cog_campaign as string,",
						"          cog_donotcreatenpodocument as boolean,",
						"          transactioncurrencyid as string,",
						"          cog_delivery_tax_trans as boolean,",
						"          cog_administrationcontactyominame as string,",
						"          cog_npodoc_tax_annually as boolean,",
						"          modifiedby as string,",
						"          cog_oldreceiptnumber as string,",
						"          cog_fiscalyearname as string,",
						"          cog_nonprofitdocumentreferencename as string,",
						"          createdbyyominame as string,",
						"          cog_transactionamountpaid_base as decimal(38,2),",
						"          transactioncurrencyidname as string,",
						"          cog_reversedreason as string,",
						"          cog_windirectinglogtrans as string,",
						"          cog_transactionamount as decimal(38,2),",
						"          owningbusinessunitname as string,",
						"          cog_transactiondescription as string,",
						"          cog_windirectddid as string,",
						"          cog_paymentmethod as integer,",
						"          cog_npodoc_tax_trans as boolean,",
						"          cog_contactname as string,",
						"          cog_bankreference as string,",
						"          modifiedonbehalfbyname as string,",
						"          cog_npodoc_equity as boolean,",
						"          cog_transactiondatepaid as timestamp,",
						"          cog_npodocumentafrikaanstext as string,",
						"          modifiedonbehalfbyyominame as string,",
						"          statecodename as string,",
						"          cog_administered as boolean,",
						"          cog_transactionfailurestatusname as string,",
						"          cog_administrationaccountyominame as string,",
						"          cog_npodoc_receiptname as string,",
						"          cog_campaignname as string,",
						"          cog_donationtypename as string,",
						"          owningbusinessunit as string,",
						"          cog_donationtype as integer,",
						"          {cog_account@cog_no@cog_erpvendornumber} as string,",
						"          {cog_administrationaccount@cog_no@cog_erpvendornumber} as string,",
						"          {modifiedonbehalfby@aadobjectid@azureactivedirectoryobjectid} as string,",
						"          {cog_cancelledtransaction@cog_accounttransaction@cog_account} as string,",
						"          {cog_cancelledtransaction@cog_accounttransaction@cog_bankdetail} as string,",
						"          {cog_cancelledtransaction@cog_accounttransaction@cog_division} as integer,",
						"          {cog_cancelledtransaction@cog_accounttransaction@cog_paymentmethod} as integer,",
						"          {cog_cancelledtransaction@cog_contacttransaction@cog_bankdetail} as string,",
						"          {cog_cancelledtransaction@cog_contacttransaction@cog_contact} as string,",
						"          {cog_cancelledtransaction@cog_contacttransaction@cog_division} as integer,",
						"          {cog_cancelledtransaction@cog_contacttransaction@cog_paymentmethod} as integer,",
						"          {owninguser@aadobjectid@azureactivedirectoryobjectid} as string,",
						"          {createdonbehalfby@aadobjectid@azureactivedirectoryobjectid} as string,",
						"          {createdby@aadobjectid@azureactivedirectoryobjectid} as string,",
						"          {owningteam@aadobjectid_membershiptype@azureactivedirectoryobjectid} as string,",
						"          {owningteam@aadobjectid_membershiptype@membershiptype} as integer,",
						"          {modifiedby@aadobjectid@azureactivedirectoryobjectid} as string",
						"     ),",
						"     store: 'dynamics',",
						"     format: 'dynamicsformat',",
						"     entity: 'cog_transaction',",
						"     timeout: 30,",
						"     deletable: false,",
						"     insertable: true,",
						"     updateable: false,",
						"     upsertable: false,",
						"     mapColumn(",
						"          cog_transactiondate,",
						"          cog_contact,",
						"          cog_division,",
						"          cog_transactionamount,",
						"          cog_transactionfrom = cog_donororderfrom,",
						"          cog_bankdetail = cog_bankdetailsid",
						"     )) ~> SandboxUpdate"
					]
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/DataverseDonorOrder')]",
				"[concat(variables('factoryId'), '/datasets/DataverseBankDetail')]",
				"[concat(variables('factoryId'), '/linkedServices/sandbox')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/D365 Transaction_copy1')]",
			"type": "Microsoft.DataFactory/factories/dataflows",
			"apiVersion": "2018-06-01",
			"properties": {
				"description": "Contact, MG, Bankdetails",
				"type": "MappingDataFlow",
				"typeProperties": {
					"sources": [
						{
							"dataset": {
								"referenceName": "DataverseDonorOrder",
								"type": "DatasetReference"
							},
							"name": "donororder"
						},
						{
							"dataset": {
								"referenceName": "DataverseBankDetail",
								"type": "DatasetReference"
							},
							"name": "bankdetails"
						}
					],
					"sinks": [
						{
							"linkedService": {
								"referenceName": "sandbox",
								"type": "LinkedServiceReference"
							},
							"name": "CreateTransaction"
						}
					],
					"transformations": [
						{
							"name": "joindonororderbankdetails"
						},
						{
							"name": "DrivedTxDateanndAmount"
						},
						{
							"name": "AggregateTransaction"
						},
						{
							"name": "derivedColumnTxDateKey"
						}
					],
					"scriptLines": [
						"source(output(",
						"          {@odata.etag} as string,",
						"          cog_bankdetails as string,",
						"          cog_contact as string,",
						"          ownerid as string,",
						"          transactioncurrencyid as string,",
						"          cog_competition as string,",
						"          cog_donationamount as string,",
						"          cog_donationtype as string,",
						"          cog_donororderfrom as string,",
						"          cog_donororderid as string,",
						"          cog_name as string,",
						"          cog_paymentmethod as string,",
						"          cog_paymenttype as string,",
						"          cog_ticketamount as string,",
						"          statuscode as string",
						"     ),",
						"     allowSchemaDrift: false,",
						"     validateSchema: false,",
						"     query: '<fetch version=\"1.0\" mapping=\"logical\" no-lock=\"false\" distinct=\"true\">\\n     <entity name=\"cog_donororder\">\\n          <attribute name=\"cog_name\"/>\\n          <attribute name=\"cog_donororderid\"/>\\n          <attribute name=\"cog_contact\"/>\\n          <attribute name=\"statecode\"/>\\n          <attribute name=\"statuscode\"/>\\n          <attribute name=\"cog_bankdetails\"/>\\n          <attribute name=\"cog_competition\"/>\\n          <attribute name=\"cog_ticketamount\"/>\\n          <attribute name=\"cog_donationamount\"/>\\n          <attribute name=\"cog_paymentmethod\"/>\\n          <attribute name=\"cog_paymenttype\"/>\\n          <attribute name=\"cog_donororderfrom\"/>\\n          <attribute name=\"cog_donationtype\"/>\\n          <attribute name=\"ownerid\"/>\\n          <order attribute=\"cog_contact\" descending=\"false\"/>\\n          <filter type=\"and\">\\n               <condition attribute=\"statuscode\" operator=\"in\">\\n                    <value>181310001</value>\\n               </condition>\\n               <condition attribute=\"cog_competition\" operator=\"eq\" value=\"181310001\"/>\\n               <condition attribute=\"cog_donororderfrom\" operator=\"eq\" value=\"181310000\"/>\\n               <condition attribute=\"cog_bankdetails\" operator=\"not-null\"/>\\n               <filter type=\"or\">\\n                    <condition attribute=\"cog_paymentmethod\" operator=\"eq\" value=\"181310001\"/>\\n                    <condition attribute=\"cog_paymentmethod\" operator=\"eq\" value=\"181310003\"/>\\n               </filter>\\n          </filter>\\n     </entity>\\n</fetch>',",
						"     manifestType: 'model') ~> donororder",
						"source(output(",
						"          createdonbehalfbyyominame as string,",
						"          statecode as integer,",
						"          statecodename as string,",
						"          cog_contactidname as string,",
						"          overriddencreatedon as timestamp,",
						"          cog_accountidname as string,",
						"          cog_creditcardtype as integer,",
						"          cog_accountnumber as string,",
						"          importsequencenumber as integer,",
						"          organizationidname as string,",
						"          cog_accountholder as string,",
						"          cog_bankname as string,",
						"          cog_contactidyominame as string,",
						"          utcconversiontimezonecode as integer,",
						"          createdbyyominame as string,",
						"          modifiedbyname as string,",
						"          versionnumber as long,",
						"          modifiedbyyominame as string,",
						"          timezoneruleversionnumber as integer,",
						"          statuscodename as string,",
						"          cog_accountidyominame as string,",
						"          modifiedon as timestamp,",
						"          cog_creditcardtypename as string,",
						"          cog_bankdetailsid as string,",
						"          cog_accounttype as integer,",
						"          modifiedonbehalfbyyominame as string,",
						"          statuscode as integer,",
						"          createdbyname as string,",
						"          createdon as timestamp,",
						"          createdonbehalfbyname as string,",
						"          modifiedonbehalfbyname as string,",
						"          cog_cvc as string,",
						"          cog_accounttypename as string,",
						"          cog_expireydate as timestamp,",
						"          cog_branchcode as string,",
						"          cog_accountid as string,",
						"          cog_bank as string,",
						"          createdonbehalfby as string,",
						"          cog_contactid as string,",
						"          modifiedby as string,",
						"          modifiedonbehalfby as string,",
						"          {@odata.etag} as string,",
						"          createdby as string,",
						"          organizationid as string",
						"     ),",
						"     allowSchemaDrift: true,",
						"     validateSchema: false,",
						"     manifestType: 'model') ~> bankdetails",
						"donororder, bankdetails join(cog_contact == cog_contactid,",
						"     joinType:'left',",
						"     matchType:'exact',",
						"     ignoreSpaces: false,",
						"     broadcast: 'auto')~> joindonororderbankdetails",
						"joindonororderbankdetails derive(cog_transactionamount = iif(isNull(cog_ticketamount),cog_donationamount,cog_ticketamount)) ~> DrivedTxDateanndAmount",
						"DrivedTxDateanndAmount aggregate(groupBy(cog_competition,",
						"          cog_contact,",
						"          cog_paymentmethod,",
						"          cog_bankdetails),",
						"     cog_transactionamount = sum(toInteger(cog_transactionamount)),",
						"          each(match(name=='cog_donororderfrom'), $$ = first($$))) ~> AggregateTransaction",
						"AggregateTransaction derive(cog_transactiondate = currentUTC(),",
						"          cog_trans_do_contact = cog_bankdetails+cog_contact+toString(cog_competition)+toString(cog_paymentmethod)) ~> derivedColumnTxDateKey",
						"derivedColumnTxDateKey sink(allowSchemaDrift: true,",
						"     validateSchema: false,",
						"     input(",
						"          cog_account as string,",
						"          cog_expireydate as timestamp,",
						"          versionnumber as long,",
						"          cog_searescuecampaignname as string,",
						"          createdon as timestamp,",
						"          cog_accountyominame as string,",
						"          cog_nameonvessel as string,",
						"          cog_branchcode as string,",
						"          statuscodename as string,",
						"          cog_bankname as string,",
						"          cog_paymenttype as integer,",
						"          cog_transactiondate as timestamp,",
						"          modifiedbyyominame as string,",
						"          cog_transactionamountpaid as decimal(38,2),",
						"          owneridtype as string,",
						"          cog_npodoc_sendmethodname as string,",
						"          cog_transactionamount_base as decimal(38,2),",
						"          cog_accountname as string,",
						"          modifiedbyname as string,",
						"          cog_cancelledtransactionamount_base as decimal(38,2),",
						"          cog_delivery_receipt as boolean,",
						"          cog_paymentmethodname as string,",
						"          cog_cvc as string,",
						"          owneridname as string,",
						"          cog_trans_do_contact as string,",
						"          cog_administrationaccount as string,",
						"          overriddencreatedon as timestamp,",
						"          cog_cancelledtransactionamountnegative as decimal(38,2),",
						"          cog_npodoc_tax_transname as string,",
						"          cog_npodoc_equityname as string,",
						"          cog_delivery_equityname as string,",
						"          cog_npoadministrationenglishtext as string,",
						"          createdonbehalfbyyominame as string,",
						"          cog_transactionclosedate as timestamp,",
						"          modifiedonbehalfby as string,",
						"          exchangerate as decimal(38,10),",
						"          cog_transactionfromname as string,",
						"          owneridyominame as string,",
						"          cog_transactionsource as integer,",
						"          cog_npoadministrationafrikaanstext as string,",
						"          cog_searescuecampaign as integer,",
						"          cog_communicationlanguagename as string,",
						"          cog_delivery_tax_transname as string,",
						"          cog_stationid as string,",
						"          cog_transactionfrom as integer,",
						"          cog_delivery_receiptname as string,",
						"          cog_quantity as integer,",
						"          statecode as integer,",
						"          cog_npodocumentenglishtext as string,",
						"          timezoneruleversionnumber as integer,",
						"          cog_transactiontype as integer,",
						"          cog_transactionsourcename as string,",
						"          cog_accountnumber as string,",
						"          cog_administrationaccountname as string,",
						"          cog_bank as string,",
						"          cog_cancelledtransactionamount as decimal(38,2),",
						"          cog_cancelledtransaction as string,",
						"          cog_npodoc_tax_annuallyname as string,",
						"          owninguser as string,",
						"          statuscode as integer,",
						"          cog_batchno as string,",
						"          cog_cancelledtransactionamountnegative_base as decimal(38,2),",
						"          cog_npodoc_receipt as boolean,",
						"          cog_donotcreatenpodocumentname as string,",
						"          cog_oldtaxcertificateyear as string,",
						"          cog_transactionno as string,",
						"          createdonbehalfbyname as string,",
						"          cog_paymenttypename as string,",
						"          cog_delivery_tax_annually as boolean,",
						"          createdonbehalfby as string,",
						"          createdby as string,",
						"          utcconversiontimezonecode as integer,",
						"          cog_contact as string,",
						"          cog_accounttypename as string,",
						"          cog_transactionfailurestatus as integer,",
						"          owningteam as string,",
						"          modifiedon as timestamp,",
						"          importsequencenumber as integer,",
						"          cog_administrationcontactname as string,",
						"          cog_administeredname as string,",
						"          cog_oldtaxcertificatenumber as string,",
						"          cog_delivery_equity as boolean,",
						"          cog_contactyominame as string,",
						"          ownerid as string,",
						"          cog_divisionname as string,",
						"          cog_division as integer,",
						"          cog_transactiontypename as string,",
						"          cog_administrationcontact as string,",
						"          createdbyname as string,",
						"          cog_delivery_tax_annuallyname as string,",
						"          cog_cancelledtransactionname as string,",
						"          cog_stationidname as string,",
						"          cog_transactionid as string,",
						"          cog_accountholder as string,",
						"          cog_bankdetailsname as string,",
						"          cog_accounttype as integer,",
						"          cog_npodoc_sendmethod as integer,",
						"          cog_fiscalyear as integer,",
						"          cog_nonprofitdocumentreference as string,",
						"          cog_bankdetails as string,",
						"          cog_communicationlanguage as integer,",
						"          cog_campaign as string,",
						"          cog_donotcreatenpodocument as boolean,",
						"          transactioncurrencyid as string,",
						"          cog_delivery_tax_trans as boolean,",
						"          cog_administrationcontactyominame as string,",
						"          cog_npodoc_tax_annually as boolean,",
						"          modifiedby as string,",
						"          cog_oldreceiptnumber as string,",
						"          cog_fiscalyearname as string,",
						"          cog_nonprofitdocumentreferencename as string,",
						"          createdbyyominame as string,",
						"          cog_transactionamountpaid_base as decimal(38,2),",
						"          transactioncurrencyidname as string,",
						"          cog_reversedreason as string,",
						"          cog_windirectinglogtrans as string,",
						"          cog_transactionamount as decimal(38,2),",
						"          owningbusinessunitname as string,",
						"          cog_transactiondescription as string,",
						"          cog_windirectddid as string,",
						"          cog_paymentmethod as integer,",
						"          cog_npodoc_tax_trans as boolean,",
						"          cog_contactname as string,",
						"          cog_bankreference as string,",
						"          modifiedonbehalfbyname as string,",
						"          cog_npodoc_equity as boolean,",
						"          cog_transactiondatepaid as timestamp,",
						"          cog_npodocumentafrikaanstext as string,",
						"          modifiedonbehalfbyyominame as string,",
						"          statecodename as string,",
						"          cog_administered as boolean,",
						"          cog_transactionfailurestatusname as string,",
						"          cog_administrationaccountyominame as string,",
						"          cog_npodoc_receiptname as string,",
						"          cog_campaignname as string,",
						"          cog_donationtypename as string,",
						"          owningbusinessunit as string,",
						"          cog_donationtype as integer,",
						"          {cog_account@cog_no@cog_erpvendornumber} as string,",
						"          {cog_administrationaccount@cog_no@cog_erpvendornumber} as string,",
						"          {modifiedonbehalfby@aadobjectid@azureactivedirectoryobjectid} as string,",
						"          {cog_cancelledtransaction@cog_donorodercontactaggregation@cog_bankdetails} as string,",
						"          {cog_cancelledtransaction@cog_donorodercontactaggregation@cog_contact} as string,",
						"          {cog_cancelledtransaction@cog_donorodercontactaggregation@cog_division} as integer,",
						"          {cog_cancelledtransaction@cog_donorodercontactaggregation@cog_paymentmethod} as integer,",
						"          {owninguser@aadobjectid@azureactivedirectoryobjectid} as string,",
						"          {createdonbehalfby@aadobjectid@azureactivedirectoryobjectid} as string,",
						"          {createdby@aadobjectid@azureactivedirectoryobjectid} as string,",
						"          {owningteam@aadobjectid_membershiptype@azureactivedirectoryobjectid} as string,",
						"          {owningteam@aadobjectid_membershiptype@membershiptype} as integer,",
						"          {modifiedby@aadobjectid@azureactivedirectoryobjectid} as string",
						"     ),",
						"     store: 'dynamics',",
						"     format: 'dynamicsformat',",
						"     entity: 'cog_transaction',",
						"     timeout: 30,",
						"     deletable: false,",
						"     insertable: true,",
						"     updateable: false,",
						"     upsertable: false,",
						"     skipDuplicateMapInputs: true,",
						"     skipDuplicateMapOutputs: true,",
						"     mapColumn(",
						"          cog_transactiondate,",
						"          cog_contact,",
						"          cog_transactionamount,",
						"          cog_paymentmethod,",
						"          cog_bankdetails,",
						"          cog_transactionfrom = cog_donororderfrom,",
						"          cog_division = cog_competition,",
						"          cog_trans_do_contact",
						"     )) ~> CreateTransaction"
					]
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/DataverseDonorOrder')]",
				"[concat(variables('factoryId'), '/datasets/DataverseBankDetail')]",
				"[concat(variables('factoryId'), '/linkedServices/sandbox')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/D365 Update DonorOrder')]",
			"type": "Microsoft.DataFactory/factories/dataflows",
			"apiVersion": "2018-06-01",
			"properties": {
				"description": "Contact, MG, Bankdetails",
				"type": "MappingDataFlow",
				"typeProperties": {
					"sources": [
						{
							"dataset": {
								"referenceName": "DataverseDonorOrder",
								"type": "DatasetReference"
							},
							"name": "donororder"
						},
						{
							"dataset": {
								"referenceName": "DataverseTransaction",
								"type": "DatasetReference"
							},
							"name": "transaction"
						}
					],
					"sinks": [
						{
							"linkedService": {
								"referenceName": "sandbox",
								"type": "LinkedServiceReference"
							},
							"name": "DonorOrderUpdate"
						}
					],
					"transformations": [
						{
							"name": "joindonorordertransaction"
						},
						{
							"name": "DerivedDonorOrderKey"
						},
						{
							"name": "AlterDonorOrder"
						},
						{
							"name": "DerivedTransactionKey"
						}
					],
					"scriptLines": [
						"source(output(",
						"          {@odata.etag} as string,",
						"          cog_bankdetails as string,",
						"          cog_contact as string,",
						"          ownerid as string,",
						"          transactioncurrencyid as string,",
						"          cog_competition as string,",
						"          cog_donationamount as string,",
						"          cog_donationtype as string,",
						"          cog_donororderfrom as string,",
						"          cog_donororderid as string,",
						"          cog_name as string,",
						"          cog_paymentmethod as string,",
						"          cog_paymenttype as string,",
						"          cog_totalticketamount as string,",
						"          statuscode as string",
						"     ),",
						"     allowSchemaDrift: true,",
						"     validateSchema: false,",
						"     query: '<fetch version=\"1.0\" mapping=\"logical\" no-lock=\"false\" distinct=\"true\"><entity name=\"cog_donororder\"><attribute name=\"cog_name\"/><attribute name=\"cog_donororderid\"/><attribute name=\"cog_contact\"/><attribute name=\"statuscode\"/><attribute name=\"cog_bankdetails\"/><attribute name=\"cog_competition\"/><attribute name=\"cog_paymentmethod\"/><attribute name=\"cog_paymenttype\"/><attribute name=\"cog_donororderfrom\"/><attribute name=\"cog_donationtype\"/><attribute name=\"ownerid\"/><order attribute=\"cog_donationtype\" descending=\"false\"/><attribute name=\"cog_totalticketamount\"/><attribute name=\"cog_donationamount\"/><attribute name=\"cog_donortransaction\"/><filter type=\"and\"><condition attribute=\"statuscode\" operator=\"eq\" value=\"181310001\"/><condition attribute=\"cog_competition\" operator=\"eq\" value=\"181310001\"/><condition attribute=\"cog_donororderfrom\" operator=\"eq\" value=\"181310000\"/><condition attribute=\"cog_bankdetails\" operator=\"not-null\"/><filter type=\"or\"><condition attribute=\"cog_paymentmethod\" operator=\"eq\" value=\"181310001\"/><condition attribute=\"cog_paymentmethod\" operator=\"eq\" value=\"181310003\"/></filter></filter></entity></fetch>',",
						"     manifestType: 'model') ~> donororder",
						"source(output(",
						"          {@odata.etag} as string,",
						"          cog_bankdetails as string,",
						"          cog_contact as string,",
						"          transactioncurrencyid as string,",
						"          cog_division as string,",
						"          cog_paymentmethod as string,",
						"          cog_transactionamount as string,",
						"          cog_transactionid as string,",
						"          cog_transactionno as string,",
						"          statuscode as string",
						"     ),",
						"     allowSchemaDrift: true,",
						"     validateSchema: false,",
						"     query: '<fetch version=\"1.0\" mapping=\"logical\" no-lock=\"false\" distinct=\"true\">\\n     <entity name=\"cog_transaction\">\\n          <attribute name=\"cog_transactionno\"/>\\n          <attribute name=\"cog_contact\"/>\\n          <attribute name=\"cog_transactionamount\"/>\\n          <attribute name=\"statuscode\"/>\\n          <attribute name=\"cog_paymentmethod\"/>\\n          <order attribute=\"cog_transactionno\" descending=\"true\"/>\\n          <attribute name=\"cog_transactionid\"/>\\n          <attribute name=\"cog_division\"/>\\n          <attribute name=\"cog_bankdetails\"/>\\n          <filter type=\"and\">\\n               <condition attribute=\"statuscode\" operator=\"eq\" value=\"1\"/>\\n               <condition attribute=\"cog_transactionfrom\" operator=\"eq\" value=\"181310000\"/>\\n               <condition attribute=\"cog_division\" operator=\"eq\" value=\"181310001\"/>\\n               <condition attribute=\"cog_bankdetails\" operator=\"not-null\"/>\\n          </filter>\\n     </entity>\\n</fetch>',",
						"     manifestType: 'model') ~> transaction",
						"DerivedDonorOrderKey, DerivedTransactionKey join(DonorOrderKey == TransactionKey,",
						"     joinType:'left',",
						"     matchType:'exact',",
						"     ignoreSpaces: false,",
						"     broadcast: 'auto')~> joindonorordertransaction",
						"donororder derive(DonorOrderKey = cog_bankdetails+toString(cog_competition)+cog_contact+toString(cog_paymentmethod)) ~> DerivedDonorOrderKey",
						"joindonorordertransaction alterRow(updateIf(true())) ~> AlterDonorOrder",
						"transaction derive(TransactionKey = cog_bankdetails+toString(cog_division)+cog_contact+toString(cog_paymentmethod)) ~> DerivedTransactionKey",
						"AlterDonorOrder sink(allowSchemaDrift: true,",
						"     validateSchema: false,",
						"     input(",
						"          cog_donororderid as string,",
						"          cog_paymentmadename as string,",
						"          cog_donationreasonname as string,",
						"          cog_resendname as string,",
						"          cog_bankdetails as string,",
						"          cog_upsell as boolean,",
						"          modifiedon as timestamp,",
						"          cog_donororderfromname as string,",
						"          overriddencreatedon as timestamp,",
						"          statuscodename as string,",
						"          cog_dateassigned as timestamp,",
						"          cog_delivery_tax_transname as string,",
						"          cog_balanceamount_base as decimal(38,2),",
						"          cog_totalticketamount_base as decimal(38,0),",
						"          transactioncurrencyidname as string,",
						"          cog_npodoc_tax_transname as string,",
						"          cog_campaign as string,",
						"          cog_searescuecampaignname as string,",
						"          cog_bankdetailsname as string,",
						"          cog_leadtype as integer,",
						"          cog_followupdate as timestamp,",
						"          cog_npodoc_receipt as boolean,",
						"          cog_sendticketsname as string,",
						"          cog_station as string,",
						"          owningbusinessunit as string,",
						"          cog_description as string,",
						"          cog_balanceamount as decimal(38,2),",
						"          cog_communicationlanguagename as string,",
						"          cog_campaignname as string,",
						"          cog_totalticketamount_state as integer,",
						"          cog_accessdb_lnglogno as string,",
						"          cog_sendwelcomepackdate as timestamp,",
						"          statuscode as integer,",
						"          cog_sendwelcomepackname as string,",
						"          cog_dateconverted as timestamp,",
						"          cog_contactyominame as string,",
						"          cog_paymentmethodname as string,",
						"          cog_paidamount as decimal(38,0),",
						"          cog_leadtypename as string,",
						"          cog_contact as string,",
						"          cog_npodoc_tax_annuallyname as string,",
						"          cog_source as integer,",
						"          cog_ticketamount as decimal(38,0),",
						"          statecodename as string,",
						"          cog_administrationaccount as string,",
						"          cog_paymenttype as integer,",
						"          exchangerate as decimal(38,10),",
						"          cog_npodoc_equityname as string,",
						"          cog_searescuecampaign as integer,",
						"          cog_npodoc_tax_trans as boolean,",
						"          cog_npoadministrationafrikaanstext as string,",
						"          createdon as timestamp,",
						"          cog_cancellreasonname as string,",
						"          cog_paymentmethod as integer,",
						"          cog_ticketamount_base as decimal(38,0),",
						"          cog_administrationaccountyominame as string,",
						"          cog_nameonvessel as string,",
						"          cog_npodoc_sendmethod as integer,",
						"          cog_donotcreatenpodocumentname as string,",
						"          cog_transaction as string,",
						"          cog_resend as boolean,",
						"          cog_communicationlanguage as integer,",
						"          cog_competition as integer,",
						"          cog_donationreason as integer,",
						"          owneridyominame as string,",
						"          cog_sendpaymentdetails as boolean,",
						"          modifiedby as string,",
						"          timezoneruleversionnumber as integer,",
						"          cof_datecancelled as timestamp,",
						"          owningbusinessunitname as string,",
						"          modifiedonbehalfby as string,",
						"          cog_administrationaccountname as string,",
						"          cog_sendpaymentdetailsdate as timestamp,",
						"          cog_npodoc_receiptname as string,",
						"          cog_administrationcontact as string,",
						"          cog_paymenttypename as string,",
						"          cog_transactionname as string,",
						"          cog_datasource as integer,",
						"          cog_stationname as string,",
						"          createdonbehalfbyname as string,",
						"          owninguser as string,",
						"          cog_delivery_receipt as boolean,",
						"          owneridtype as string,",
						"          cog_cancellreason as integer,",
						"          cog_delivery_tax_trans as boolean,",
						"          owneridname as string,",
						"          modifiedonbehalfbyname as string,",
						"          cog_contactname as string,",
						"          cog_delivery_equityname as string,",
						"          cog_accessdb_strcompanyname as string,",
						"          cog_npodoc_equity as boolean,",
						"          owningteam as string,",
						"          cog_npodocumentenglishtext as string,",
						"          cog_totalticketamount as decimal(38,0),",
						"          cog_bankreference as string,",
						"          cog_donorleadname as string,",
						"          cog_name as string,",
						"          cog_sendwelcomepack as boolean,",
						"          cog_npoadministrationenglishtext as string,",
						"          createdonbehalfby as string,",
						"          cog_donationamount_base as decimal(38,0),",
						"          cog_sendpaymentdetailsname as string,",
						"          cog_datebanked as timestamp,",
						"          transactioncurrencyid as string,",
						"          cog_paidamount_base as decimal(38,0),",
						"          cog_npodoc_tax_annually as boolean,",
						"          cog_completedonororder as boolean,",
						"          cog_sourcename as string,",
						"          createdonbehalfbyyominame as string,",
						"          cog_noofdonortickets_state as integer,",
						"          cog_noofdonortickets as integer,",
						"          cog_accountname as string,",
						"          cog_administeredname as string,",
						"          cog_donationamount as decimal(38,0),",
						"          ownerid as string,",
						"          cog_administrationcontactyominame as string,",
						"          cog_assignticketnumbersname as string,",
						"          cog_datepaid as timestamp,",
						"          cog_delivery_receiptname as string,",
						"          cog_numberoftickets as integer,",
						"          cog_noofdonortickets_date as timestamp,",
						"          cog_donororderfrom as integer,",
						"          cog_createticketrowsname as string,",
						"          cog_donationtype as integer,",
						"          createdbyname as string,",
						"          cog_accountyominame as string,",
						"          modifiedbyyominame as string,",
						"          cog_donationtypename as string,",
						"          cog_administrationcontactname as string,",
						"          modifiedonbehalfbyyominame as string,",
						"          createdby as string,",
						"          cog_account as string,",
						"          utcconversiontimezonecode as integer,",
						"          cog_sendtickets as boolean,",
						"          cog_upsellname as string,",
						"          cog_assignticketnumbers as boolean,",
						"          importsequencenumber as integer,",
						"          statecode as integer,",
						"          cog_paymentmade as boolean,",
						"          versionnumber as long,",
						"          cog_delivery_equity as boolean,",
						"          cog_npodocumentafrikaanstext as string,",
						"          cog_completedonorordername as string,",
						"          cog_npodoc_sendmethodname as string,",
						"          cog_totalticketamount_date as timestamp,",
						"          modifiedbyname as string,",
						"          createdbyyominame as string,",
						"          cog_administered as boolean,",
						"          cog_competitionname as string,",
						"          cog_donotcreatenpodocument as boolean,",
						"          cog_donorlead as string,",
						"          cog_shutoffdate as timestamp,",
						"          cog_createticketrows as boolean,",
						"          cog_datasourcename as string,",
						"          {cog_administrationaccount@cog_no@cog_erpvendornumber} as string,",
						"          {cog_transaction@cog_trans_do_contact@cog_bankdetails} as string,",
						"          {cog_transaction@cog_trans_do_contact@cog_contact} as string,",
						"          {cog_transaction@cog_trans_do_contact@cog_division} as integer,",
						"          {cog_transaction@cog_trans_do_contact@cog_paymentmethod} as integer,",
						"          {modifiedby@aadobjectid@azureactivedirectoryobjectid} as string,",
						"          {modifiedonbehalfby@aadobjectid@azureactivedirectoryobjectid} as string,",
						"          {owninguser@aadobjectid@azureactivedirectoryobjectid} as string,",
						"          {owningteam@aadobjectid_membershiptype@azureactivedirectoryobjectid} as string,",
						"          {owningteam@aadobjectid_membershiptype@membershiptype} as integer,",
						"          {createdonbehalfby@aadobjectid@azureactivedirectoryobjectid} as string,",
						"          {createdby@aadobjectid@azureactivedirectoryobjectid} as string,",
						"          {cog_account@cog_no@cog_erpvendornumber} as string",
						"     ),",
						"     store: 'dynamics',",
						"     format: 'dynamicsformat',",
						"     entity: 'cog_donororder',",
						"     timeout: 30,",
						"     deletable: false,",
						"     insertable: false,",
						"     updateable: true,",
						"     upsertable: false,",
						"     mapColumn(",
						"          cog_donororderid,",
						"          cog_transaction = cog_transactionid",
						"     )) ~> DonorOrderUpdate"
					]
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/DataverseDonorOrder')]",
				"[concat(variables('factoryId'), '/datasets/DataverseTransaction')]",
				"[concat(variables('factoryId'), '/linkedServices/sandbox')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/TransactionfromLakeFile')]",
			"type": "Microsoft.DataFactory/factories/dataflows",
			"apiVersion": "2018-06-01",
			"properties": {
				"type": "MappingDataFlow",
				"typeProperties": {
					"sources": [
						{
							"linkedService": {
								"referenceName": "sandboxdatalake",
								"type": "LinkedServiceReference"
							},
							"name": "donororder"
						},
						{
							"linkedService": {
								"referenceName": "sandboxdatalake",
								"type": "LinkedServiceReference"
							},
							"name": "bankdetails"
						}
					],
					"sinks": [
						{
							"linkedService": {
								"referenceName": "nsridynamicssandox",
								"type": "LinkedServiceReference"
							},
							"schemaLinkedService": {
								"referenceName": "sandboxdatalake",
								"type": "LinkedServiceReference"
							},
							"name": "sink1"
						}
					],
					"transformations": [
						{
							"name": "joindonororderbankdetails"
						},
						{
							"name": "accountcontact"
						},
						{
							"name": "CleanupBankDetailColumns"
						},
						{
							"name": "SelectDonorOrder"
						},
						{
							"name": "derivedColumnTrxDateAmount"
						},
						{
							"name": "contactkey"
						},
						{
							"name": "UniqueTransaction"
						},
						{
							"name": "filterDonorOrder"
						}
					],
					"scriptLines": [
						"source(output(",
						"          cog_donororderid as string,",
						"          statecode as long,",
						"          statecodename as string,",
						"          statuscode as long,",
						"          statuscodename as string,",
						"          cog_donationtype as long,",
						"          cog_donationtypename as string,",
						"          cog_donororderfrom as long,",
						"          cog_donororderfromname as string,",
						"          cog_competition as long,",
						"          cog_competitionname as string,",
						"          cog_ticketamount as double,",
						"          cog_donationamount as double,",
						"          cog_account as string,",
						"          cog_accountname as string,",
						"          cog_contact as string,",
						"          cog_contactname as string,",
						"          cog_bankdetails as string,",
						"          cog_bankdetailsname as string,",
						"          cog_paymenttype as long,",
						"          cog_paymenttypename as string,",
						"          cog_paymentmethod as long,",
						"          cog_paymentmethodname as string",
						"     ),",
						"     allowSchemaDrift: false,",
						"     validateSchema: false,",
						"     ignoreNoFilesFound: false,",
						"     entity: 'cog_donororder',",
						"     format: 'cdm',",
						"     manifestType: 'model',",
						"     folderPath: 'environments/nsridev/HOF Donor Orders',",
						"     fileSystem: 'power-platform-dataflows') ~> donororder",
						"source(output(",
						"          cog_bankdetailsid as string,",
						"          statecode as long,",
						"          statecodename as string,",
						"          cog_accountnumber as string,",
						"          cog_accountid as string,",
						"          cog_accounttype as long,",
						"          cog_accounttypename as string,",
						"          cog_bank as string,",
						"          cog_branchcode as string,",
						"          cog_contactid as string,",
						"          cog_cvc as string,",
						"          cog_expireydate as timestamp,",
						"          cog_accountidname as string,",
						"          cog_bankname as string,",
						"          cog_contactidname as string,",
						"          cog_creditcardtype as long,",
						"          cog_creditcardtypename as string,",
						"          cog_accountholder as string",
						"     ),",
						"     allowSchemaDrift: false,",
						"     validateSchema: false,",
						"     ignoreNoFilesFound: false,",
						"     entity: 'cog_bankdetails',",
						"     format: 'cdm',",
						"     manifestType: 'model',",
						"     folderPath: 'environments/nsridev/HOF Donor Orders',",
						"     fileSystem: 'power-platform-dataflows') ~> bankdetails",
						"filterDonorOrder, CleanupBankDetailColumns join(cog_bankdetails == cog_bankdetailsid,",
						"     joinType:'left',",
						"     matchType:'exact',",
						"     ignoreSpaces: false,",
						"     broadcast: 'auto')~> joindonororderbankdetails",
						"derivedColumnTrxDateAmount split((statuscode==181310001||statuscode==2)&&cog_donororderfrom==181310000&&(cog_paymentmethod==181310003||cog_paymentmethod==181310001)&&cog_donationtype==181310001,",
						"     (statuscode==181310001||statuscode==2)&&cog_donororderfrom==181310001&&(cog_paymentmethod==181310003||cog_paymentmethod==181310001)&&cog_donationtype==181310001,",
						"     disjoint: false) ~> accountcontact@(contactconvertedpaidmonthly, accountconvertedpaidmonthly)",
						"bankdetails select(mapColumn(",
						"          cog_bankdetailsid,",
						"          cog_accountnumber,",
						"          cog_accounttype,",
						"          cog_bank,",
						"          cog_branchcode,",
						"          cog_cvc,",
						"          cog_expireydate,",
						"          cog_creditcardtype,",
						"          cog_accountholder",
						"     ),",
						"     skipDuplicateMapInputs: false,",
						"     skipDuplicateMapOutputs: false) ~> CleanupBankDetailColumns",
						"donororder select(mapColumn(",
						"          cog_donororderid,",
						"          statecode,",
						"          statuscode,",
						"          cog_donationtype,",
						"          cog_donororderfrom,",
						"          cog_competition,",
						"          cog_ticketamount,",
						"          cog_donationamount,",
						"          cog_account,",
						"          cog_contact,",
						"          cog_contactname,",
						"          cog_bankdetails,",
						"          cog_paymenttype,",
						"          cog_paymentmethod",
						"     ),",
						"     skipDuplicateMapInputs: false,",
						"     skipDuplicateMapOutputs: false) ~> SelectDonorOrder",
						"joindonororderbankdetails derive(cog_transactiondate = currentUTC(),",
						"          cog_transactionamount = iif(isNull(cog_ticketamount),cog_donationamount,cog_ticketamount)) ~> derivedColumnTrxDateAmount",
						"accountcontact@contactconvertedpaidmonthly derive(contactkey = cog_contact+toString(cog_paymentmethod)+cog_bankdetailsid) ~> contactkey",
						"contactkey aggregate(groupBy(cog_contact,",
						"          cog_paymentmethod,",
						"          cog_bankdetails,",
						"          contactkey,",
						"          cog_donororderfrom),",
						"     cog_transactionamount = sum(cog_transactionamount)) ~> UniqueTransaction",
						"SelectDonorOrder filter(statuscode==181310001&&\r",
						"cog_competition==181310001&&\r",
						"cog_donororderfrom==181310000&&\r",
						"statecode==0&&\r",
						"(cog_paymentmethod==181310001||cog_paymentmethod==181310003)) ~> filterDonorOrder",
						"UniqueTransaction sink(allowSchemaDrift: true,",
						"     validateSchema: false,",
						"     store: 'dynamics',",
						"     format: 'dynamicsformat',",
						"     entity: 'cog_donororder',",
						"     timeout: 30,",
						"     deletable: false,",
						"     insertable: true,",
						"     updateable: false,",
						"     upsertable: false,",
						"     mapColumn(",
						"          cog_contact,",
						"          cog_paymentmethod,",
						"          cog_bankdetails,",
						"          contactkey,",
						"          cog_transactionamount,",
						"          cog_donororderfrom",
						"     )) ~> sink1"
					]
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/sandboxdatalake')]",
				"[concat(variables('factoryId'), '/linkedServices/nsridynamicssandox')]"
			]
		}
	]
}