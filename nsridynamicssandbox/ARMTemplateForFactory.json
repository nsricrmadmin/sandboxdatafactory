{
	"$schema": "http://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json#",
	"contentVersion": "1.0.0.0",
	"parameters": {
		"factoryName": {
			"type": "string",
			"metadata": "Data Factory name",
			"defaultValue": "nsridynamicssandbox"
		},
		"Error Output_accountKey": {
			"type": "secureString",
			"metadata": "Secure string for 'accountKey' of 'Error Output'"
		},
		"sandbox_password": {
			"type": "secureString",
			"metadata": "Secure string for 'password' of 'sandbox'"
		},
		"sandboxdatalake_accountKey": {
			"type": "secureString",
			"metadata": "Secure string for 'accountKey' of 'sandboxdatalake'"
		},
		"Error Output_properties_typeProperties_url": {
			"type": "string",
			"defaultValue": "https://nsridynamicssandbox.dfs.core.windows.net/"
		},
		"sandbox_properties_typeProperties_username": {
			"type": "string",
			"defaultValue": "crmadmin@searescue.org.za"
		},
		"sandboxdatalake_properties_typeProperties_url": {
			"type": "string",
			"defaultValue": "https://nsridynamicssandbox.dfs.core.windows.net/"
		}
	},
	"variables": {
		"factoryId": "[concat('Microsoft.DataFactory/factories/', parameters('factoryName'))]"
	},
	"resources": [
		{
			"name": "[concat(parameters('factoryName'), '/Monthly Giving Aggregation')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "MG Donor Order Update",
						"type": "Copy",
						"dependsOn": [
							{
								"activity": "MG Create Files",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "DelimitedTextSource",
								"storeSettings": {
									"type": "AzureBlobFSReadSettings",
									"recursive": true,
									"wildcardFolderPath": "donor_order_aggregates",
									"wildcardFileName": "*.csv",
									"enablePartitionDiscovery": false
								},
								"formatSettings": {
									"type": "DelimitedTextReadSettings"
								}
							},
							"sink": {
								"type": "CommonDataServiceForAppsSink",
								"writeBatchSize": 10,
								"writeBehavior": "upsert"
							},
							"enableStaging": false,
							"translator": {
								"type": "TabularTranslator",
								"mappings": [
									{
										"source": {
											"name": "cog_donororderid",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "cog_donororderid",
											"type": "Guid"
										}
									},
									{
										"source": {
											"name": "cog_transactionid",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "cog_donortransaction",
											"type": "Guid"
										}
									},
									{
										"source": {
											"name": "statecode",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "statecode",
											"type": "Int32"
										}
									},
									{
										"source": {
											"name": "new_statuscode",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "statuscode",
											"type": "Int32"
										}
									}
								],
								"typeConversion": true,
								"typeConversionSettings": {
									"allowDataTruncation": true,
									"treatBooleanAsNumber": false
								}
							}
						},
						"inputs": [
							{
								"referenceName": "file_mg_aggregation",
								"type": "DatasetReference",
								"parameters": {}
							}
						],
						"outputs": [
							{
								"referenceName": "SandboxDonorOrder",
								"type": "DatasetReference",
								"parameters": {}
							}
						]
					},
					{
						"name": "MG Aggregate Donor Orders",
						"type": "ExecuteDataFlow",
						"dependsOn": [],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"dataflow": {
								"referenceName": "MG Aggregate DOs",
								"type": "DataFlowReference",
								"parameters": {},
								"datasetParameters": {
									"donororder": {},
									"bankdetails": {},
									"accounttransactions": {},
									"ContactTransactions": {},
									"DonorOrderTrxDate": {}
								}
							},
							"staging": {},
							"compute": {
								"coreCount": 8,
								"computeType": "General"
							},
							"traceLevel": "Fine"
						}
					},
					{
						"name": "MG Create Files",
						"type": "ExecuteDataFlow",
						"dependsOn": [
							{
								"activity": "MG Aggregate Donor Orders",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"dataflow": {
								"referenceName": "MG Aggregation Create DO Trans File",
								"type": "DataFlowReference",
								"parameters": {},
								"datasetParameters": {
									"donororder": {},
									"transaction": {},
									"mgaggregationfile": {}
								}
							},
							"staging": {},
							"compute": {
								"coreCount": 8,
								"computeType": "General"
							},
							"traceLevel": "Fine"
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {},
					"cancelAfter": {}
				},
				"annotations": []
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/file_mg_aggregation')]",
				"[concat(variables('factoryId'), '/datasets/SandboxDonorOrder')]",
				"[concat(variables('factoryId'), '/dataflows/MG Aggregate DOs')]",
				"[concat(variables('factoryId'), '/dataflows/MG Aggregation Create DO Trans File')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/Monthly Giving CC Upload File')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "Monthly Giving CC Upload Create File",
						"type": "ExecuteDataFlow",
						"dependsOn": [],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"dataflow": {
								"referenceName": "MG CC Create File",
								"type": "DataFlowReference",
								"parameters": {
									"submissiondate": {
										"value": "'@{pipeline().parameters.submissiondate}'",
										"type": "Expression"
									},
									"division": {
										"value": "'@{pipeline().parameters.division}'",
										"type": "Expression"
									},
									"paymentmethod": {
										"value": "'@{pipeline().parameters.paymentmethod}'",
										"type": "Expression"
									}
								},
								"datasetParameters": {
									"transaction": {},
									"CreateFileTemp": {
										"submissiondate": "'SubmissionDate'",
										"division": "'Division'",
										"paymentmethod": "'PaymentMethod'"
									},
									"CreateFileHistory": {
										"submissiondate": "'SubmissionDate'",
										"division": "'Division'",
										"paymentmethod": "'PaymentMethod'"
									}
								},
								"linkedServiceParameters": {
									"CreateFileTemp": {
										"linkedService": {
											"submissiondate": "'SubmissionDate'",
											"division": "'Division'",
											"paymentmethod": "'PaymentMethod'"
										},
										"rejectedDataLinkedService": {
											"submissiondate": "'SubmissionDate'",
											"division": "'Division'",
											"paymentmethod": "'PaymentMethod'"
										}
									},
									"CreateFileHistory": {
										"linkedService": {
											"submissiondate": "'SubmissionDate'",
											"division": "'Division'",
											"paymentmethod": "'PaymentMethod'"
										},
										"rejectedDataLinkedService": {
											"submissiondate": "'SubmissionDate'",
											"division": "'Division'",
											"paymentmethod": "'PaymentMethod'"
										}
									}
								}
							},
							"staging": {},
							"compute": {
								"coreCount": 8,
								"computeType": "General"
							},
							"traceLevel": "Fine"
						}
					},
					{
						"name": "MG DO Split Into Batches",
						"type": "Copy",
						"dependsOn": [
							{
								"activity": "Monthly Giving CC Upload Create File",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "DelimitedTextSource",
								"storeSettings": {
									"type": "AzureBlobFSReadSettings",
									"recursive": true,
									"wildcardFolderPath": "bank_file_uploads/temp_files/credit_card",
									"wildcardFileName": {
										"value": "@concat(pipeline().parameters.division,'-',pipeline().parameters.paymentmethod,'-',pipeline().parameters.submissiondate,'-00001.csv')",
										"type": "Expression"
									},
									"enablePartitionDiscovery": false
								},
								"formatSettings": {
									"type": "DelimitedTextReadSettings"
								}
							},
							"sink": {
								"type": "DelimitedTextSink",
								"storeSettings": {
									"type": "AzureBlobFSWriteSettings"
								},
								"formatSettings": {
									"type": "DelimitedTextWriteSettings",
									"maxRowsPerFile": 3,
									"fileNamePrefix": "",
									"quoteAllText": true,
									"fileExtension": ".csv"
								}
							},
							"enableStaging": false,
							"translator": {
								"type": "TabularTranslator",
								"mappings": [
									{
										"source": {
											"name": "Type",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "Type",
											"type": "String",
											"physicalType": "String"
										}
									},
									{
										"source": {
											"name": " Transaction Reference",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": " Transaction Reference",
											"type": "String",
											"physicalType": "String"
										}
									},
									{
										"source": {
											"name": "Card Holder Name",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "Card Holder Name",
											"type": "String",
											"physicalType": "String"
										}
									},
									{
										"source": {
											"name": " Card Number",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": " Card Number",
											"type": "String",
											"physicalType": "String"
										}
									},
									{
										"source": {
											"name": " Expiry Date",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": " Expiry Date",
											"type": "String",
											"physicalType": "String"
										}
									},
									{
										"source": {
											"name": " Budget Period",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": " Budget Period",
											"type": "String",
											"physicalType": "String"
										}
									},
									{
										"source": {
											"name": " Amount",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": " Amount",
											"type": "String",
											"physicalType": "String"
										}
									}
								],
								"typeConversion": true,
								"typeConversionSettings": {
									"allowDataTruncation": true,
									"treatBooleanAsNumber": false
								}
							}
						},
						"inputs": [
							{
								"referenceName": "MG_credit_card_temp",
								"type": "DatasetReference",
								"parameters": {
									"submissiondate": {
										"value": "@pipeline().parameters.submissiondate",
										"type": "Expression"
									},
									"division": {
										"value": "@pipeline().parameters.division",
										"type": "Expression"
									},
									"paymentmethod": {
										"value": "@pipeline().parameters.paymentmethod",
										"type": "Expression"
									}
								}
							}
						],
						"outputs": [
							{
								"referenceName": "MG_credit_card_batch",
								"type": "DatasetReference",
								"parameters": {}
							}
						]
					}
				],
				"policy": {
					"elapsedTimeMetric": {},
					"cancelAfter": {}
				},
				"parameters": {
					"submissiondate": {
						"type": "string",
						"defaultValue": "YYYYmmdd"
					},
					"division": {
						"type": "string",
						"defaultValue": "MG"
					},
					"paymentmethod": {
						"type": "string",
						"defaultValue": "CC"
					}
				},
				"annotations": []
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/dataflows/MG CC Create File')]",
				"[concat(variables('factoryId'), '/datasets/MG_credit_card_temp')]",
				"[concat(variables('factoryId'), '/datasets/MG_credit_card_batch')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/Monthly Giving DO Upload File')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "Monthly Giving DO Upload Create File",
						"type": "ExecuteDataFlow",
						"dependsOn": [],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"dataflow": {
								"referenceName": "MG DO Create File",
								"type": "DataFlowReference",
								"parameters": {
									"submissiondate": {
										"value": "'@{pipeline().parameters.submissiondate}'",
										"type": "Expression"
									},
									"division": {
										"value": "'@{pipeline().parameters.division}'",
										"type": "Expression"
									},
									"paymentmethod": {
										"value": "'@{pipeline().parameters.paymentmethod}'",
										"type": "Expression"
									}
								},
								"datasetParameters": {
									"transaction": {},
									"CreateFileTemp": {
										"submissiondate": "'SubmissionDate'",
										"division": "'Division'",
										"paymentmethod": "'PaymentMethod'"
									},
									"CreateFileHistory": {
										"submissiondate": "'SubmissionDate'",
										"division": "'Division'",
										"paymentmethod": "'PaymentMethod'"
									}
								},
								"linkedServiceParameters": {
									"CreateFileTemp": {
										"linkedService": {
											"submissiondate": "'SubmissionDate'",
											"division": "'Division'",
											"paymentmethod": "'PaymentMethod'"
										},
										"rejectedDataLinkedService": {
											"submissiondate": "'SubmissionDate'",
											"division": "'Division'",
											"paymentmethod": "'PaymentMethod'"
										}
									},
									"CreateFileHistory": {
										"linkedService": {
											"submissiondate": "'SubmissionDate'",
											"division": "'Division'",
											"paymentmethod": "'PaymentMethod'"
										},
										"rejectedDataLinkedService": {
											"submissiondate": "'SubmissionDate'",
											"division": "'Division'",
											"paymentmethod": "'PaymentMethod'"
										}
									}
								}
							},
							"staging": {},
							"compute": {
								"coreCount": 8,
								"computeType": "General"
							},
							"traceLevel": "Fine"
						}
					},
					{
						"name": "MG DO Split Into Batches",
						"type": "Copy",
						"dependsOn": [
							{
								"activity": "Monthly Giving DO Upload Create File",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "DelimitedTextSource",
								"storeSettings": {
									"type": "AzureBlobFSReadSettings",
									"recursive": true,
									"wildcardFolderPath": "bank_file_uploads/temp_files/debit_order",
									"wildcardFileName": {
										"value": "@concat(pipeline().parameters.division,'-',pipeline().parameters.paymentmethod,'-',pipeline().parameters.submissiondate,'-00001.csv')",
										"type": "Expression"
									},
									"enablePartitionDiscovery": false
								},
								"formatSettings": {
									"type": "DelimitedTextReadSettings"
								}
							},
							"sink": {
								"type": "DelimitedTextSink",
								"storeSettings": {
									"type": "AzureBlobFSWriteSettings"
								},
								"formatSettings": {
									"type": "DelimitedTextWriteSettings",
									"maxRowsPerFile": 3,
									"fileNamePrefix": "",
									"quoteAllText": true,
									"fileExtension": ".asc"
								}
							},
							"enableStaging": false,
							"translator": {
								"type": "TabularTranslator",
								"mappings": [
									{
										"source": {
											"name": "Field1",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "Field1",
											"type": "String",
											"physicalType": "String"
										}
									},
									{
										"source": {
											"name": "Customer Number",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "Customer Number",
											"type": "String",
											"physicalType": "String"
										}
									},
									{
										"source": {
											"name": "Type of Service",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "Type of Service",
											"type": "String",
											"physicalType": "String"
										}
									},
									{
										"source": {
											"name": "Name of member",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "Name of member",
											"type": "String",
											"physicalType": "String"
										}
									},
									{
										"source": {
											"name": "Account Name",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "Account Name",
											"type": "String",
											"physicalType": "String"
										}
									},
									{
										"source": {
											"name": "Account Number",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "Account Number",
											"type": "String",
											"physicalType": "String"
										}
									},
									{
										"source": {
											"name": "Filler2",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "Filler2",
											"type": "String",
											"physicalType": "String"
										}
									},
									{
										"source": {
											"name": "Branch Code",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "Branch Code",
											"type": "String",
											"physicalType": "String"
										}
									},
									{
										"source": {
											"name": "Type of Account",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "Type of Account",
											"type": "String",
											"physicalType": "String"
										}
									},
									{
										"source": {
											"name": "Description",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "Description",
											"type": "String",
											"physicalType": "String"
										}
									},
									{
										"source": {
											"name": "Nominated Account",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "Nominated Account",
											"type": "String",
											"physicalType": "String"
										}
									},
									{
										"source": {
											"name": "Filler3",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "Filler3",
											"type": "String",
											"physicalType": "String"
										}
									},
									{
										"source": {
											"name": "Amount",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "Amount",
											"type": "String",
											"physicalType": "String"
										}
									},
									{
										"source": {
											"name": "Amount Arrear",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "Amount Arrear",
											"type": "String",
											"physicalType": "String"
										}
									},
									{
										"source": {
											"name": "Max Amount",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "Max Amount",
											"type": "String",
											"physicalType": "String"
										}
									},
									{
										"source": {
											"name": "Capital Amount",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "Capital Amount",
											"type": "String",
											"physicalType": "String"
										}
									},
									{
										"source": {
											"name": "Special Amount",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "Special Amount",
											"type": "String",
											"physicalType": "String"
										}
									},
									{
										"source": {
											"name": "Action Date",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "Action Date",
											"type": "String",
											"physicalType": "String"
										}
									},
									{
										"source": {
											"name": "Cancellation Date",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "Cancellation Date",
											"type": "String",
											"physicalType": "String"
										}
									},
									{
										"source": {
											"name": "Frequency",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "Frequency",
											"type": "String",
											"physicalType": "String"
										}
									},
									{
										"source": {
											"name": "Filler4",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "Filler4",
											"type": "String",
											"physicalType": "String"
										}
									},
									{
										"source": {
											"name": "Record Type Code",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "Record Type Code",
											"type": "String",
											"physicalType": "String"
										}
									},
									{
										"source": {
											"name": "Entry Class Code",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "Entry Class Code",
											"type": "String",
											"physicalType": "String"
										}
									}
								],
								"typeConversion": true,
								"typeConversionSettings": {
									"allowDataTruncation": true,
									"treatBooleanAsNumber": false
								}
							}
						},
						"inputs": [
							{
								"referenceName": "MG_debit_order_temp",
								"type": "DatasetReference",
								"parameters": {
									"submissiondate": {
										"value": "@pipeline().parameters.submissiondate",
										"type": "Expression"
									},
									"division": {
										"value": "@pipeline().parameters.division",
										"type": "Expression"
									},
									"paymentmethod": {
										"value": "@pipeline().parameters.paymentmethod",
										"type": "Expression"
									}
								}
							}
						],
						"outputs": [
							{
								"referenceName": "MG_debit_order_batch",
								"type": "DatasetReference",
								"parameters": {}
							}
						]
					}
				],
				"policy": {
					"elapsedTimeMetric": {},
					"cancelAfter": {}
				},
				"parameters": {
					"submissiondate": {
						"type": "string",
						"defaultValue": "YYYYmmdd"
					},
					"division": {
						"type": "string",
						"defaultValue": "MG"
					},
					"paymentmethod": {
						"type": "string",
						"defaultValue": "DO"
					}
				},
				"annotations": []
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/dataflows/MG DO Create File')]",
				"[concat(variables('factoryId'), '/datasets/MG_debit_order_temp')]",
				"[concat(variables('factoryId'), '/datasets/MG_debit_order_batch')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/TEST MG Create File')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "MG Create File",
						"type": "ExecuteDataFlow",
						"dependsOn": [],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"dataflow": {
								"referenceName": "MG Aggregation Create DO Trans File",
								"type": "DataFlowReference",
								"parameters": {},
								"datasetParameters": {
									"donororder": {},
									"transaction": {},
									"mgaggregationfile": {}
								}
							},
							"staging": {},
							"compute": {
								"coreCount": 8,
								"computeType": "General"
							},
							"traceLevel": "Fine"
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {},
					"cancelAfter": {}
				},
				"annotations": []
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/dataflows/MG Aggregation Create DO Trans File')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/TEST MG Create Transactions')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "Monthly Giving Aggregation",
						"type": "ExecuteDataFlow",
						"dependsOn": [],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"dataflow": {
								"referenceName": "MG Aggregate DOs",
								"type": "DataFlowReference",
								"parameters": {},
								"datasetParameters": {
									"donororder": {},
									"bankdetails": {},
									"accounttransactions": {},
									"ContactTransactions": {},
									"DonorOrderTrxDate": {}
								}
							},
							"staging": {},
							"compute": {
								"coreCount": 8,
								"computeType": "General"
							},
							"traceLevel": "Fine"
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {},
					"cancelAfter": {}
				},
				"annotations": []
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/dataflows/MG Aggregate DOs')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/TEST MG Update Donor Orders')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "MG DO Update",
						"type": "Copy",
						"dependsOn": [],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "DelimitedTextSource",
								"storeSettings": {
									"type": "AzureBlobFSReadSettings",
									"recursive": false,
									"wildcardFolderPath": "donor_order_aggregates",
									"wildcardFileName": "*.csv",
									"enablePartitionDiscovery": false
								},
								"formatSettings": {
									"type": "DelimitedTextReadSettings"
								}
							},
							"sink": {
								"type": "CommonDataServiceForAppsSink",
								"writeBatchSize": 10,
								"writeBehavior": "upsert"
							},
							"enableStaging": false,
							"translator": {
								"type": "TabularTranslator",
								"mappings": [
									{
										"source": {
											"name": "cog_donororderid",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "cog_donororderid",
											"type": "Guid"
										}
									},
									{
										"source": {
											"name": "cog_transactionid",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "cog_donortransaction",
											"type": "Guid"
										}
									},
									{
										"source": {
											"name": "statecode",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "statecode",
											"type": "Int32"
										}
									},
									{
										"source": {
											"name": "new_statuscode",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "statuscode",
											"type": "Int32"
										}
									}
								],
								"typeConversion": true,
								"typeConversionSettings": {
									"allowDataTruncation": true,
									"treatBooleanAsNumber": false
								}
							}
						},
						"inputs": [
							{
								"referenceName": "file_mg_aggregation",
								"type": "DatasetReference",
								"parameters": {}
							}
						],
						"outputs": [
							{
								"referenceName": "SandboxDonorOrder",
								"type": "DatasetReference",
								"parameters": {}
							}
						]
					}
				],
				"policy": {
					"elapsedTimeMetric": {},
					"cancelAfter": {}
				},
				"annotations": []
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/file_mg_aggregation')]",
				"[concat(variables('factoryId'), '/datasets/SandboxDonorOrder')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/MG_credit_card_batch')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "sandboxdatalake",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "DelimitedText",
				"typeProperties": {
					"location": {
						"type": "AzureBlobFSLocation",
						"folderPath": "bank_file_uploads/credit_card_batch",
						"fileSystem": "monthly-giving"
					},
					"columnDelimiter": ",",
					"escapeChar": "\\",
					"firstRowAsHeader": true,
					"quoteChar": "\""
				},
				"schema": [
					{
						"name": "Type",
						"type": "String"
					},
					{
						"name": " Transaction Reference",
						"type": "String"
					},
					{
						"name": "Card Holder Name",
						"type": "String"
					},
					{
						"name": " Card Number",
						"type": "String"
					},
					{
						"name": " Expiry Date",
						"type": "String"
					},
					{
						"name": " Budget Period",
						"type": "String"
					},
					{
						"name": " Amount",
						"type": "String"
					}
				]
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/sandboxdatalake')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/MG_credit_card_history')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "sandboxdatalake",
					"type": "LinkedServiceReference"
				},
				"parameters": {
					"submissiondate": {
						"type": "string",
						"defaultValue": "'SubmissionDate'"
					},
					"division": {
						"type": "string",
						"defaultValue": "'Division'"
					},
					"paymentmethod": {
						"type": "string",
						"defaultValue": "'PaymentMethod'"
					}
				},
				"annotations": [],
				"type": "DelimitedText",
				"typeProperties": {
					"location": {
						"type": "AzureBlobFSLocation",
						"folderPath": "bank_file_uploads/credit_card_history",
						"fileSystem": "monthly-giving"
					},
					"columnDelimiter": ",",
					"escapeChar": "\\",
					"firstRowAsHeader": true,
					"quoteChar": "\""
				},
				"schema": [
					{
						"name": "Field1",
						"type": "String"
					},
					{
						"name": "Customer Number",
						"type": "String"
					},
					{
						"name": "Type of Service",
						"type": "String"
					},
					{
						"name": "Name of member",
						"type": "String"
					},
					{
						"name": "Account Name",
						"type": "String"
					},
					{
						"name": "Account Number",
						"type": "String"
					},
					{
						"name": "Filler2",
						"type": "String"
					},
					{
						"name": "Branch Code",
						"type": "String"
					},
					{
						"name": "Type of Account",
						"type": "String"
					},
					{
						"name": "Description",
						"type": "String"
					},
					{
						"name": "Nominated Account",
						"type": "String"
					},
					{
						"name": "Filler3",
						"type": "String"
					},
					{
						"name": "Amount",
						"type": "String"
					},
					{
						"name": "Amount Arrear",
						"type": "String"
					},
					{
						"name": "Max Amount",
						"type": "String"
					},
					{
						"name": "Capital Amount",
						"type": "String"
					},
					{
						"name": "Special Amount",
						"type": "String"
					},
					{
						"name": "Action Date",
						"type": "String"
					},
					{
						"name": "Cancellation Date",
						"type": "String"
					},
					{
						"name": "Frequency",
						"type": "String"
					},
					{
						"name": "Filler4",
						"type": "String"
					},
					{
						"name": "Record Type Code",
						"type": "String"
					},
					{
						"name": "Entry Class Code",
						"type": "String"
					}
				]
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/sandboxdatalake')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/MG_credit_card_temp')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "sandboxdatalake",
					"type": "LinkedServiceReference"
				},
				"parameters": {
					"submissiondate": {
						"type": "string",
						"defaultValue": "'SubmissionDate'"
					},
					"division": {
						"type": "string",
						"defaultValue": "'Division'"
					},
					"paymentmethod": {
						"type": "string",
						"defaultValue": "'PaymentMethod'"
					}
				},
				"annotations": [],
				"type": "DelimitedText",
				"typeProperties": {
					"location": {
						"type": "AzureBlobFSLocation",
						"folderPath": "bank_file_uploads/temp_files/credit_card",
						"fileSystem": "monthly-giving"
					},
					"columnDelimiter": ",",
					"escapeChar": "\\",
					"firstRowAsHeader": true,
					"quoteChar": "\""
				},
				"schema": [
					{
						"name": "Type",
						"type": "String"
					},
					{
						"name": " Transaction Reference",
						"type": "String"
					},
					{
						"name": "Card Holder Name",
						"type": "String"
					},
					{
						"name": " Card Number",
						"type": "String"
					},
					{
						"name": " Expiry Date",
						"type": "String"
					},
					{
						"name": " Budget Period",
						"type": "String"
					},
					{
						"name": " Amount",
						"type": "String"
					}
				]
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/sandboxdatalake')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/MG_debit_order_batch')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "sandboxdatalake",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "DelimitedText",
				"typeProperties": {
					"location": {
						"type": "AzureBlobFSLocation",
						"folderPath": "bank_file_uploads/debit_order_batch",
						"fileSystem": "monthly-giving"
					},
					"columnDelimiter": ",",
					"escapeChar": "\\",
					"firstRowAsHeader": true,
					"quoteChar": "\""
				},
				"schema": [
					{
						"name": "Field1",
						"type": "String"
					},
					{
						"name": "Customer Number",
						"type": "String"
					},
					{
						"name": "Type of Service",
						"type": "String"
					},
					{
						"name": "Name of member",
						"type": "String"
					},
					{
						"name": "Account Name",
						"type": "String"
					},
					{
						"name": "Account Number",
						"type": "String"
					},
					{
						"name": "Filler2",
						"type": "String"
					},
					{
						"name": "Branch Code",
						"type": "String"
					},
					{
						"name": "Type of Account",
						"type": "String"
					},
					{
						"name": "Description",
						"type": "String"
					},
					{
						"name": "Nominated Account",
						"type": "String"
					},
					{
						"name": "Filler3",
						"type": "String"
					},
					{
						"name": "Amount",
						"type": "String"
					},
					{
						"name": "Amount Arrear",
						"type": "String"
					},
					{
						"name": "Max Amount",
						"type": "String"
					},
					{
						"name": "Capital Amount",
						"type": "String"
					},
					{
						"name": "Special Amount",
						"type": "String"
					},
					{
						"name": "Action Date",
						"type": "String"
					},
					{
						"name": "Cancellation Date",
						"type": "String"
					},
					{
						"name": "Frequency",
						"type": "String"
					},
					{
						"name": "Filler4",
						"type": "String"
					},
					{
						"name": "Record Type Code",
						"type": "String"
					},
					{
						"name": "Entry Class Code",
						"type": "String"
					}
				]
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/sandboxdatalake')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/MG_debit_order_history')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "sandboxdatalake",
					"type": "LinkedServiceReference"
				},
				"parameters": {
					"submissiondate": {
						"type": "string",
						"defaultValue": "'SubmissionDate'"
					},
					"division": {
						"type": "string",
						"defaultValue": "'Division'"
					},
					"paymentmethod": {
						"type": "string",
						"defaultValue": "'PaymentMethod'"
					}
				},
				"annotations": [],
				"type": "DelimitedText",
				"typeProperties": {
					"location": {
						"type": "AzureBlobFSLocation",
						"folderPath": "bank_file_uploads/debit_order_history",
						"fileSystem": "monthly-giving"
					},
					"columnDelimiter": ",",
					"escapeChar": "\\",
					"firstRowAsHeader": true,
					"quoteChar": "\""
				},
				"schema": [
					{
						"name": "Field1",
						"type": "String"
					},
					{
						"name": "Customer Number",
						"type": "String"
					},
					{
						"name": "Type of Service",
						"type": "String"
					},
					{
						"name": "Name of member",
						"type": "String"
					},
					{
						"name": "Account Name",
						"type": "String"
					},
					{
						"name": "Account Number",
						"type": "String"
					},
					{
						"name": "Filler2",
						"type": "String"
					},
					{
						"name": "Branch Code",
						"type": "String"
					},
					{
						"name": "Type of Account",
						"type": "String"
					},
					{
						"name": "Description",
						"type": "String"
					},
					{
						"name": "Nominated Account",
						"type": "String"
					},
					{
						"name": "Filler3",
						"type": "String"
					},
					{
						"name": "Amount",
						"type": "String"
					},
					{
						"name": "Amount Arrear",
						"type": "String"
					},
					{
						"name": "Max Amount",
						"type": "String"
					},
					{
						"name": "Capital Amount",
						"type": "String"
					},
					{
						"name": "Special Amount",
						"type": "String"
					},
					{
						"name": "Action Date",
						"type": "String"
					},
					{
						"name": "Cancellation Date",
						"type": "String"
					},
					{
						"name": "Frequency",
						"type": "String"
					},
					{
						"name": "Filler4",
						"type": "String"
					},
					{
						"name": "Record Type Code",
						"type": "String"
					},
					{
						"name": "Entry Class Code",
						"type": "String"
					}
				]
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/sandboxdatalake')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/MG_debit_order_temp')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "sandboxdatalake",
					"type": "LinkedServiceReference"
				},
				"parameters": {
					"submissiondate": {
						"type": "string",
						"defaultValue": "'SubmissionDate'"
					},
					"division": {
						"type": "string",
						"defaultValue": "'Division'"
					},
					"paymentmethod": {
						"type": "string",
						"defaultValue": "'PaymentMethod'"
					}
				},
				"annotations": [],
				"type": "DelimitedText",
				"typeProperties": {
					"location": {
						"type": "AzureBlobFSLocation",
						"folderPath": "bank_file_uploads/temp_files/debit_order",
						"fileSystem": "monthly-giving"
					},
					"columnDelimiter": ",",
					"escapeChar": "\\",
					"firstRowAsHeader": true,
					"quoteChar": "\""
				},
				"schema": [
					{
						"name": "Field1",
						"type": "String"
					},
					{
						"name": "Customer Number",
						"type": "String"
					},
					{
						"name": "Type of Service",
						"type": "String"
					},
					{
						"name": "Name of member",
						"type": "String"
					},
					{
						"name": "Account Name",
						"type": "String"
					},
					{
						"name": "Account Number",
						"type": "String"
					},
					{
						"name": "Filler2",
						"type": "String"
					},
					{
						"name": "Branch Code",
						"type": "String"
					},
					{
						"name": "Type of Account",
						"type": "String"
					},
					{
						"name": "Description",
						"type": "String"
					},
					{
						"name": "Nominated Account",
						"type": "String"
					},
					{
						"name": "Filler3",
						"type": "String"
					},
					{
						"name": "Amount",
						"type": "String"
					},
					{
						"name": "Amount Arrear",
						"type": "String"
					},
					{
						"name": "Max Amount",
						"type": "String"
					},
					{
						"name": "Capital Amount",
						"type": "String"
					},
					{
						"name": "Special Amount",
						"type": "String"
					},
					{
						"name": "Action Date",
						"type": "String"
					},
					{
						"name": "Cancellation Date",
						"type": "String"
					},
					{
						"name": "Frequency",
						"type": "String"
					},
					{
						"name": "Filler4",
						"type": "String"
					},
					{
						"name": "Record Type Code",
						"type": "String"
					},
					{
						"name": "Entry Class Code",
						"type": "String"
					}
				]
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/sandboxdatalake')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/SandboxDonorOrder')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "sandbox",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "CommonDataServiceForAppsEntity",
				"schema": [],
				"typeProperties": {
					"entityName": "cog_donororder"
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/sandbox')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/Sandbox_BankDetail')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "sandbox",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "CommonDataServiceForAppsEntity",
				"schema": [],
				"typeProperties": {
					"entityName": "cog_bankdetails"
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/sandbox')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/Sandbox_Transaction')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "sandbox",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "CommonDataServiceForAppsEntity",
				"schema": [],
				"typeProperties": {
					"entityName": "cog_transaction"
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/sandbox')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/file_mg_aggregation')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "sandboxdatalake",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "DelimitedText",
				"typeProperties": {
					"location": {
						"type": "AzureBlobFSLocation",
						"folderPath": "donor_order_aggregates",
						"fileSystem": "monthly-giving"
					},
					"columnDelimiter": ",",
					"escapeChar": "\\",
					"firstRowAsHeader": true,
					"quoteChar": "\""
				},
				"schema": [
					{
						"name": "cog_donororderid",
						"type": "String"
					},
					{
						"name": "cog_transactionid",
						"type": "String"
					}
				]
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/sandboxdatalake')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/Error Output')]",
			"type": "Microsoft.DataFactory/factories/linkedServices",
			"apiVersion": "2018-06-01",
			"properties": {
				"annotations": [],
				"type": "AzureBlobFS",
				"typeProperties": {
					"url": "[parameters('Error Output_properties_typeProperties_url')]",
					"accountKey": {
						"type": "SecureString",
						"value": "[parameters('Error Output_accountKey')]"
					}
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/sandbox')]",
			"type": "Microsoft.DataFactory/factories/linkedServices",
			"apiVersion": "2018-06-01",
			"properties": {
				"annotations": [],
				"type": "CommonDataServiceForApps",
				"typeProperties": {
					"deploymentType": "Online",
					"serviceUri": "https://nsridev.crm4.dynamics.com/",
					"authenticationType": "Office365",
					"username": "[parameters('sandbox_properties_typeProperties_username')]",
					"password": {
						"type": "SecureString",
						"value": "[parameters('sandbox_password')]"
					}
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/sandboxdatalake')]",
			"type": "Microsoft.DataFactory/factories/linkedServices",
			"apiVersion": "2018-06-01",
			"properties": {
				"annotations": [],
				"type": "AzureBlobFS",
				"typeProperties": {
					"url": "[parameters('sandboxdatalake_properties_typeProperties_url')]",
					"accountKey": {
						"type": "SecureString",
						"value": "[parameters('sandboxdatalake_accountKey')]"
					}
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/MG Aggregate DOs')]",
			"type": "Microsoft.DataFactory/factories/dataflows",
			"apiVersion": "2018-06-01",
			"properties": {
				"description": "Contact, MG, Bankdetails",
				"type": "MappingDataFlow",
				"typeProperties": {
					"sources": [
						{
							"dataset": {
								"referenceName": "SandboxDonorOrder",
								"type": "DatasetReference"
							},
							"name": "donororder"
						},
						{
							"dataset": {
								"referenceName": "Sandbox_BankDetail",
								"type": "DatasetReference"
							},
							"name": "bankdetails"
						}
					],
					"sinks": [
						{
							"dataset": {
								"referenceName": "Sandbox_Transaction",
								"type": "DatasetReference"
							},
							"name": "accounttransactions"
						},
						{
							"dataset": {
								"referenceName": "Sandbox_Transaction",
								"type": "DatasetReference"
							},
							"name": "ContactTransactions"
						},
						{
							"dataset": {
								"referenceName": "SandboxDonorOrder",
								"type": "DatasetReference"
							},
							"name": "DonorOrderTrxDate"
						}
					],
					"transformations": [
						{
							"name": "joindonororderbankdetails"
						},
						{
							"name": "From"
						},
						{
							"name": "aggregatefromaccount"
						},
						{
							"name": "aggregatefromcontact"
						},
						{
							"name": "TransactionFields"
						},
						{
							"name": "alterRow1"
						}
					],
					"scriptLines": [
						"source(output(",
						"          {@odata.etag} as string,",
						"          {AccountNumber.accountnumber} as string,",
						"          {ContactNumber.cog_contactnumber} as string,",
						"          cog_account as string,",
						"          cog_bankdetails as string,",
						"          cog_contact as string,",
						"          transactioncurrencyid as string,",
						"          cog_competition as string,",
						"          cog_datepaid as string,",
						"          cog_donationamount as string,",
						"          cog_donororderfrom as string,",
						"          cog_donororderid as string,",
						"          cog_name as string,",
						"          cog_paymentmethod as string,",
						"          cog_paymenttype as string,",
						"          cog_totalticketamount as string,",
						"          statecode as string,",
						"          statuscode as string",
						"     ),",
						"     allowSchemaDrift: true,",
						"     validateSchema: false,",
						"     query: '<fetch version=\"1.0\" mapping=\"logical\" no-lock=\"false\" distinct=\"true\">\\n     <entity name=\"cog_donororder\">\\n          <attribute name=\"cog_name\"/>\\n          <attribute name=\"cog_donororderid\"/>\\n          <attribute name=\"cog_contact\"/>\\n          <attribute name=\"cog_account\"/>\\n          <attribute name=\"statuscode\"/>\\n          <attribute name=\"cog_totalticketamount\"/>\\n          <attribute name=\"cog_donationamount\"/>\\n          <attribute name=\"cog_datepaid\"/>\\n          <attribute name=\"cog_bankdetails\"/>\\n          <attribute name=\"cog_competition\"/>\\n          <attribute name=\"cog_paymentmethod\"/>\\n          <attribute name=\"cog_paymenttype\"/>\\n          <attribute name=\"cog_donororderfrom\"/>\\n          <attribute name=\"statecode\"/>\\n          <filter type=\"and\">\\n               <condition attribute=\"cog_competition\" operator=\"eq\" value=\"181310001\"/>\\n               <filter type=\"or\">\\n                    <filter type=\"and\">\\n                         <condition attribute=\"statuscode\" operator=\"in\">\\n                              <value>181310001</value>\\n                              <value>181310013</value>\\n                         </condition>\\n                         <condition attribute=\"cog_datepaid\" operator=\"null\"/>\\n                    </filter>\\n                    <filter type=\"and\">\\n                         <condition attribute=\"statuscode\" operator=\"in\">\\n                              <value>2</value>\\n                              <value>181310017</value>\\n                         </condition>\\n                         <condition attribute=\"cog_datepaid\" operator=\"not-null\"/>\\n                    </filter>\\n               </filter>\\n               <filter type=\"or\">\\n                    <condition attribute=\"cog_paymentmethod\" operator=\"eq\" value=\"181310001\"/>\\n                    <condition attribute=\"cog_paymentmethod\" operator=\"eq\" value=\"181310003\"/>\\n               </filter>\\n          </filter>\\n                     <link-entity name=\"account\" from=\"accountid\" to=\"cog_account\" link-type=\"outer\" alias=\"AccountNumber\" visible=\"false\">\\n               <attribute name=\"accountnumber\"/>\\n          </link-entity>\\n          <link-entity name=\"contact\" from=\"contactid\" to=\"cog_contact\" link-type=\"outer\" alias=\"ContactNumber\" visible=\"false\">\\n               <attribute name=\"cog_contactnumber\"/>\\n          </link-entity>\\n     </entity>\\n</fetch>',",
						"     manifestType: 'model') ~> donororder",
						"source(output(",
						"          {@odata.etag} as string,",
						"          cog_bank as string,",
						"          cog_contactid as string,",
						"          cog_accountholder as string,",
						"          cog_accountnumber as string,",
						"          cog_accounttype as string,",
						"          cog_bankdetailsid as string,",
						"          cog_branchcode as string,",
						"          cog_cvc as string,",
						"          cog_expireydate as string,",
						"          statecode as string",
						"     ),",
						"     allowSchemaDrift: true,",
						"     validateSchema: false,",
						"     query: '<fetch version=\"1.0\" mapping=\"logical\" no-lock=\"false\" distinct=\"true\">\\n     <entity name=\"cog_bankdetails\">\\n          <attribute name=\"cog_accountnumber\"/>\\n          <attribute name=\"cog_expireydate\"/>\\n          <attribute name=\"cog_cvc\"/>\\n          <attribute name=\"cog_branchcode\"/>\\n          <attribute name=\"cog_bank\"/>\\n          <attribute name=\"cog_accounttype\"/>\\n          <attribute name=\"cog_contactid\"/>\\n          <attribute name=\"cog_bankdetailsid\"/>\\n          <attribute name=\"cog_accountholder\"/>\\n          <attribute name=\"statecode\"/>\\n          <filter type=\"and\">\\n               <condition attribute=\"statecode\" operator=\"eq\" value=\"0\"/>\\n               <condition attribute=\"cog_contactid\" operator=\"not-null\"/>\\n          </filter>\\n     </entity>\\n</fetch>',",
						"     manifestType: 'model') ~> bankdetails",
						"donororder, bankdetails join(cog_bankdetails == cog_bankdetailsid,",
						"     joinType:'left',",
						"     matchType:'exact',",
						"     ignoreSpaces: false,",
						"     broadcast: 'auto')~> joindonororderbankdetails",
						"TransactionFields split(cog_donororderfrom=='181310001',",
						"     cog_donororderfrom=='181310000',",
						"     disjoint: false) ~> From@(FromAccount, FromContact)",
						"From@FromAccount aggregate(groupBy(cog_competition,",
						"          cog_account,",
						"          cog_paymentmethod,",
						"          cog_bankdetails,",
						"          cog_donororderfrom,",
						"          cog_transactiondate),",
						"     cog_transactionamount = sum(toInteger(cog_transactionamount)),",
						"          each(match(name=='cog_donornumber'||name=='new_statecode'||name=='new_statuscode'||name=='cog_accountnumber'||name=='cog_expireydate'||name=='cog_cvc'||name=='cog_branchcode'||name=='cog_bank'||name=='cog_accounttype'||name=='cog_accountholder'||name=='cog_contact'), $$ = first($$))) ~> aggregatefromaccount",
						"From@FromContact aggregate(groupBy(cog_competition,",
						"          cog_contact,",
						"          cog_paymentmethod,",
						"          cog_bankdetails,",
						"          cog_donororderfrom,",
						"          cog_transactiondate),",
						"     cog_transactionamount = sum(toInteger(cog_transactionamount)),",
						"          each(match(name=='cog_donornumber'||name=='new_statecode'||name=='new_statuscode'||name=='cog_accountnumber'||name=='cog_expireydate'||name=='cog_cvc'||name=='cog_branchcode'||name=='cog_bank'||name=='cog_accounttype'||name=='cog_accountholder'), $$ = first($$))) ~> aggregatefromcontact",
						"joindonororderbankdetails derive(cog_transactionamount = iif(equals(isNull(cog_donationamount),true()),cog_totalticketamount,cog_donationamount),",
						"          cog_transactiondate = currentUTC(),",
						"          new_statuscode = case (\r",
						"  isNull(cog_datepaid)==true()&&statuscode=='181310001',1,  \r",
						"  isNull(cog_datepaid)==false()&&statuscode=='2',1\r",
						"  ),",
						"          new_statecode = case (\r",
						"  isNull(cog_datepaid)==true()&&statuscode=='181310001',0,  \r",
						"  isNull(cog_datepaid)==false()&&statuscode=='2',0\r",
						"  ),",
						"          cog_donornumber = iif(equals(cog_donororderfrom,'181310000'),{ContactNumber.cog_contactnumber},{AccountNumber.accountnumber})) ~> TransactionFields",
						"TransactionFields alterRow(updateIf(isNull(cog_transactiondate)==false())) ~> alterRow1",
						"aggregatefromaccount sink(allowSchemaDrift: true,",
						"     validateSchema: false,",
						"     deletable:false,",
						"     insertable:true,",
						"     updateable:false,",
						"     upsertable:false,",
						"     mapColumn(",
						"          cog_division = cog_competition,",
						"          cog_account,",
						"          cog_contact,",
						"          cog_paymentmethod,",
						"          cog_bankdetails,",
						"          cog_transactionamount,",
						"          cog_transactionfrom = cog_donororderfrom,",
						"          cog_transactiondate,",
						"          cog_bank,",
						"          cog_accounttype,",
						"          cog_branchcode,",
						"          cog_cvc,",
						"          cog_expireydate,",
						"          cog_accountholder,",
						"          cog_accountnumber,",
						"          statuscode = new_statuscode,",
						"          statecode = new_statecode,",
						"          cog_donornumber",
						"     )) ~> accounttransactions",
						"aggregatefromcontact sink(allowSchemaDrift: true,",
						"     validateSchema: false,",
						"     deletable:false,",
						"     insertable:true,",
						"     updateable:false,",
						"     upsertable:false,",
						"     skipDuplicateMapInputs: true,",
						"     skipDuplicateMapOutputs: true,",
						"     mapColumn(",
						"          cog_division = cog_competition,",
						"          cog_contact,",
						"          cog_paymentmethod,",
						"          cog_bankdetails,",
						"          cog_transactionamount,",
						"          cog_transactionfrom = cog_donororderfrom,",
						"          cog_bank,",
						"          cog_accountholder,",
						"          cog_accountnumber,",
						"          cog_accounttype,",
						"          cog_branchcode,",
						"          cog_cvc,",
						"          cog_expireydate,",
						"          cog_transactiondate,",
						"          statuscode = new_statuscode,",
						"          statecode = new_statecode,",
						"          cog_donornumber",
						"     )) ~> ContactTransactions",
						"alterRow1 sink(allowSchemaDrift: true,",
						"     validateSchema: false,",
						"     deletable:false,",
						"     insertable:false,",
						"     updateable:true,",
						"     upsertable:false,",
						"     skipDuplicateMapInputs: true,",
						"     skipDuplicateMapOutputs: true,",
						"     mapColumn(",
						"          cog_donororderid,",
						"          cog_transactiondate",
						"     )) ~> DonorOrderTrxDate"
					]
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/SandboxDonorOrder')]",
				"[concat(variables('factoryId'), '/datasets/Sandbox_BankDetail')]",
				"[concat(variables('factoryId'), '/datasets/Sandbox_Transaction')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/MG Aggregation Create DO Trans File')]",
			"type": "Microsoft.DataFactory/factories/dataflows",
			"apiVersion": "2018-06-01",
			"properties": {
				"description": "Contact, MG, Bankdetails",
				"type": "MappingDataFlow",
				"typeProperties": {
					"sources": [
						{
							"dataset": {
								"referenceName": "SandboxDonorOrder",
								"type": "DatasetReference"
							},
							"name": "donororder"
						},
						{
							"dataset": {
								"referenceName": "Sandbox_Transaction",
								"type": "DatasetReference"
							},
							"name": "transaction"
						}
					],
					"sinks": [
						{
							"dataset": {
								"referenceName": "file_mg_aggregation",
								"type": "DatasetReference"
							},
							"name": "mgaggregationfile"
						}
					],
					"transformations": [
						{
							"name": "joindonorordertransaction"
						},
						{
							"name": "DerivedDonorOrderKey"
						},
						{
							"name": "DerivedTransactionKey"
						},
						{
							"name": "submittecdolumns"
						}
					],
					"scriptLines": [
						"source(output(",
						"          {@odata.etag} as string,",
						"          cog_account as string,",
						"          cog_bankdetails as string,",
						"          cog_contact as string,",
						"          transactioncurrencyid as string,",
						"          cog_competition as string,",
						"          cog_donationamount as string,",
						"          cog_donororderfrom as string,",
						"          cog_donororderid as string,",
						"          cog_name as string,",
						"          cog_paymentmethod as string,",
						"          cog_paymenttype as string,",
						"          cog_totalticketamount as string,",
						"          cog_transactiondate as string,",
						"          statecode as string,",
						"          statuscode as string",
						"     ),",
						"     allowSchemaDrift: true,",
						"     validateSchema: false,",
						"     query: '<fetch version=\"1.0\" mapping=\"logical\" no-lock=\"false\" distinct=\"true\">\\n     <entity name=\"cog_donororder\">\\n          <attribute name=\"cog_name\"/>\\n          <attribute name=\"cog_donororderid\"/>\\n          <attribute name=\"cog_contact\"/>\\n          <attribute name=\"cog_account\"/>\\n          <attribute name=\"statuscode\"/>\\n          <attribute name=\"cog_bankdetails\"/>\\n          <attribute name=\"cog_competition\"/>\\n          <attribute name=\"cog_paymentmethod\"/>\\n          <attribute name=\"cog_paymenttype\"/>\\n          <attribute name=\"cog_donororderfrom\"/>\\n          <attribute name=\"cog_totalticketamount\"/>\\n          <order attribute=\"cog_donationamount\"/>\\n          <attribute name=\"statecode\"/>\\n          <attribute name=\"cog_transactiondate\"/>\\n          <filter type=\"and\">\\n               <condition attribute=\"statuscode\" operator=\"in\">\\n                    <value>181310001</value>\\n                    <value>181310013</value>\\n                    <value>181310019</value>\\n                    <value>181310005</value>\\n                    <value>2</value>\\n               </condition>\\n               <condition attribute=\"cog_competition\" operator=\"eq\" value=\"181310001\"/>\\n          </filter>\\n     </entity>\\n</fetch>',",
						"     manifestType: 'model') ~> donororder",
						"source(output(",
						"          {@odata.etag} as string,",
						"          cog_account as string,",
						"          cog_bankdetails as string,",
						"          cog_contact as string,",
						"          transactioncurrencyid as string,",
						"          cog_division as string,",
						"          cog_paymentmethod as string,",
						"          cog_transactionamount as string,",
						"          cog_transactiondate as string,",
						"          cog_transactionfrom as string,",
						"          cog_transactionid as string,",
						"          cog_transactionno as string,",
						"          statuscode as string",
						"     ),",
						"     allowSchemaDrift: true,",
						"     validateSchema: false,",
						"     query: '<fetch version=\"1.0\" mapping=\"logical\" no-lock=\"false\" distinct=\"true\">\\n     <entity name=\"cog_transaction\">\\n          <attribute name=\"cog_transactionno\"/>\\n          <attribute name=\"cog_account\"/>\\n          <attribute name=\"cog_contact\"/>\\n          <attribute name=\"cog_transactionamount\"/>\\n          <attribute name=\"statuscode\"/>\\n          <attribute name=\"cog_paymentmethod\"/>\\n          <order attribute=\"cog_transactionno\" descending=\"true\"/>\\n          <attribute name=\"cog_transactionid\"/>\\n          <attribute name=\"cog_division\"/>\\n          <attribute name=\"cog_bankdetails\"/>\\n          <attribute name=\"cog_transactionfrom\"/>\\n          <attribute name=\"cog_transactiondate\"/>         \\n     </entity>\\n</fetch>',",
						"     manifestType: 'model') ~> transaction",
						"DerivedDonorOrderKey, DerivedTransactionKey join(DonorOrderKey == TransactionKey,",
						"     joinType:'inner',",
						"     matchType:'exact',",
						"     ignoreSpaces: false,",
						"     broadcast: 'auto')~> joindonorordertransaction",
						"donororder derive(DonorOrderKey = cog_transactiondate+toString(cog_donororderfrom)+iif(equals(isNull(cog_bankdetails),true()),' ',cog_bankdetails)+toString(cog_competition)+iif(cog_donororderfrom=='181310000',cog_contact,cog_account)+toString(cog_paymentmethod),",
						"          Target = 'cog_transaction') ~> DerivedDonorOrderKey",
						"transaction derive(TransactionKey = cog_transactiondate+toString(cog_transactionfrom)+iif(equals(isNull(cog_bankdetails),true()),' ',cog_bankdetails)+toString(cog_division)+iif(cog_transactionfrom=='181310000',cog_contact,cog_account)+toString(cog_paymentmethod)) ~> DerivedTransactionKey",
						"joindonorordertransaction derive(new_statuscode = case(\r",
						"donororder@statuscode=='181310001','181310013',\r",
						"donororder@statuscode=='2','181310019'\r",
						")) ~> submittecdolumns",
						"submittecdolumns sink(allowSchemaDrift: true,",
						"     validateSchema: false,",
						"     input(",
						"          cog_donororderid as string,",
						"          cog_transactionid as string",
						"     ),",
						"     filePattern:('MG-Aggregation-'+toString(currentUTC())+'.csv'),",
						"     truncate: true,",
						"     umask: 0022,",
						"     preCommands: [],",
						"     postCommands: [],",
						"     skipDuplicateMapInputs: true,",
						"     skipDuplicateMapOutputs: true,",
						"     partitionBy('hash', 1)) ~> mgaggregationfile"
					]
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/SandboxDonorOrder')]",
				"[concat(variables('factoryId'), '/datasets/Sandbox_Transaction')]",
				"[concat(variables('factoryId'), '/datasets/file_mg_aggregation')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/MG CC Create File')]",
			"type": "Microsoft.DataFactory/factories/dataflows",
			"apiVersion": "2018-06-01",
			"properties": {
				"type": "MappingDataFlow",
				"typeProperties": {
					"sources": [
						{
							"dataset": {
								"referenceName": "Sandbox_Transaction",
								"type": "DatasetReference"
							},
							"name": "transaction"
						}
					],
					"sinks": [
						{
							"dataset": {
								"referenceName": "MG_credit_card_temp",
								"type": "DatasetReference"
							},
							"name": "CreateFileTemp"
						},
						{
							"dataset": {
								"referenceName": "MG_credit_card_history",
								"type": "DatasetReference"
							},
							"name": "CreateFileHistory"
						}
					],
					"transformations": [
						{
							"name": "derivedColumns"
						},
						{
							"name": "windowIndex"
						}
					],
					"scriptLines": [
						"parameters{",
						"     submissiondate as string ('SubmissionDate'),",
						"     division as string ('Division'),",
						"     paymentmethod as string ('PaymentMethod')",
						"}",
						"source(output(",
						"          {@odata.etag} as string,",
						"          cog_account as string,",
						"          cog_contact as string,",
						"          transactioncurrencyid as string,",
						"          cog_accountholder as string,",
						"          cog_accountnumber as string,",
						"          cog_expireydate as string,",
						"          cog_transactionamount as string,",
						"          cog_transactiondate as string,",
						"          cog_transactionid as string,",
						"          cog_transactionno as string,",
						"          statecode as string,",
						"          statuscode as string",
						"     ),",
						"     allowSchemaDrift: true,",
						"     validateSchema: false,",
						"     query: '<fetch version=\"1.0\" output-format=\"xml-platform\" mapping=\"logical\" distinct=\"false\" no-lock=\"false\">\\n     <entity name=\"cog_transaction\">\\n          <attribute name=\"cog_transactionno\"/>\\n          <attribute name=\"cog_transactionamount\"/>\\n          <attribute name=\"cog_transactionid\"/>\\n          <order attribute=\"cog_transactionno\" descending=\"true\"/>\\n          <attribute name=\"cog_accountholder\"/>\\n          <attribute name=\"cog_accountnumber\"/>\\n          <attribute name=\"cog_expireydate\"/>\\n          <attribute name=\"cog_account\"/>\\n          <attribute name=\"cog_contact\"/>\\n          <attribute name=\"statecode\"/>\\n          <attribute name=\"statuscode\"/>\\n          <attribute name=\"cog_transactiondate\"/>\\n          <filter type=\"and\">\\n               <condition attribute=\"statecode\" operator=\"eq\" value=\"0\"/>\\n               <condition attribute=\"statuscode\" operator=\"eq\" value=\"1\"/>\\n               <condition attribute=\"cog_division\" operator=\"eq\" value=\"181310001\"/>\\n               <condition attribute=\"cog_paymentmethod\" operator=\"eq\" value=\"181310001\"/>\\n          </filter>\\n     </entity>\\n</fetch>') ~> transaction",
						"transaction derive({Type (A)} = 'A',",
						"          {Transaction Reference} = cog_transactionno,",
						"          {Card Holder Name} = cog_accountholder,",
						"          {Card Number} = cog_accountnumber,",
						"          {Expiry Date} = concat(substringIndex(substringIndex(cog_expireydate,'-',2),'-',-1),substringIndex(substringIndex(cog_expireydate,'-',2),'-',1)),",
						"          {Budget Period} = '00',",
						"          Amount = concat(replace(cog_transactionamount,'.',''),'0')) ~> derivedColumns",
						"derivedColumns window(asc({@odata.etag}, true),",
						"     index = rowNumber()) ~> windowIndex",
						"windowIndex sink(allowSchemaDrift: false,",
						"     validateSchema: false,",
						"     input(",
						"          Type as string,",
						"          { Transaction Reference} as string,",
						"          {Card Holder Name} as string,",
						"          { Card Number} as string,",
						"          { Expiry Date} as string,",
						"          { Budget Period} as string,",
						"          { Amount} as string",
						"     ),",
						"     filePattern:($division+'-'+$paymentmethod+'-'+$submissiondate+'.csv'),",
						"     truncate: true,",
						"     umask: 0022,",
						"     preCommands: [],",
						"     postCommands: [],",
						"     mapColumn(",
						"          accountholder = cog_accountholder,",
						"          accountnumber = cog_accountnumber,",
						"          expireydate = cog_expireydate,",
						"          amount = cog_transactionamount,",
						"          reference = cog_transactionid,",
						"          type = {Type (A)},",
						"          budgetperiod = {Budget Period}",
						"     )) ~> CreateFileTemp",
						"windowIndex sink(allowSchemaDrift: true,",
						"     validateSchema: false,",
						"     input(",
						"          Field1 as string,",
						"          {Customer Number} as string,",
						"          {Type of Service} as string,",
						"          {Name of member} as string,",
						"          {Account Name} as string,",
						"          {Account Number} as string,",
						"          Filler2 as string,",
						"          {Branch Code} as string,",
						"          {Type of Account} as string,",
						"          Description as string,",
						"          {Nominated Account} as string,",
						"          Filler3 as string,",
						"          Amount as string,",
						"          {Amount Arrear} as string,",
						"          {Max Amount} as string,",
						"          {Capital Amount} as string,",
						"          {Special Amount} as string,",
						"          {Action Date} as string,",
						"          {Cancellation Date} as string,",
						"          Frequency as string,",
						"          Filler4 as string,",
						"          {Record Type Code} as string,",
						"          {Entry Class Code} as string",
						"     ),",
						"     filePattern:($division+'-'+$paymentmethod+'-'+$submissiondate+'.csv'),",
						"     umask: 0022,",
						"     preCommands: [],",
						"     postCommands: [],",
						"     mapColumn(",
						"          Amount",
						"     )) ~> CreateFileHistory"
					]
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/Sandbox_Transaction')]",
				"[concat(variables('factoryId'), '/datasets/MG_credit_card_temp')]",
				"[concat(variables('factoryId'), '/datasets/MG_credit_card_history')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/MG DO Create File')]",
			"type": "Microsoft.DataFactory/factories/dataflows",
			"apiVersion": "2018-06-01",
			"properties": {
				"type": "MappingDataFlow",
				"typeProperties": {
					"sources": [
						{
							"dataset": {
								"referenceName": "Sandbox_Transaction",
								"type": "DatasetReference"
							},
							"name": "transaction"
						}
					],
					"sinks": [
						{
							"dataset": {
								"referenceName": "MG_debit_order_temp",
								"type": "DatasetReference"
							},
							"name": "CreateFileTemp"
						},
						{
							"dataset": {
								"referenceName": "MG_debit_order_history",
								"type": "DatasetReference"
							},
							"name": "CreateFileHistory"
						}
					],
					"transformations": [
						{
							"name": "derivedColumns"
						},
						{
							"name": "windowIndex"
						}
					],
					"scriptLines": [
						"parameters{",
						"     submissiondate as string ('SubmissionDate'),",
						"     division as string ('Division'),",
						"     paymentmethod as string ('PaymentMethod')",
						"}",
						"source(output(",
						"          {@odata.etag} as string,",
						"          cog_account as string,",
						"          cog_contact as string,",
						"          transactioncurrencyid as string,",
						"          cog_accountholder as string,",
						"          cog_accountnumber as string,",
						"          cog_branchcode as string,",
						"          cog_donornumber as string,",
						"          cog_expireydate as string,",
						"          cog_transactionamount as string,",
						"          cog_transactiondate as string,",
						"          cog_transactionid as string,",
						"          cog_transactionno as string,",
						"          statecode as string,",
						"          statuscode as string",
						"     ),",
						"     allowSchemaDrift: true,",
						"     validateSchema: false,",
						"     query: '<fetch version=\"1.0\" output-format=\"xml-platform\" mapping=\"logical\" distinct=\"false\" no-lock=\"false\">\\n     <entity name=\"cog_transaction\">\\n          <attribute name=\"cog_transactionno\"/>\\n          <attribute name=\"cog_transactionamount\"/>\\n          <attribute name=\"cog_transactionid\"/>\\n          <order attribute=\"cog_transactionno\" descending=\"true\"/>\\n          <attribute name=\"cog_accountholder\"/>\\n          <attribute name=\"cog_accountnumber\"/>\\n          <attribute name=\"cog_expireydate\"/>\\n          <attribute name=\"cog_account\"/>\\n          <attribute name=\"cog_contact\"/>\\n          <attribute name=\"statecode\"/>\\n          <attribute name=\"statuscode\"/>\\n          <attribute name=\"cog_transactiondate\"/>\\n          <attribute name=\"cog_donornumber\"/>\\n          <attribute name=\"cog_branchcode\"/>\\n          <filter type=\"and\">\\n               <condition attribute=\"statecode\" operator=\"eq\" value=\"0\"/>\\n               <condition attribute=\"statuscode\" operator=\"eq\" value=\"1\"/>\\n               <condition attribute=\"cog_division\" operator=\"eq\" value=\"181310001\"/>\\n               <condition attribute=\"cog_paymentmethod\" operator=\"eq\" value=\"181310003\"/>\\n          </filter>\\n     </entity>\\n</fetch>') ~> transaction",
						"transaction derive(Field1 = '0000000000',",
						"          {Customer Number} = cog_donornumber,",
						"          {Type of Service} = 'A',",
						"          {Name of Member} = upper(cog_accountholder),",
						"          {Account Name} = replace(upper(cog_accountholder),' ',''),",
						"          {Account Number} = cog_accountnumber,",
						"          Filler2 = '          ',",
						"          {Branch Code} = cog_branchcode,",
						"          {Type of Account} = '1',",
						"          Description = '                    ',",
						"          {Nominated Account} = '02',",
						"          Filler3 = '00000',",
						"          Amount = substringIndex(cog_transactionamount,'.',1),",
						"          {Amount Arrear} = '00000000000',",
						"          {Max Amount} = '99999999999',",
						"          {Capital Amount} = '00000000000',",
						"          {Special Amount} = '00000000000',",
						"          {Action Date} = toString($submissiondate,'yyyy-mm-dd'),",
						"          {Cancellation Date} = '00000000000',",
						"          Frequency = '01',",
						"          Filler4 = '  ',",
						"          {Record Type Code} = '00',",
						"          {Entry Class Code} = '00') ~> derivedColumns",
						"derivedColumns window(asc({@odata.etag}, true),",
						"     index = rowNumber()) ~> windowIndex",
						"windowIndex sink(allowSchemaDrift: false,",
						"     validateSchema: false,",
						"     input(",
						"          Field1 as string,",
						"          {Customer Number} as string,",
						"          {Type of Service} as string,",
						"          {Name of member} as string,",
						"          {Account Name} as string,",
						"          {Account Number} as string,",
						"          Filler2 as string,",
						"          {Branch Code} as string,",
						"          {Type of Account} as string,",
						"          Description as string,",
						"          {Nominated Account} as string,",
						"          Filler3 as string,",
						"          Amount as string,",
						"          {Amount Arrear} as string,",
						"          {Max Amount} as string,",
						"          {Capital Amount} as string,",
						"          {Special Amount} as string,",
						"          {Action Date} as string,",
						"          {Cancellation Date} as string,",
						"          Frequency as string,",
						"          Filler4 as string,",
						"          {Record Type Code} as string,",
						"          {Entry Class Code} as string",
						"     ),",
						"     filePattern:($division+'-'+$paymentmethod+'-'+$submissiondate+'.csv'),",
						"     truncate: true,",
						"     umask: 0022,",
						"     preCommands: [],",
						"     postCommands: [],",
						"     mapColumn(",
						"          Field1,",
						"          {Customer Number},",
						"          {Type of Service},",
						"          {Name of member} = {Name of Member},",
						"          {Account Name},",
						"          {Account Number},",
						"          Filler2,",
						"          {Branch Code},",
						"          {Type of Account},",
						"          Description,",
						"          {Nominated Account},",
						"          Filler3,",
						"          Amount,",
						"          {Amount Arrear},",
						"          {Max Amount},",
						"          {Capital Amount},",
						"          {Special Amount},",
						"          {Action Date},",
						"          {Cancellation Date},",
						"          Frequency,",
						"          Filler4,",
						"          {Record Type Code},",
						"          {Entry Class Code}",
						"     )) ~> CreateFileTemp",
						"windowIndex sink(allowSchemaDrift: false,",
						"     validateSchema: false,",
						"     input(",
						"          Field1 as string,",
						"          {Customer Number} as string,",
						"          {Type of Service} as string,",
						"          {Name of member} as string,",
						"          {Account Name} as string,",
						"          {Account Number} as string,",
						"          Filler2 as string,",
						"          {Branch Code} as string,",
						"          {Type of Account} as string,",
						"          Description as string,",
						"          {Nominated Account} as string,",
						"          Filler3 as string,",
						"          Amount as string,",
						"          {Amount Arrear} as string,",
						"          {Max Amount} as string,",
						"          {Capital Amount} as string,",
						"          {Special Amount} as string,",
						"          {Action Date} as string,",
						"          {Cancellation Date} as string,",
						"          Frequency as string,",
						"          Filler4 as string,",
						"          {Record Type Code} as string,",
						"          {Entry Class Code} as string",
						"     ),",
						"     filePattern:($division+'-'+$paymentmethod+'-'+$submissiondate+'.csv'),",
						"     umask: 0022,",
						"     preCommands: [],",
						"     postCommands: [],",
						"     mapColumn(",
						"          Field1,",
						"          {Customer Number},",
						"          {Type of Service},",
						"          {Name of member} = {Name of Member},",
						"          {Account Name},",
						"          {Account Number},",
						"          Filler2,",
						"          {Branch Code},",
						"          {Type of Account},",
						"          Description,",
						"          {Nominated Account},",
						"          Filler3,",
						"          Amount,",
						"          {Amount Arrear},",
						"          {Max Amount},",
						"          {Capital Amount},",
						"          {Special Amount},",
						"          {Action Date},",
						"          {Cancellation Date},",
						"          Frequency,",
						"          Filler4,",
						"          {Record Type Code},",
						"          {Entry Class Code}",
						"     )) ~> CreateFileHistory"
					]
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/Sandbox_Transaction')]",
				"[concat(variables('factoryId'), '/datasets/MG_debit_order_temp')]",
				"[concat(variables('factoryId'), '/datasets/MG_debit_order_history')]"
			]
		}
	]
}