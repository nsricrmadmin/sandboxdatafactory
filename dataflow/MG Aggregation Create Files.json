{
	"name": "MG Aggregation Create Files",
	"properties": {
		"description": "Contact, MG, Bankdetails",
		"type": "MappingDataFlow",
		"typeProperties": {
			"sources": [
				{
					"dataset": {
						"referenceName": "SandboxDonorOrder",
						"type": "DatasetReference"
					},
					"name": "donororder"
				},
				{
					"dataset": {
						"referenceName": "Sandbox_Transaction",
						"type": "DatasetReference"
					},
					"name": "transaction"
				}
			],
			"sinks": [
				{
					"dataset": {
						"referenceName": "file_mg_aggregation",
						"type": "DatasetReference"
					},
					"name": "mgaggregationfile"
				}
			],
			"transformations": [
				{
					"name": "joindonorordertransaction"
				},
				{
					"name": "DerivedDonorOrderKey"
				},
				{
					"name": "DerivedTransactionKey"
				},
				{
					"name": "submittecdolumns"
				}
			],
			"scriptLines": [
				"source(output(",
				"          {@odata.etag} as string,",
				"          cog_account as string,",
				"          cog_bankdetails as string,",
				"          cog_contact as string,",
				"          transactioncurrencyid as string,",
				"          cog_competition as string,",
				"          cog_donationamount as string,",
				"          cog_donororderfrom as string,",
				"          cog_donororderid as string,",
				"          cog_name as string,",
				"          cog_paymentmethod as string,",
				"          cog_paymenttype as string,",
				"          cog_totalticketamount as string,",
				"          statecode as string,",
				"          statuscode as string",
				"     ),",
				"     allowSchemaDrift: true,",
				"     validateSchema: false,",
				"     query: '<fetch version=\"1.0\" mapping=\"logical\" no-lock=\"false\" distinct=\"true\">\\n     <entity name=\"cog_donororder\">\\n          <attribute name=\"cog_name\"/>\\n          <attribute name=\"cog_donororderid\"/>\\n          <attribute name=\"cog_contact\"/>\\n          <attribute name=\"cog_account\"/>\\n          <attribute name=\"statuscode\"/>\\n          <attribute name=\"cog_bankdetails\"/>\\n          <attribute name=\"cog_competition\"/>\\n          <attribute name=\"cog_paymentmethod\"/>\\n          <attribute name=\"cog_paymenttype\"/>\\n          <attribute name=\"cog_donororderfrom\"/>\\n          <attribute name=\"cog_totalticketamount\"/>\\n          <order attribute=\"cog_donationamount\"/>\\n          <attribute name=\"statecode\"/>\\n          <filter type=\"and\">\\n               <condition attribute=\"statuscode\" operator=\"in\">\\n                    <value>181310001</value>\\n                    <value>2</value>\\n               </condition>\\n               <condition attribute=\"cog_competition\" operator=\"eq\" value=\"181310001\"/>\\n          </filter>\\n     </entity>\\n</fetch>',",
				"     manifestType: 'model') ~> donororder",
				"source(output(",
				"          {@odata.etag} as string,",
				"          cog_account as string,",
				"          cog_bankdetails as string,",
				"          cog_contact as string,",
				"          transactioncurrencyid as string,",
				"          cog_division as string,",
				"          cog_paymentmethod as string,",
				"          cog_transactionamount as string,",
				"          cog_transactionfrom as string,",
				"          cog_transactionid as string,",
				"          cog_transactionno as string,",
				"          statuscode as string",
				"     ),",
				"     allowSchemaDrift: true,",
				"     validateSchema: false,",
				"     query: '<fetch version=\"1.0\" mapping=\"logical\" no-lock=\"false\" distinct=\"true\">\\n     <entity name=\"cog_transaction\">\\n          <attribute name=\"cog_transactionno\"/>\\n          <attribute name=\"cog_account\"/>\\n          <attribute name=\"cog_contact\"/>\\n          <attribute name=\"cog_transactionamount\"/>\\n          <attribute name=\"statuscode\"/>\\n          <attribute name=\"cog_paymentmethod\"/>\\n          <order attribute=\"cog_transactionno\" descending=\"true\"/>\\n          <attribute name=\"cog_transactionid\"/>\\n          <attribute name=\"cog_division\"/>\\n          <attribute name=\"cog_bankdetails\"/>\\n          <attribute name=\"cog_transactionfrom\"/>          \\n          <filter type=\"and\">\\n               <condition attribute=\"statuscode\" operator=\"eq\" value=\"1\"/>\\n          </filter>\\n     </entity>\\n</fetch>',",
				"     manifestType: 'model') ~> transaction",
				"DerivedDonorOrderKey, DerivedTransactionKey join(DonorOrderKey == TransactionKey,",
				"     joinType:'inner',",
				"     matchType:'exact',",
				"     ignoreSpaces: false,",
				"     broadcast: 'auto')~> joindonorordertransaction",
				"donororder derive(DonorOrderKey = toString(cog_donororderfrom)+iif(equals(isNull(cog_bankdetails),true()),' ',cog_bankdetails)+toString(cog_competition)+iif(cog_donororderfrom=='181310000',cog_contact,cog_account)+toString(cog_paymentmethod),",
				"          Target = 'cog_transaction') ~> DerivedDonorOrderKey",
				"transaction derive(TransactionKey = toString(cog_transactionfrom)+iif(equals(isNull(cog_bankdetails),true()),' ',cog_bankdetails)+toString(cog_division)+iif(cog_transactionfrom=='181310000',cog_contact,cog_account)+toString(cog_paymentmethod)) ~> DerivedTransactionKey",
				"joindonorordertransaction derive(new_statuscodeconsubmitted = iif(equals(donororder@statuscode,'181310001'),'181310013', '181310001'),",
				"          new_statuscodepmsubmitted = iif(equals(donororder@statuscode,'2'),'181310019', '2'),",
				"          new_statuscodeconsuccessonceoff = iif(equals(donororder@statuscode,'181310001'),'181310013', '181310001'),",
				"          new_statuscodeconsuccessmonthly = iif(equals(donororder@statuscode,'181310001'),'181310013', '181310001')) ~> submittecdolumns",
				"submittecdolumns sink(allowSchemaDrift: true,",
				"     validateSchema: false,",
				"     input(",
				"          cog_donororderid as string,",
				"          cog_transactionid as string",
				"     ),",
				"     partitionFileNames:['monthlygivingaggregation.csv'],",
				"     umask: 0022,",
				"     preCommands: [],",
				"     postCommands: [],",
				"     skipDuplicateMapInputs: true,",
				"     skipDuplicateMapOutputs: true,",
				"     partitionBy('hash', 1)) ~> mgaggregationfile"
			]
		}
	}
}