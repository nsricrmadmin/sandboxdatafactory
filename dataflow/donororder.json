{
	"name": "donororder",
	"properties": {
		"type": "MappingDataFlow",
		"typeProperties": {
			"sources": [
				{
					"linkedService": {
						"referenceName": "sandboxdatalake",
						"type": "LinkedServiceReference"
					},
					"name": "donororder"
				},
				{
					"linkedService": {
						"referenceName": "sandboxdatalake",
						"type": "LinkedServiceReference"
					},
					"name": "bankdetails"
				}
			],
			"sinks": [
				{
					"linkedService": {
						"referenceName": "nsridynamicssandox",
						"type": "LinkedServiceReference"
					},
					"name": "sandbox"
				}
			],
			"transformations": [
				{
					"name": "joindonororderbankdetails"
				},
				{
					"name": "accountcontact"
				},
				{
					"name": "contacttransaction"
				},
				{
					"name": "trxdate"
				}
			],
			"scriptLines": [
				"source(output(",
				"          cog_donororderid as string,",
				"          statecode as long,",
				"          statecodename as string,",
				"          statuscode as long,",
				"          statuscodename as string,",
				"          cog_donationtype as long,",
				"          cog_donationtypename as string,",
				"          cog_donororderfrom as long,",
				"          cog_donororderfromname as string,",
				"          cog_competition as long,",
				"          cog_competitionname as string,",
				"          cog_ticketamount as double,",
				"          cog_donationamount as double,",
				"          cog_account as string,",
				"          cog_accountname as string,",
				"          cog_contact as string,",
				"          cog_contactname as string,",
				"          cog_bankdetails as string,",
				"          cog_bankdetailsname as string,",
				"          cog_paymenttype as long,",
				"          cog_paymenttypename as string,",
				"          cog_paymentmethod as long,",
				"          cog_paymentmethodname as string",
				"     ),",
				"     allowSchemaDrift: false,",
				"     validateSchema: false,",
				"     limit: 100,",
				"     ignoreNoFilesFound: false,",
				"     entity: 'cog_donororder',",
				"     format: 'cdm',",
				"     manifestType: 'model',",
				"     folderPath: 'environments/nsridev/HOF Donor Orders',",
				"     fileSystem: 'power-platform-dataflows') ~> donororder",
				"source(output(",
				"          cog_bankdetailsid as string,",
				"          statecode as long,",
				"          statecodename as string,",
				"          cog_accountnumber as string,",
				"          cog_accountid as string,",
				"          cog_accounttype as long,",
				"          cog_accounttypename as string,",
				"          cog_bank as string,",
				"          cog_branchcode as string,",
				"          cog_contactid as string,",
				"          cog_cvc as string,",
				"          cog_expireydate as timestamp,",
				"          cog_accountidname as string,",
				"          cog_bankname as string,",
				"          cog_contactidname as string,",
				"          cog_creditcardtype as long,",
				"          cog_creditcardtypename as string,",
				"          cog_accountholder as string",
				"     ),",
				"     allowSchemaDrift: false,",
				"     validateSchema: false,",
				"     ignoreNoFilesFound: false,",
				"     entity: 'cog_bankdetails',",
				"     format: 'cdm',",
				"     manifestType: 'model',",
				"     folderPath: 'environments/nsridev/HOF Donor Orders',",
				"     fileSystem: 'power-platform-dataflows') ~> bankdetails",
				"donororder, bankdetails join(cog_bankdetails == cog_bankdetailsid,",
				"     joinType:'left',",
				"     matchType:'exact',",
				"     ignoreSpaces: false,",
				"     broadcast: 'auto')~> joindonororderbankdetails",
				"joindonororderbankdetails split((statuscodename==\"Converted\"||statuscodename==\"Paid Monthly\")&&cog_donororderfrom==181310000&&(cog_paymentmethodname==\"Debit Order\"||cog_paymentmethodname==\"Credit Card\"),",
				"     (statuscodename==\"Converted\"||statuscodename==\"Paid Monthly\")&&cog_donororderfrom==181310001,",
				"     disjoint: false) ~> accountcontact@(contactconvertedpaidmonthly, accountconvertedpaidmonthly)",
				"accountcontact@contactconvertedpaidmonthly aggregate(groupBy(cog_contact,",
				"          cog_contactname,",
				"          cog_bankdetails,",
				"          cog_paymentmethod,",
				"          cog_donororderfrom),",
				"     cog_donationamount = sum(cog_donationamount)) ~> contacttransaction",
				"contacttransaction derive(cog_transactiondate = currentUTC()) ~> trxdate",
				"trxdate sink(allowSchemaDrift: true,",
				"     validateSchema: false,",
				"     input(",
				"          cog_account as string,",
				"          cog_expireydate as timestamp,",
				"          versionnumber as long,",
				"          cog_searescuecampaignname as string,",
				"          createdon as timestamp,",
				"          cog_accountyominame as string,",
				"          cog_nameonvessel as string,",
				"          cog_branchcode as string,",
				"          statuscodename as string,",
				"          cog_bankname as string,",
				"          cog_paymenttype as integer,",
				"          cog_transactiondate as timestamp,",
				"          modifiedbyyominame as string,",
				"          cog_transactionamountpaid as decimal(38,2),",
				"          owneridtype as string,",
				"          cog_npodoc_sendmethodname as string,",
				"          cog_transactionamount_base as decimal(38,2),",
				"          cog_accountname as string,",
				"          modifiedbyname as string,",
				"          cog_delivery_receiptname as string,",
				"          cog_cancelledtransactionamount_base as decimal(38,2),",
				"          cog_delivery_receipt as boolean,",
				"          cog_paymentmethodname as string,",
				"          cog_cvc as string,",
				"          owneridname as string,",
				"          cog_administrationaccount as string,",
				"          overriddencreatedon as timestamp,",
				"          cog_npodoc_tax_transname as string,",
				"          cog_npodoc_equityname as string,",
				"          cog_delivery_equityname as string,",
				"          cog_npoadministrationenglishtext as string,",
				"          createdonbehalfbyyominame as string,",
				"          cog_transactionclosedate as timestamp,",
				"          modifiedonbehalfby as string,",
				"          exchangerate as decimal(38,10),",
				"          cog_transactionfromname as string,",
				"          cog_administrationcontactname as string,",
				"          cog_accountnumber as string,",
				"          cog_transactionsource as integer,",
				"          cog_npoadministrationafrikaanstext as string,",
				"          cog_searescuecampaign as integer,",
				"          cog_communicationlanguagename as string,",
				"          cog_delivery_tax_transname as string,",
				"          cog_stationid as string,",
				"          cog_transactionfrom as integer,",
				"          cog_batchno as string,",
				"          cog_quantity as integer,",
				"          statecode as integer,",
				"          timezoneruleversionnumber as integer,",
				"          cog_transactiontype as integer,",
				"          cog_transactionsourcename as string,",
				"          cog_paymenttypename as string,",
				"          cog_administrationaccountname as string,",
				"          cog_bank as string,",
				"          cog_cancelledtransactionamount as decimal(38,2),",
				"          cog_cancelledtransaction as string,",
				"          cog_npodoc_tax_annuallyname as string,",
				"          owninguser as string,",
				"          statuscode as integer,",
				"          cog_cancelledtransactionamountnegative as decimal(38,2),",
				"          cog_cancelledtransactionamountnegative_base as decimal(38,2),",
				"          cog_npodoc_receipt as boolean,",
				"          cog_donotcreatenpodocumentname as string,",
				"          cog_oldtaxcertificateyear as string,",
				"          cog_transactionno as string,",
				"          createdonbehalfbyname as string,",
				"          cog_delivery_tax_annually as boolean,",
				"          createdonbehalfby as string,",
				"          createdby as string,",
				"          cog_delivery_tax_trans as boolean,",
				"          utcconversiontimezonecode as integer,",
				"          cog_accounttypename as string,",
				"          cog_transactionfailurestatus as integer,",
				"          owningteam as string,",
				"          modifiedon as timestamp,",
				"          importsequencenumber as integer,",
				"          owneridyominame as string,",
				"          cog_contact as string,",
				"          cog_administeredname as string,",
				"          cog_oldtaxcertificatenumber as string,",
				"          cog_delivery_equity as boolean,",
				"          cog_oldreceiptnumber as string,",
				"          ownerid as string,",
				"          cog_divisionname as string,",
				"          cog_division as integer,",
				"          cog_transactiontypename as string,",
				"          cog_administrationcontact as string,",
				"          createdbyname as string,",
				"          cog_delivery_tax_annuallyname as string,",
				"          cog_cancelledtransactionname as string,",
				"          cog_stationidname as string,",
				"          cog_accountholder as string,",
				"          cog_contactyominame as string,",
				"          cog_accounttype as integer,",
				"          cog_npodoc_sendmethod as integer,",
				"          cog_fiscalyear as integer,",
				"          cog_nonprofitdocumentreference as string,",
				"          cog_transactionid as string,",
				"          cog_communicationlanguage as integer,",
				"          cog_campaign as string,",
				"          cog_donotcreatenpodocument as boolean,",
				"          transactioncurrencyid as string,",
				"          cog_administrationcontactyominame as string,",
				"          cog_npodoc_tax_annually as boolean,",
				"          modifiedby as string,",
				"          cog_campaignname as string,",
				"          cog_fiscalyearname as string,",
				"          cog_nonprofitdocumentreferencename as string,",
				"          createdbyyominame as string,",
				"          cog_transactionamountpaid_base as decimal(38,2),",
				"          transactioncurrencyidname as string,",
				"          cog_reversedreason as string,",
				"          cog_windirectinglogtrans as string,",
				"          cog_transactionamount as decimal(38,2),",
				"          owningbusinessunitname as string,",
				"          cog_transactiondescription as string,",
				"          cog_windirectddid as string,",
				"          cog_paymentmethod as integer,",
				"          cog_npodoc_tax_trans as boolean,",
				"          cog_contactname as string,",
				"          cog_bankreference as string,",
				"          modifiedonbehalfbyname as string,",
				"          cog_npodoc_equity as boolean,",
				"          cog_transactiondatepaid as timestamp,",
				"          cog_npodocumentafrikaanstext as string,",
				"          modifiedonbehalfbyyominame as string,",
				"          statecodename as string,",
				"          cog_administered as boolean,",
				"          cog_transactionfailurestatusname as string,",
				"          cog_administrationaccountyominame as string,",
				"          cog_npodoc_receiptname as string,",
				"          cog_npodocumentenglishtext as string,",
				"          cog_donationtypename as string,",
				"          owningbusinessunit as string,",
				"          cog_donationtype as integer,",
				"          {cog_account@cog_no@cog_erpvendornumber} as string,",
				"          {cog_administrationaccount@cog_no@cog_erpvendornumber} as string,",
				"          {modifiedonbehalfby@aadobjectid@azureactivedirectoryobjectid} as string,",
				"          {owninguser@aadobjectid@azureactivedirectoryobjectid} as string,",
				"          {createdonbehalfby@aadobjectid@azureactivedirectoryobjectid} as string,",
				"          {createdby@aadobjectid@azureactivedirectoryobjectid} as string,",
				"          {owningteam@aadobjectid_membershiptype@azureactivedirectoryobjectid} as string,",
				"          {owningteam@aadobjectid_membershiptype@membershiptype} as integer,",
				"          {modifiedby@aadobjectid@azureactivedirectoryobjectid} as string",
				"     ),",
				"     store: 'dynamics',",
				"     format: 'dynamicsformat',",
				"     entity: 'cog_transaction',",
				"     timeout: 30,",
				"     deletable: false,",
				"     insertable: true,",
				"     updateable: false,",
				"     upsertable: false,",
				"     skipDuplicateMapInputs: true,",
				"     skipDuplicateMapOutputs: true,",
				"     mapColumn(",
				"          cog_contact,",
				"          cog_paymentmethod,",
				"          cog_transactionfrom = cog_donororderfrom,",
				"          cog_transactionamount = cog_donationamount,",
				"          cog_transactiondate",
				"     )) ~> sandbox"
			]
		}
	}
}