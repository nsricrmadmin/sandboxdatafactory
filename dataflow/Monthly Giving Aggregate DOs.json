{
	"name": "Monthly Giving Aggregate DOs",
	"properties": {
		"description": "Contact, MG, Bankdetails",
		"type": "MappingDataFlow",
		"typeProperties": {
			"sources": [
				{
					"dataset": {
						"referenceName": "SandboxDonorOrder",
						"type": "DatasetReference"
					},
					"name": "donororder"
				},
				{
					"dataset": {
						"referenceName": "Sandbox_BankDetail",
						"type": "DatasetReference"
					},
					"name": "bankdetails"
				}
			],
			"sinks": [
				{
					"dataset": {
						"referenceName": "Sandbox_Transaction",
						"type": "DatasetReference"
					},
					"name": "accounttransactions"
				},
				{
					"dataset": {
						"referenceName": "Sandbox_Transaction",
						"type": "DatasetReference"
					},
					"name": "ContactTransactions"
				}
			],
			"transformations": [
				{
					"name": "joindonororderbankdetails"
				},
				{
					"name": "From"
				},
				{
					"name": "aggregatefromaccount"
				},
				{
					"name": "aggregatefromcontact"
				},
				{
					"name": "TransactionFields"
				}
			],
			"scriptLines": [
				"source(output(",
				"          {@odata.etag} as string,",
				"          cog_account as string,",
				"          cog_bankdetails as string,",
				"          cog_contact as string,",
				"          transactioncurrencyid as string,",
				"          cog_competition as string,",
				"          cog_datepaid as string,",
				"          cog_donationamount as string,",
				"          cog_donororderfrom as string,",
				"          cog_donororderid as string,",
				"          cog_name as string,",
				"          cog_paymentmethod as string,",
				"          cog_paymenttype as string,",
				"          cog_totalticketamount as string,",
				"          statecode as string,",
				"          statuscode as string",
				"     ),",
				"     allowSchemaDrift: true,",
				"     validateSchema: false,",
				"     query: '<fetch version=\"1.0\" mapping=\"logical\" no-lock=\"false\" distinct=\"true\">\\n     <entity name=\"cog_donororder\">\\n          <attribute name=\"cog_name\"/>\\n          <attribute name=\"cog_donororderid\"/>\\n          <attribute name=\"cog_contact\"/>\\n          <attribute name=\"cog_account\"/>\\n          <attribute name=\"statuscode\"/>\\n          <attribute name=\"cog_totalticketamount\"/>\\n          <attribute name=\"cog_donationamount\"/>\\n          <attribute name=\"cog_datepaid\"/>\\n          <attribute name=\"cog_bankdetails\"/>\\n          <attribute name=\"cog_competition\"/>\\n          <attribute name=\"cog_paymentmethod\"/>\\n          <attribute name=\"cog_paymenttype\"/>\\n          <attribute name=\"cog_donororderfrom\"/>\\n          <attribute name=\"statecode\"/>\\n          <filter type=\"and\">\\n               <condition attribute=\"statuscode\" operator=\"in\">\\n                    <value>181310001</value>\\n                    <value>2</value>\\n               </condition>\\n               <condition attribute=\"cog_competition\" operator=\"eq\" value=\"181310001\"/>\\n          </filter>\\n     </entity>\\n</fetch>',",
				"     manifestType: 'model') ~> donororder",
				"source(output(",
				"          {@odata.etag} as string,",
				"          cog_bank as string,",
				"          cog_contactid as string,",
				"          cog_accountholder as string,",
				"          cog_accountnumber as string,",
				"          cog_accounttype as string,",
				"          cog_bankdetailsid as string,",
				"          cog_branchcode as string,",
				"          cog_cvc as string,",
				"          cog_expireydate as string,",
				"          statecode as string",
				"     ),",
				"     allowSchemaDrift: true,",
				"     validateSchema: false,",
				"     query: '<fetch version=\"1.0\" mapping=\"logical\" no-lock=\"false\" distinct=\"true\">\\n     <entity name=\"cog_bankdetails\">\\n          <attribute name=\"cog_accountnumber\"/>\\n          <attribute name=\"cog_expireydate\"/>\\n          <attribute name=\"cog_cvc\"/>\\n          <attribute name=\"cog_branchcode\"/>\\n          <attribute name=\"cog_bank\"/>\\n          <attribute name=\"cog_accounttype\"/>\\n          <attribute name=\"cog_contactid\"/>\\n          <attribute name=\"cog_bankdetailsid\"/>\\n          <attribute name=\"cog_accountholder\"/>\\n          <attribute name=\"statecode\"/>\\n          <filter type=\"and\">\\n               <condition attribute=\"statecode\" operator=\"eq\" value=\"0\"/>\\n               <condition attribute=\"cog_contactid\" operator=\"not-null\"/>\\n          </filter>\\n     </entity>\\n</fetch>',",
				"     manifestType: 'model') ~> bankdetails",
				"donororder, bankdetails join(cog_bankdetails == cog_bankdetailsid,",
				"     joinType:'left',",
				"     matchType:'exact',",
				"     ignoreSpaces: false,",
				"     broadcast: 'auto')~> joindonororderbankdetails",
				"TransactionFields split(cog_donororderfrom=='181310001',",
				"     cog_donororderfrom=='181310000',",
				"     disjoint: false) ~> From@(FromAccount, FromContact)",
				"From@FromAccount aggregate(groupBy(cog_competition,",
				"          cog_account,",
				"          cog_paymentmethod,",
				"          cog_bankdetails,",
				"          cog_donororderfrom),",
				"     cog_transactionamount = sum(toInteger(cog_transactionamount)),",
				"          each(match(name=='new_statecode'||name=='new_statuscode'||name=='cog_accountnumber'||name=='cog_expireydate'||name=='cog_cvc'||name=='cog_branchcode'||name=='cog_bank'||name=='cog_accounttype'||name=='cog_accountholder'||name=='cog_contact'||name=='cog_transactiondate'), $$ = first($$))) ~> aggregatefromaccount",
				"From@FromContact aggregate(groupBy(cog_competition,",
				"          cog_contact,",
				"          cog_paymentmethod,",
				"          cog_bankdetails,",
				"          cog_donororderfrom),",
				"     cog_transactionamount = sum(toInteger(cog_transactionamount)),",
				"          each(match(name=='new_statecode'||name=='new_statuscode'||name=='cog_accountnumber'||name=='cog_expireydate'||name=='cog_cvc'||name=='cog_branchcode'||name=='cog_bank'||name=='cog_accounttype'||name=='cog_accountholder'||name=='cog_transactiondate'), $$ = first($$))) ~> aggregatefromcontact",
				"joindonororderbankdetails derive(cog_transactionamount = iif(equals(isNull(cog_donationamount),true()),cog_totalticketamount,cog_donationamount),",
				"          cog_transactiondate = currentUTC(),",
				"          new_statuscode = case (\r",
				"  isNull(cog_datepaid)==true()&&statuscode=='181310001','1',  \r",
				"  isNull(cog_datepaid)==false()&&statuscode=='181310001','2', \r",
				"  isNull(cog_datepaid)==false()&&statuscode=='2','1'\r",
				"  ),",
				"          new_statecode = case (\r",
				"  isNull(cog_datepaid)==true()&&statuscode=='181310001','0',  \r",
				"  isNull(cog_datepaid)==false()&&statuscode=='181310001','0', \r",
				"  isNull(cog_datepaid)==false()&&statuscode=='2','1'\r",
				"  )) ~> TransactionFields",
				"aggregatefromaccount sink(allowSchemaDrift: true,",
				"     validateSchema: false,",
				"     deletable:false,",
				"     insertable:true,",
				"     updateable:false,",
				"     upsertable:false,",
				"     mapColumn(",
				"          cog_division = cog_competition,",
				"          cog_account,",
				"          cog_contact,",
				"          cog_paymentmethod,",
				"          cog_bankdetails,",
				"          cog_transactionamount,",
				"          cog_transactionfrom = cog_donororderfrom,",
				"          cog_transactiondate,",
				"          cog_bank,",
				"          cog_accounttype,",
				"          cog_branchcode,",
				"          cog_cvc,",
				"          cog_expireydate,",
				"          cog_accountholder,",
				"          cog_accountnumber,",
				"          statuscode = new_statuscode,",
				"          statecode = new_statecode",
				"     )) ~> accounttransactions",
				"aggregatefromcontact sink(allowSchemaDrift: true,",
				"     validateSchema: false,",
				"     deletable:false,",
				"     insertable:true,",
				"     updateable:false,",
				"     upsertable:false,",
				"     skipDuplicateMapInputs: true,",
				"     skipDuplicateMapOutputs: true,",
				"     mapColumn(",
				"          cog_division = cog_competition,",
				"          cog_contact,",
				"          cog_paymentmethod,",
				"          cog_bankdetails,",
				"          cog_transactionamount,",
				"          cog_transactionfrom = cog_donororderfrom,",
				"          cog_bank,",
				"          cog_accountholder,",
				"          cog_accountnumber,",
				"          cog_accounttype,",
				"          cog_branchcode,",
				"          cog_cvc,",
				"          cog_expireydate,",
				"          cog_transactiondate,",
				"          statuscode = new_statuscode,",
				"          statecode = new_statecode",
				"     )) ~> ContactTransactions"
			]
		}
	}
}