{
	"name": "D365 Transaction_copy1",
	"properties": {
		"description": "Contact, MG, Bankdetails",
		"type": "MappingDataFlow",
		"typeProperties": {
			"sources": [
				{
					"dataset": {
						"referenceName": "DataverseDonorOrder",
						"type": "DatasetReference"
					},
					"name": "donororder"
				},
				{
					"dataset": {
						"referenceName": "DataverseBankDetail",
						"type": "DatasetReference"
					},
					"name": "bankdetails"
				}
			],
			"sinks": [
				{
					"dataset": {
						"referenceName": "DataverseTransaction",
						"type": "DatasetReference"
					},
					"name": "SandboxUpdate"
				}
			],
			"transformations": [
				{
					"name": "joindonororderbankdetails"
				},
				{
					"name": "DrivedTxDateanndAmount"
				},
				{
					"name": "AggregateTransaction"
				},
				{
					"name": "FilterDonorOrders"
				},
				{
					"name": "derivedColumnTxDateKey"
				}
			],
			"scriptLines": [
				"source(output(",
				"          cog_donororderid as string,",
				"          cog_paymentmadename as string,",
				"          cog_donationreasonname as string,",
				"          cog_resendname as string,",
				"          cog_upsell as boolean,",
				"          modifiedon as timestamp,",
				"          cog_donororderfromname as string,",
				"          overriddencreatedon as timestamp,",
				"          statuscodename as string,",
				"          cog_dateassigned as timestamp,",
				"          cog_delivery_tax_transname as string,",
				"          cog_balanceamount_base as decimal(38,2),",
				"          cog_totalticketamount_base as decimal(38,0),",
				"          transactioncurrencyidname as string,",
				"          cog_npodoc_tax_transname as string,",
				"          cog_searescuecampaignname as string,",
				"          cog_bankdetailsname as string,",
				"          cog_leadtype as integer,",
				"          cog_followupdate as timestamp,",
				"          cog_npodoc_receipt as boolean,",
				"          cog_sendticketsname as string,",
				"          cog_description as string,",
				"          cog_balanceamount as decimal(38,2),",
				"          cog_communicationlanguagename as string,",
				"          cog_campaignname as string,",
				"          cog_totalticketamount_state as integer,",
				"          cog_accessdb_lnglogno as string,",
				"          cog_sendwelcomepackdate as timestamp,",
				"          statuscode as integer,",
				"          cog_sendwelcomepackname as string,",
				"          cog_dateconverted as timestamp,",
				"          cog_contactyominame as string,",
				"          cog_paymentmethodname as string,",
				"          cog_paidamount as decimal(38,0),",
				"          cog_leadtypename as string,",
				"          cog_npodoc_tax_annuallyname as string,",
				"          cog_source as integer,",
				"          cog_ticketamount as decimal(38,0),",
				"          statecodename as string,",
				"          cog_paymenttype as integer,",
				"          exchangerate as decimal(38,10),",
				"          cog_npodoc_equityname as string,",
				"          cog_searescuecampaign as integer,",
				"          cog_npodoc_tax_trans as boolean,",
				"          cog_npoadministrationafrikaanstext as string,",
				"          createdon as timestamp,",
				"          cog_cancellreasonname as string,",
				"          cog_paymentmethod as integer,",
				"          cog_ticketamount_base as decimal(38,0),",
				"          cog_administrationaccountyominame as string,",
				"          cog_nameonvessel as string,",
				"          cog_npodoc_sendmethod as integer,",
				"          cog_donotcreatenpodocumentname as string,",
				"          cog_resend as boolean,",
				"          cog_communicationlanguage as integer,",
				"          cog_competition as integer,",
				"          cog_donationreason as integer,",
				"          owneridyominame as string,",
				"          cog_sendpaymentdetails as boolean,",
				"          timezoneruleversionnumber as integer,",
				"          cof_datecancelled as timestamp,",
				"          owningbusinessunitname as string,",
				"          cog_administrationaccountname as string,",
				"          cog_sendpaymentdetailsdate as timestamp,",
				"          cog_npodoc_receiptname as string,",
				"          cog_paymenttypename as string,",
				"          cog_transactionname as string,",
				"          cog_datasource as integer,",
				"          cog_stationname as string,",
				"          createdonbehalfbyname as string,",
				"          cog_delivery_receipt as boolean,",
				"          owneridtype as string,",
				"          cog_cancellreason as integer,",
				"          cog_delivery_tax_trans as boolean,",
				"          owneridname as string,",
				"          modifiedonbehalfbyname as string,",
				"          cog_contactname as string,",
				"          cog_delivery_equityname as string,",
				"          cog_accessdb_strcompanyname as string,",
				"          cog_npodoc_equity as boolean,",
				"          cog_npodocumentenglishtext as string,",
				"          cog_totalticketamount as decimal(38,0),",
				"          cog_bankreference as string,",
				"          cog_donorleadname as string,",
				"          cog_name as string,",
				"          cog_sendwelcomepack as boolean,",
				"          cog_npoadministrationenglishtext as string,",
				"          cog_donationamount_base as decimal(38,0),",
				"          cog_sendpaymentdetailsname as string,",
				"          cog_datebanked as timestamp,",
				"          cog_paidamount_base as decimal(38,0),",
				"          cog_npodoc_tax_annually as boolean,",
				"          cog_completedonororder as boolean,",
				"          cog_sourcename as string,",
				"          createdonbehalfbyyominame as string,",
				"          cog_noofdonortickets_state as integer,",
				"          cog_noofdonortickets as integer,",
				"          cog_accountname as string,",
				"          cog_administeredname as string,",
				"          cog_donationamount as decimal(38,0),",
				"          cog_administrationcontactyominame as string,",
				"          cog_assignticketnumbersname as string,",
				"          cog_datepaid as timestamp,",
				"          cog_delivery_receiptname as string,",
				"          cog_numberoftickets as integer,",
				"          cog_noofdonortickets_date as timestamp,",
				"          cog_donororderfrom as integer,",
				"          cog_createticketrowsname as string,",
				"          cog_donationtype as integer,",
				"          createdbyname as string,",
				"          cog_accountyominame as string,",
				"          modifiedbyyominame as string,",
				"          cog_donationtypename as string,",
				"          cog_administrationcontactname as string,",
				"          modifiedonbehalfbyyominame as string,",
				"          utcconversiontimezonecode as integer,",
				"          cog_sendtickets as boolean,",
				"          cog_upsellname as string,",
				"          cog_assignticketnumbers as boolean,",
				"          importsequencenumber as integer,",
				"          statecode as integer,",
				"          cog_paymentmade as boolean,",
				"          versionnumber as long,",
				"          cog_delivery_equity as boolean,",
				"          cog_npodocumentafrikaanstext as string,",
				"          cog_completedonorordername as string,",
				"          cog_npodoc_sendmethodname as string,",
				"          cog_totalticketamount_date as timestamp,",
				"          modifiedbyname as string,",
				"          createdbyyominame as string,",
				"          cog_administered as boolean,",
				"          cog_competitionname as string,",
				"          cog_donotcreatenpodocument as boolean,",
				"          cog_shutoffdate as timestamp,",
				"          cog_createticketrows as boolean,",
				"          cog_datasourcename as string,",
				"          cog_donorlead as string,",
				"          cog_station as string,",
				"          createdonbehalfby as string,",
				"          cog_administrationcontact as string,",
				"          owninguser as string,",
				"          cog_bankdetails as string,",
				"          cog_contact as string,",
				"          modifiedby as string,",
				"          transactioncurrencyid as string,",
				"          cog_administrationaccount as string,",
				"          modifiedonbehalfby as string,",
				"          cog_transaction as string,",
				"          ownerid as string,",
				"          cog_campaign as string,",
				"          {@odata.etag} as string,",
				"          createdby as string,",
				"          owningbusinessunit as string,",
				"          cog_account as string,",
				"          owningteam as string",
				"     ),",
				"     allowSchemaDrift: false,",
				"     validateSchema: false,",
				"     manifestType: 'model') ~> donororder",
				"source(output(",
				"          createdonbehalfbyyominame as string,",
				"          statecode as integer,",
				"          statecodename as string,",
				"          cog_contactidname as string,",
				"          overriddencreatedon as timestamp,",
				"          cog_accountidname as string,",
				"          cog_creditcardtype as integer,",
				"          cog_accountnumber as string,",
				"          importsequencenumber as integer,",
				"          organizationidname as string,",
				"          cog_accountholder as string,",
				"          cog_bankname as string,",
				"          cog_contactidyominame as string,",
				"          utcconversiontimezonecode as integer,",
				"          createdbyyominame as string,",
				"          modifiedbyname as string,",
				"          versionnumber as long,",
				"          modifiedbyyominame as string,",
				"          timezoneruleversionnumber as integer,",
				"          statuscodename as string,",
				"          cog_accountidyominame as string,",
				"          modifiedon as timestamp,",
				"          cog_creditcardtypename as string,",
				"          cog_bankdetailsid as string,",
				"          cog_accounttype as integer,",
				"          modifiedonbehalfbyyominame as string,",
				"          statuscode as integer,",
				"          createdbyname as string,",
				"          createdon as timestamp,",
				"          createdonbehalfbyname as string,",
				"          modifiedonbehalfbyname as string,",
				"          cog_cvc as string,",
				"          cog_accounttypename as string,",
				"          cog_expireydate as timestamp,",
				"          cog_branchcode as string,",
				"          cog_accountid as string,",
				"          cog_bank as string,",
				"          createdonbehalfby as string,",
				"          cog_contactid as string,",
				"          modifiedby as string,",
				"          modifiedonbehalfby as string,",
				"          {@odata.etag} as string,",
				"          createdby as string,",
				"          organizationid as string",
				"     ),",
				"     allowSchemaDrift: true,",
				"     validateSchema: false,",
				"     manifestType: 'model') ~> bankdetails",
				"FilterDonorOrders, bankdetails join(cog_bankdetails == cog_bankdetailsid,",
				"     joinType:'left',",
				"     matchType:'exact',",
				"     ignoreSpaces: false,",
				"     broadcast: 'auto')~> joindonororderbankdetails",
				"joindonororderbankdetails derive(cog_transactionamount = iif(isNull(cog_ticketamount),cog_donationamount,cog_ticketamount)) ~> DrivedTxDateanndAmount",
				"DrivedTxDateanndAmount aggregate(groupBy(cog_division = cog_competition,",
				"          cog_contact,",
				"          cog_paymentmethod,",
				"          cog_bankdetailsid),",
				"     cog_transactionamount = sum(cog_transactionamount),",
				"          each(match(name=='cog_donororderfrom'), $$ = first($$))) ~> AggregateTransaction",
				"donororder filter(statuscode==181310001&&\r",
				"cog_competition==181310001&&\r",
				"cog_donororderfrom==181310000&&\r",
				"statecode==0&&\r",
				"(cog_paymentmethod==181310001||cog_paymentmethod==181310003)&&\r",
				"cog_contact=='7de6eb40-aa2a-ed11-9db1-000d3ab86f6c') ~> FilterDonorOrders",
				"AggregateTransaction derive(cog_transactiondate = currentUTC()) ~> derivedColumnTxDateKey",
				"derivedColumnTxDateKey sink(allowSchemaDrift: true,",
				"     validateSchema: false,",
				"     deletable:false,",
				"     insertable:true,",
				"     updateable:false,",
				"     upsertable:false,",
				"     mapColumn(",
				"          cog_division,",
				"          cog_contact,",
				"          cog_paymentmethod,",
				"          cog_bankdetail = cog_bankdetailsid,",
				"          cog_transactionamount,",
				"          cog_transactionfrom = cog_donororderfrom,",
				"          cog_transactiondate",
				"     )) ~> SandboxUpdate"
			]
		}
	}
}