{
	"name": "D365 Transaction_copy1",
	"properties": {
		"description": "Contact, MG, Bankdetails",
		"type": "MappingDataFlow",
		"typeProperties": {
			"sources": [
				{
					"dataset": {
						"referenceName": "DataverseDonorOrder",
						"type": "DatasetReference"
					},
					"name": "donororder"
				},
				{
					"dataset": {
						"referenceName": "DataverseBankDetail",
						"type": "DatasetReference"
					},
					"name": "bankdetails"
				}
			],
			"sinks": [
				{
					"linkedService": {
						"referenceName": "sandbox",
						"type": "LinkedServiceReference"
					},
					"name": "CreateTransaction"
				}
			],
			"transformations": [
				{
					"name": "joindonororderbankdetails"
				},
				{
					"name": "DrivedTxDateanndAmount"
				},
				{
					"name": "AggregateTransaction"
				},
				{
					"name": "derivedColumnTxDateKey"
				}
			],
			"scriptLines": [
				"source(output(",
				"          {@odata.etag} as string,",
				"          cog_bankdetails as string,",
				"          cog_contact as string,",
				"          ownerid as string,",
				"          transactioncurrencyid as string,",
				"          cog_competition as string,",
				"          cog_donationamount as string,",
				"          cog_donationtype as string,",
				"          cog_donororderfrom as string,",
				"          cog_donororderid as string,",
				"          cog_name as string,",
				"          cog_paymentmethod as string,",
				"          cog_paymenttype as string,",
				"          cog_ticketamount as string,",
				"          statuscode as string",
				"     ),",
				"     allowSchemaDrift: false,",
				"     validateSchema: false,",
				"     query: '<fetch version=\"1.0\" mapping=\"logical\" no-lock=\"false\" distinct=\"true\">\\n     <entity name=\"cog_donororder\">\\n          <attribute name=\"cog_name\"/>\\n          <attribute name=\"cog_donororderid\"/>\\n          <attribute name=\"cog_contact\"/>\\n          <attribute name=\"statecode\"/>\\n          <attribute name=\"statuscode\"/>\\n          <attribute name=\"cog_bankdetails\"/>\\n          <attribute name=\"cog_competition\"/>\\n          <attribute name=\"cog_ticketamount\"/>\\n          <attribute name=\"cog_donationamount\"/>\\n          <attribute name=\"cog_paymentmethod\"/>\\n          <attribute name=\"cog_paymenttype\"/>\\n          <attribute name=\"cog_donororderfrom\"/>\\n          <attribute name=\"cog_donationtype\"/>\\n          <attribute name=\"ownerid\"/>\\n          <order attribute=\"cog_contact\" descending=\"false\"/>\\n          <filter type=\"and\">\\n               <condition attribute=\"statuscode\" operator=\"in\">\\n                    <value>181310001</value>\\n               </condition>\\n               <condition attribute=\"cog_competition\" operator=\"eq\" value=\"181310001\"/>\\n               <condition attribute=\"cog_donororderfrom\" operator=\"eq\" value=\"181310000\"/>\\n               <condition attribute=\"cog_bankdetails\" operator=\"not-null\"/>\\n               <filter type=\"or\">\\n                    <condition attribute=\"cog_paymentmethod\" operator=\"eq\" value=\"181310001\"/>\\n                    <condition attribute=\"cog_paymentmethod\" operator=\"eq\" value=\"181310003\"/>\\n               </filter>\\n          </filter>\\n     </entity>\\n</fetch>',",
				"     manifestType: 'model') ~> donororder",
				"source(output(",
				"          createdonbehalfbyyominame as string,",
				"          statecode as integer,",
				"          statecodename as string,",
				"          cog_contactidname as string,",
				"          overriddencreatedon as timestamp,",
				"          cog_accountidname as string,",
				"          cog_creditcardtype as integer,",
				"          cog_accountnumber as string,",
				"          importsequencenumber as integer,",
				"          organizationidname as string,",
				"          cog_accountholder as string,",
				"          cog_bankname as string,",
				"          cog_contactidyominame as string,",
				"          utcconversiontimezonecode as integer,",
				"          createdbyyominame as string,",
				"          modifiedbyname as string,",
				"          versionnumber as long,",
				"          modifiedbyyominame as string,",
				"          timezoneruleversionnumber as integer,",
				"          statuscodename as string,",
				"          cog_accountidyominame as string,",
				"          modifiedon as timestamp,",
				"          cog_creditcardtypename as string,",
				"          cog_bankdetailsid as string,",
				"          cog_accounttype as integer,",
				"          modifiedonbehalfbyyominame as string,",
				"          statuscode as integer,",
				"          createdbyname as string,",
				"          createdon as timestamp,",
				"          createdonbehalfbyname as string,",
				"          modifiedonbehalfbyname as string,",
				"          cog_cvc as string,",
				"          cog_accounttypename as string,",
				"          cog_expireydate as timestamp,",
				"          cog_branchcode as string,",
				"          cog_accountid as string,",
				"          cog_bank as string,",
				"          createdonbehalfby as string,",
				"          cog_contactid as string,",
				"          modifiedby as string,",
				"          modifiedonbehalfby as string,",
				"          {@odata.etag} as string,",
				"          createdby as string,",
				"          organizationid as string",
				"     ),",
				"     allowSchemaDrift: true,",
				"     validateSchema: false,",
				"     manifestType: 'model') ~> bankdetails",
				"donororder, bankdetails join(cog_contact == cog_contactid,",
				"     joinType:'left',",
				"     matchType:'exact',",
				"     ignoreSpaces: false,",
				"     broadcast: 'auto')~> joindonororderbankdetails",
				"joindonororderbankdetails derive(cog_transactionamount = iif(isNull(cog_ticketamount),cog_donationamount,cog_ticketamount)) ~> DrivedTxDateanndAmount",
				"DrivedTxDateanndAmount aggregate(groupBy(cog_competition,",
				"          cog_contact,",
				"          cog_paymentmethod,",
				"          cog_bankdetails),",
				"     cog_transactionamount = sum(toInteger(cog_transactionamount)),",
				"          each(match(name=='cog_donororderfrom'), $$ = first($$))) ~> AggregateTransaction",
				"AggregateTransaction derive(cog_transactiondate = currentUTC(),",
				"          cog_trans_do_contact = cog_bankdetails+cog_contact+toString(cog_competition)+toString(cog_paymentmethod)) ~> derivedColumnTxDateKey",
				"derivedColumnTxDateKey sink(allowSchemaDrift: true,",
				"     validateSchema: false,",
				"     input(",
				"          cog_account as string,",
				"          cog_expireydate as timestamp,",
				"          versionnumber as long,",
				"          cog_searescuecampaignname as string,",
				"          createdon as timestamp,",
				"          cog_accountyominame as string,",
				"          cog_nameonvessel as string,",
				"          cog_branchcode as string,",
				"          statuscodename as string,",
				"          cog_bankname as string,",
				"          cog_paymenttype as integer,",
				"          cog_transactiondate as timestamp,",
				"          modifiedbyyominame as string,",
				"          cog_transactionamountpaid as decimal(38,2),",
				"          owneridtype as string,",
				"          cog_npodoc_sendmethodname as string,",
				"          cog_transactionamount_base as decimal(38,2),",
				"          cog_accountname as string,",
				"          modifiedbyname as string,",
				"          cog_cancelledtransactionamount_base as decimal(38,2),",
				"          cog_delivery_receipt as boolean,",
				"          cog_paymentmethodname as string,",
				"          cog_cvc as string,",
				"          owneridname as string,",
				"          cog_trans_do_contact as string,",
				"          cog_administrationaccount as string,",
				"          overriddencreatedon as timestamp,",
				"          cog_cancelledtransactionamountnegative as decimal(38,2),",
				"          cog_npodoc_tax_transname as string,",
				"          cog_npodoc_equityname as string,",
				"          cog_delivery_equityname as string,",
				"          cog_npoadministrationenglishtext as string,",
				"          createdonbehalfbyyominame as string,",
				"          cog_transactionclosedate as timestamp,",
				"          modifiedonbehalfby as string,",
				"          exchangerate as decimal(38,10),",
				"          cog_transactionfromname as string,",
				"          owneridyominame as string,",
				"          cog_transactionsource as integer,",
				"          cog_npoadministrationafrikaanstext as string,",
				"          cog_searescuecampaign as integer,",
				"          cog_communicationlanguagename as string,",
				"          cog_delivery_tax_transname as string,",
				"          cog_stationid as string,",
				"          cog_transactionfrom as integer,",
				"          cog_delivery_receiptname as string,",
				"          cog_quantity as integer,",
				"          statecode as integer,",
				"          cog_npodocumentenglishtext as string,",
				"          timezoneruleversionnumber as integer,",
				"          cog_transactiontype as integer,",
				"          cog_transactionsourcename as string,",
				"          cog_accountnumber as string,",
				"          cog_administrationaccountname as string,",
				"          cog_bank as string,",
				"          cog_cancelledtransactionamount as decimal(38,2),",
				"          cog_cancelledtransaction as string,",
				"          cog_npodoc_tax_annuallyname as string,",
				"          owninguser as string,",
				"          statuscode as integer,",
				"          cog_batchno as string,",
				"          cog_cancelledtransactionamountnegative_base as decimal(38,2),",
				"          cog_npodoc_receipt as boolean,",
				"          cog_donotcreatenpodocumentname as string,",
				"          cog_oldtaxcertificateyear as string,",
				"          cog_transactionno as string,",
				"          createdonbehalfbyname as string,",
				"          cog_paymenttypename as string,",
				"          cog_delivery_tax_annually as boolean,",
				"          createdonbehalfby as string,",
				"          createdby as string,",
				"          utcconversiontimezonecode as integer,",
				"          cog_contact as string,",
				"          cog_accounttypename as string,",
				"          cog_transactionfailurestatus as integer,",
				"          owningteam as string,",
				"          modifiedon as timestamp,",
				"          importsequencenumber as integer,",
				"          cog_administrationcontactname as string,",
				"          cog_administeredname as string,",
				"          cog_oldtaxcertificatenumber as string,",
				"          cog_delivery_equity as boolean,",
				"          cog_contactyominame as string,",
				"          ownerid as string,",
				"          cog_divisionname as string,",
				"          cog_division as integer,",
				"          cog_transactiontypename as string,",
				"          cog_administrationcontact as string,",
				"          createdbyname as string,",
				"          cog_delivery_tax_annuallyname as string,",
				"          cog_cancelledtransactionname as string,",
				"          cog_stationidname as string,",
				"          cog_transactionid as string,",
				"          cog_accountholder as string,",
				"          cog_bankdetailsname as string,",
				"          cog_accounttype as integer,",
				"          cog_npodoc_sendmethod as integer,",
				"          cog_fiscalyear as integer,",
				"          cog_nonprofitdocumentreference as string,",
				"          cog_bankdetails as string,",
				"          cog_communicationlanguage as integer,",
				"          cog_campaign as string,",
				"          cog_donotcreatenpodocument as boolean,",
				"          transactioncurrencyid as string,",
				"          cog_delivery_tax_trans as boolean,",
				"          cog_administrationcontactyominame as string,",
				"          cog_npodoc_tax_annually as boolean,",
				"          modifiedby as string,",
				"          cog_oldreceiptnumber as string,",
				"          cog_fiscalyearname as string,",
				"          cog_nonprofitdocumentreferencename as string,",
				"          createdbyyominame as string,",
				"          cog_transactionamountpaid_base as decimal(38,2),",
				"          transactioncurrencyidname as string,",
				"          cog_reversedreason as string,",
				"          cog_windirectinglogtrans as string,",
				"          cog_transactionamount as decimal(38,2),",
				"          owningbusinessunitname as string,",
				"          cog_transactiondescription as string,",
				"          cog_windirectddid as string,",
				"          cog_paymentmethod as integer,",
				"          cog_npodoc_tax_trans as boolean,",
				"          cog_contactname as string,",
				"          cog_bankreference as string,",
				"          modifiedonbehalfbyname as string,",
				"          cog_npodoc_equity as boolean,",
				"          cog_transactiondatepaid as timestamp,",
				"          cog_npodocumentafrikaanstext as string,",
				"          modifiedonbehalfbyyominame as string,",
				"          statecodename as string,",
				"          cog_administered as boolean,",
				"          cog_transactionfailurestatusname as string,",
				"          cog_administrationaccountyominame as string,",
				"          cog_npodoc_receiptname as string,",
				"          cog_campaignname as string,",
				"          cog_donationtypename as string,",
				"          owningbusinessunit as string,",
				"          cog_donationtype as integer,",
				"          {cog_account@cog_no@cog_erpvendornumber} as string,",
				"          {cog_administrationaccount@cog_no@cog_erpvendornumber} as string,",
				"          {modifiedonbehalfby@aadobjectid@azureactivedirectoryobjectid} as string,",
				"          {cog_cancelledtransaction@cog_donorodercontactaggregation@cog_bankdetails} as string,",
				"          {cog_cancelledtransaction@cog_donorodercontactaggregation@cog_contact} as string,",
				"          {cog_cancelledtransaction@cog_donorodercontactaggregation@cog_division} as integer,",
				"          {cog_cancelledtransaction@cog_donorodercontactaggregation@cog_paymentmethod} as integer,",
				"          {owninguser@aadobjectid@azureactivedirectoryobjectid} as string,",
				"          {createdonbehalfby@aadobjectid@azureactivedirectoryobjectid} as string,",
				"          {createdby@aadobjectid@azureactivedirectoryobjectid} as string,",
				"          {owningteam@aadobjectid_membershiptype@azureactivedirectoryobjectid} as string,",
				"          {owningteam@aadobjectid_membershiptype@membershiptype} as integer,",
				"          {modifiedby@aadobjectid@azureactivedirectoryobjectid} as string",
				"     ),",
				"     store: 'dynamics',",
				"     format: 'dynamicsformat',",
				"     entity: 'cog_transaction',",
				"     timeout: 30,",
				"     deletable: false,",
				"     insertable: true,",
				"     updateable: false,",
				"     upsertable: false,",
				"     skipDuplicateMapInputs: true,",
				"     skipDuplicateMapOutputs: true,",
				"     mapColumn(",
				"          cog_transactiondate,",
				"          cog_contact,",
				"          cog_transactionamount,",
				"          cog_paymentmethod,",
				"          cog_bankdetails,",
				"          cog_transactionfrom = cog_donororderfrom,",
				"          cog_division = cog_competition,",
				"          cog_trans_do_contact",
				"     )) ~> CreateTransaction"
			]
		}
	}
}